// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const STAGEOPTION = 57546
const SQL_SMALL_RESULT = 57547
const SQL_BIG_RESULT = 57548
const SQL_BUFFER_RESULT = 57549
const LOW_PRIORITY = 57550
const HIGH_PRIORITY = 57551
const DELAYED = 57552
const CREATE = 57553
const ALTER = 57554
const DROP = 57555
const RENAME = 57556
const ANALYZE = 57557
const ADD = 57558
const RETURNS = 57559
const SCHEMA = 57560
const TABLE = 57561
const SEQUENCE = 57562
const INDEX = 57563
const VIEW = 57564
const TO = 57565
const IGNORE = 57566
const IF = 57567
const PRIMARY = 57568
const COLUMN = 57569
const CONSTRAINT = 57570
const SPATIAL = 57571
const FULLTEXT = 57572
const FOREIGN = 57573
const KEY_BLOCK_SIZE = 57574
const SHOW = 57575
const DESCRIBE = 57576
const EXPLAIN = 57577
const DATE = 57578
const ESCAPE = 57579
const REPAIR = 57580
const OPTIMIZE = 57581
const TRUNCATE = 57582
const MAXVALUE = 57583
const PARTITION = 57584
const REORGANIZE = 57585
const LESS = 57586
const THAN = 57587
const PROCEDURE = 57588
const TRIGGER = 57589
const STATUS = 57590
const VARIABLES = 57591
const ROLE = 57592
const PROXY = 57593
const AVG_ROW_LENGTH = 57594
const STORAGE = 57595
const DISK = 57596
const MEMORY = 57597
const CHECKSUM = 57598
const COMPRESSION = 57599
const DATA = 57600
const DIRECTORY = 57601
const DELAY_KEY_WRITE = 57602
const ENCRYPTION = 57603
const ENGINE = 57604
const MAX_ROWS = 57605
const MIN_ROWS = 57606
const PACK_KEYS = 57607
const ROW_FORMAT = 57608
const STATS_AUTO_RECALC = 57609
const STATS_PERSISTENT = 57610
const STATS_SAMPLE_PAGES = 57611
const DYNAMIC = 57612
const COMPRESSED = 57613
const REDUNDANT = 57614
const COMPACT = 57615
const FIXED = 57616
const COLUMN_FORMAT = 57617
const AUTO_RANDOM = 57618
const ENGINE_ATTRIBUTE = 57619
const SECONDARY_ENGINE_ATTRIBUTE = 57620
const INSERT_METHOD = 57621
const RESTRICT = 57622
const CASCADE = 57623
const ACTION = 57624
const PARTIAL = 57625
const SIMPLE = 57626
const CHECK = 57627
const ENFORCED = 57628
const RANGE = 57629
const LIST = 57630
const ALGORITHM = 57631
const LINEAR = 57632
const PARTITIONS = 57633
const SUBPARTITION = 57634
const SUBPARTITIONS = 57635
const CLUSTER = 57636
const TYPE = 57637
const ANY = 57638
const SOME = 57639
const EXTERNAL = 57640
const LOCALFILE = 57641
const URL = 57642
const PREPARE = 57643
const DEALLOCATE = 57644
const RESET = 57645
const EXTENSION = 57646
const INCREMENT = 57647
const CYCLE = 57648
const MINVALUE = 57649
const PUBLICATION = 57650
const SUBSCRIPTIONS = 57651
const PUBLICATIONS = 57652
const PROPERTIES = 57653
const PARSER = 57654
const VISIBLE = 57655
const INVISIBLE = 57656
const BTREE = 57657
const HASH = 57658
const RTREE = 57659
const BSI = 57660
const IVFFLAT = 57661
const ZONEMAP = 57662
const LEADING = 57663
const BOTH = 57664
const TRAILING = 57665
const UNKNOWN = 57666
const LISTS = 57667
const SIMILARITY_FUNCTION = 57668
const EXPIRE = 57669
const ACCOUNT = 57670
const ACCOUNTS = 57671
const UNLOCK = 57672
const DAY = 57673
const NEVER = 57674
const PUMP = 57675
const MYSQL_COMPATIBILITY_MODE = 57676
const MODIFY = 57677
const CHANGE = 57678
const SECOND = 57679
const ASCII = 57680
const COALESCE = 57681
const COLLATION = 57682
const HOUR = 57683
const MICROSECOND = 57684
const MINUTE = 57685
const MONTH = 57686
const QUARTER = 57687
const REPEAT = 57688
const REVERSE = 57689
const ROW_COUNT = 57690
const WEEK = 57691
const REVOKE = 57692
const FUNCTION = 57693
const PRIVILEGES = 57694
const TABLESPACE = 57695
const EXECUTE = 57696
const SUPER = 57697
const GRANT = 57698
const OPTION = 57699
const REFERENCES = 57700
const REPLICATION = 57701
const SLAVE = 57702
const CLIENT = 57703
const USAGE = 57704
const RELOAD = 57705
const FILE = 57706
const TEMPORARY = 57707
const ROUTINE = 57708
const EVENT = 57709
const SHUTDOWN = 57710
const NULLX = 57711
const AUTO_INCREMENT = 57712
const APPROXNUM = 57713
const SIGNED = 57714
const UNSIGNED = 57715
const ZEROFILL = 57716
const ENGINES = 57717
const LOW_CARDINALITY = 57718
const AUTOEXTEND_SIZE = 57719
const ADMIN_NAME = 57720
const RANDOM = 57721
const SUSPEND = 57722
const ATTRIBUTE = 57723
const HISTORY = 57724
const REUSE = 57725
const CURRENT = 57726
const OPTIONAL = 57727
const FAILED_LOGIN_ATTEMPTS = 57728
const PASSWORD_LOCK_TIME = 57729
const UNBOUNDED = 57730
const SECONDARY = 57731
const RESTRICTED = 57732
const USER = 57733
const IDENTIFIED = 57734
const CIPHER = 57735
const ISSUER = 57736
const X509 = 57737
const SUBJECT = 57738
const SAN = 57739
const REQUIRE = 57740
const SSL = 57741
const NONE = 57742
const PASSWORD = 57743
const SHARED = 57744
const EXCLUSIVE = 57745
const MAX_QUERIES_PER_HOUR = 57746
const MAX_UPDATES_PER_HOUR = 57747
const MAX_CONNECTIONS_PER_HOUR = 57748
const MAX_USER_CONNECTIONS = 57749
const FORMAT = 57750
const VERBOSE = 57751
const CONNECTION = 57752
const TRIGGERS = 57753
const PROFILES = 57754
const LOAD = 57755
const INLINE = 57756
const INFILE = 57757
const TERMINATED = 57758
const OPTIONALLY = 57759
const ENCLOSED = 57760
const ESCAPED = 57761
const STARTING = 57762
const LINES = 57763
const ROWS = 57764
const IMPORT = 57765
const DISCARD = 57766
const JSONTYPE = 57767
const MODUMP = 57768
const OVER = 57769
const PRECEDING = 57770
const FOLLOWING = 57771
const GROUPS = 57772
const DATABASES = 57773
const TABLES = 57774
const SEQUENCES = 57775
const EXTENDED = 57776
const FULL = 57777
const PROCESSLIST = 57778
const FIELDS = 57779
const COLUMNS = 57780
const OPEN = 57781
const ERRORS = 57782
const WARNINGS = 57783
const INDEXES = 57784
const SCHEMAS = 57785
const NODE = 57786
const LOCKS = 57787
const ROLES = 57788
const TABLE_NUMBER = 57789
const COLUMN_NUMBER = 57790
const TABLE_VALUES = 57791
const TABLE_SIZE = 57792
const NAMES = 57793
const GLOBAL = 57794
const PERSIST = 57795
const SESSION = 57796
const ISOLATION = 57797
const LEVEL = 57798
const READ = 57799
const WRITE = 57800
const ONLY = 57801
const REPEATABLE = 57802
const COMMITTED = 57803
const UNCOMMITTED = 57804
const SERIALIZABLE = 57805
const LOCAL = 57806
const EVENTS = 57807
const PLUGINS = 57808
const CURRENT_TIMESTAMP = 57809
const DATABASE = 57810
const CURRENT_TIME = 57811
const LOCALTIME = 57812
const LOCALTIMESTAMP = 57813
const UTC_DATE = 57814
const UTC_TIME = 57815
const UTC_TIMESTAMP = 57816
const REPLACE = 57817
const CONVERT = 57818
const SEPARATOR = 57819
const TIMESTAMPDIFF = 57820
const CURRENT_DATE = 57821
const CURRENT_USER = 57822
const CURRENT_ROLE = 57823
const SECOND_MICROSECOND = 57824
const MINUTE_MICROSECOND = 57825
const MINUTE_SECOND = 57826
const HOUR_MICROSECOND = 57827
const HOUR_SECOND = 57828
const HOUR_MINUTE = 57829
const DAY_MICROSECOND = 57830
const DAY_SECOND = 57831
const DAY_MINUTE = 57832
const DAY_HOUR = 57833
const YEAR_MONTH = 57834
const SQL_TSI_HOUR = 57835
const SQL_TSI_DAY = 57836
const SQL_TSI_WEEK = 57837
const SQL_TSI_MONTH = 57838
const SQL_TSI_QUARTER = 57839
const SQL_TSI_YEAR = 57840
const SQL_TSI_SECOND = 57841
const SQL_TSI_MINUTE = 57842
const RECURSIVE = 57843
const CONFIG = 57844
const DRAINER = 57845
const SOURCE = 57846
const STREAM = 57847
const HEADERS = 57848
const CONNECTOR = 57849
const CONNECTORS = 57850
const DAEMON = 57851
const PAUSE = 57852
const CANCEL = 57853
const TASK = 57854
const RESUME = 57855
const MATCH = 57856
const AGAINST = 57857
const BOOLEAN = 57858
const LANGUAGE = 57859
const WITH = 57860
const QUERY = 57861
const EXPANSION = 57862
const WITHOUT = 57863
const VALIDATION = 57864
const ADDDATE = 57865
const BIT_AND = 57866
const BIT_OR = 57867
const BIT_XOR = 57868
const CAST = 57869
const COUNT = 57870
const APPROX_COUNT = 57871
const APPROX_COUNT_DISTINCT = 57872
const APPROX_PERCENTILE = 57873
const CURDATE = 57874
const CURTIME = 57875
const DATE_ADD = 57876
const DATE_SUB = 57877
const EXTRACT = 57878
const GROUP_CONCAT = 57879
const MAX = 57880
const MID = 57881
const MIN = 57882
const NOW = 57883
const POSITION = 57884
const SESSION_USER = 57885
const STD = 57886
const STDDEV = 57887
const MEDIAN = 57888
const CLUSTER_CENTERS = 57889
const SPHERICAL_KMEANS = 57890
const STDDEV_POP = 57891
const STDDEV_SAMP = 57892
const SUBDATE = 57893
const SUBSTR = 57894
const SUBSTRING = 57895
const SUM = 57896
const SYSDATE = 57897
const SYSTEM_USER = 57898
const TRANSLATE = 57899
const TRIM = 57900
const VARIANCE = 57901
const VAR_POP = 57902
const VAR_SAMP = 57903
const AVG = 57904
const RANK = 57905
const ROW_NUMBER = 57906
const DENSE_RANK = 57907
const BIT_CAST = 57908
const NEXTVAL = 57909
const SETVAL = 57910
const CURRVAL = 57911
const LASTVAL = 57912
const ARROW = 57913
const ROW = 57914
const OUTFILE = 57915
const HEADER = 57916
const MAX_FILE_SIZE = 57917
const FORCE_QUOTE = 57918
const PARALLEL = 57919
const UNUSED = 57920
const BINDINGS = 57921
const DO = 57922
const DECLARE = 57923
const LOOP = 57924
const WHILE = 57925
const LEAVE = 57926
const ITERATE = 57927
const UNTIL = 57928
const CALL = 57929
const PREV = 57930
const SLIDING = 57931
const FILL = 57932
const SPBEGIN = 57933
const BACKEND = 57934
const SERVERS = 57935
const HANDLER = 57936
const KILL = 57937
const BACKUP = 57938
const FILESYSTEM = 57939
const QUERY_RESULT = 57940

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"STAGEOPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"IVFFLAT",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"LISTS",
	"SIMILARITY_FUNCTION",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INLINE",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"JSONTYPE",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"CONNECTORS",
	"DAEMON",
	"PAUSE",
	"CANCEL",
	"TASK",
	"RESUME",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"CLUSTER_CENTERS",
	"SPHERICAL_KMEANS",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"BIT_CAST",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"PREV",
	"SLIDING",
	"FILL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"HANDLER",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10744

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 117,
	11, 690,
	21, 690,
	-2, 683,
	-1, 137,
	236, 1073,
	238, 980,
	-2, 1028,
	-1, 161,
	42, 519,
	238, 519,
	265, 526,
	266, 526,
	459, 519,
	-2, 552,
	-1, 200,
	619, 1800,
	-2, 435,
	-1, 552,
	317, 133,
	431, 133,
	432, 133,
	-2, 1706,
	-1, 616,
	81, 1498,
	-2, 1855,
	-1, 617,
	81, 1516,
	-2, 1826,
	-1, 621,
	81, 1517,
	-2, 1854,
	-1, 648,
	81, 1428,
	-2, 1927,
	-1, 649,
	81, 1429,
	-2, 1926,
	-1, 650,
	81, 1430,
	-2, 1916,
	-1, 651,
	81, 1888,
	-2, 1909,
	-1, 652,
	81, 1889,
	-2, 1910,
	-1, 653,
	81, 1890,
	-2, 1918,
	-1, 654,
	81, 1891,
	-2, 1898,
	-1, 655,
	81, 1892,
	-2, 1907,
	-1, 656,
	81, 1893,
	-2, 1919,
	-1, 657,
	81, 1894,
	-2, 1920,
	-1, 658,
	81, 1895,
	-2, 1925,
	-1, 659,
	81, 1896,
	-2, 1930,
	-1, 660,
	81, 1897,
	-2, 1931,
	-1, 662,
	81, 1495,
	-2, 1692,
	-1, 666,
	81, 1500,
	-2, 1707,
	-1, 669,
	81, 1504,
	-2, 1725,
	-1, 673,
	81, 1508,
	-2, 1769,
	-1, 674,
	81, 1509,
	-2, 1850,
	-1, 682,
	81, 1519,
	-2, 1835,
	-1, 683,
	81, 1520,
	-2, 1880,
	-1, 684,
	81, 1521,
	-2, 1845,
	-1, 685,
	81, 1522,
	-2, 1870,
	-1, 696,
	81, 1406,
	-2, 1921,
	-1, 697,
	81, 1407,
	-2, 1922,
	-1, 698,
	81, 1408,
	-2, 1923,
	-1, 782,
	454, 552,
	455, 552,
	-2, 520,
	-1, 828,
	122, 1692,
	133, 1692,
	153, 1692,
	-2, 1666,
	-1, 937,
	21, 717,
	-2, 666,
	-1, 1038,
	11, 690,
	21, 690,
	-2, 1300,
	-1, 1112,
	21, 717,
	-2, 666,
	-1, 1423,
	81, 1566,
	-2, 1852,
	-1, 1424,
	81, 1567,
	-2, 1853,
	-1, 1564,
	82, 866,
	-2, 872,
	-1, 1968,
	105, 1018,
	149, 1018,
	188, 1018,
	191, 1018,
	278, 1018,
	-2, 1011,
	-1, 2108,
	11, 690,
	21, 690,
	-2, 810,
	-1, 2140,
	82, 1652,
	154, 1652,
	-2, 1837,
	-1, 2141,
	82, 1652,
	154, 1652,
	-2, 1836,
	-1, 2142,
	82, 1628,
	154, 1628,
	-2, 1823,
	-1, 2143,
	82, 1629,
	154, 1629,
	-2, 1828,
	-1, 2144,
	82, 1630,
	154, 1630,
	-2, 1757,
	-1, 2145,
	82, 1631,
	154, 1631,
	-2, 1751,
	-1, 2146,
	82, 1632,
	154, 1632,
	-2, 1682,
	-1, 2147,
	82, 1633,
	154, 1633,
	-2, 1825,
	-1, 2148,
	82, 1634,
	154, 1634,
	-2, 1755,
	-1, 2149,
	82, 1635,
	154, 1635,
	-2, 1750,
	-1, 2150,
	82, 1636,
	154, 1636,
	-2, 1739,
	-1, 2151,
	82, 1652,
	154, 1652,
	-2, 1740,
	-1, 2152,
	82, 1652,
	154, 1652,
	-2, 1741,
	-1, 2154,
	82, 1641,
	154, 1641,
	-2, 1870,
	-1, 2155,
	82, 1619,
	154, 1619,
	-2, 1855,
	-1, 2156,
	82, 1650,
	154, 1650,
	-2, 1826,
	-1, 2157,
	82, 1650,
	154, 1650,
	-2, 1854,
	-1, 2158,
	82, 1650,
	154, 1650,
	-2, 1708,
	-1, 2159,
	82, 1648,
	154, 1648,
	-2, 1845,
	-1, 2160,
	82, 1645,
	154, 1645,
	-2, 1730,
	-1, 2161,
	81, 1600,
	82, 1600,
	154, 1600,
	389, 1600,
	390, 1600,
	391, 1600,
	-2, 1681,
	-1, 2162,
	81, 1601,
	82, 1601,
	154, 1601,
	389, 1601,
	390, 1601,
	391, 1601,
	-2, 1683,
	-1, 2163,
	81, 1604,
	82, 1604,
	154, 1604,
	389, 1604,
	390, 1604,
	391, 1604,
	-2, 1827,
	-1, 2164,
	81, 1606,
	82, 1606,
	154, 1606,
	389, 1606,
	390, 1606,
	391, 1606,
	-2, 1809,
	-1, 2165,
	81, 1608,
	82, 1608,
	154, 1608,
	389, 1608,
	390, 1608,
	391, 1608,
	-2, 1756,
	-1, 2166,
	81, 1610,
	82, 1610,
	154, 1610,
	389, 1610,
	390, 1610,
	391, 1610,
	-2, 1735,
	-1, 2167,
	81, 1611,
	82, 1611,
	154, 1611,
	389, 1611,
	390, 1611,
	391, 1611,
	-2, 1736,
	-1, 2168,
	81, 1613,
	82, 1613,
	154, 1613,
	389, 1613,
	390, 1613,
	391, 1613,
	-2, 1680,
	-1, 2169,
	82, 1655,
	154, 1655,
	389, 1655,
	390, 1655,
	391, 1655,
	-2, 1713,
	-1, 2170,
	82, 1655,
	154, 1655,
	389, 1655,
	390, 1655,
	391, 1655,
	-2, 1726,
	-1, 2171,
	82, 1658,
	154, 1658,
	389, 1658,
	390, 1658,
	391, 1658,
	-2, 1709,
	-1, 2172,
	82, 1658,
	154, 1658,
	389, 1658,
	390, 1658,
	391, 1658,
	-2, 1772,
	-1, 2173,
	82, 1655,
	154, 1655,
	389, 1655,
	390, 1655,
	391, 1655,
	-2, 1793,
	-1, 2358,
	105, 1018,
	149, 1018,
	188, 1018,
	191, 1018,
	278, 1018,
	-2, 1012,
	-1, 2371,
	79, 611,
	154, 611,
	-2, 1186,
	-1, 2721,
	191, 1018,
	302, 1268,
	-2, 1240,
	-1, 2872,
	105, 1018,
	149, 1018,
	188, 1018,
	191, 1018,
	-2, 1129,
	-1, 2874,
	105, 1018,
	149, 1018,
	188, 1018,
	191, 1018,
	-2, 1129,
	-1, 2884,
	79, 611,
	154, 611,
	-2, 1187,
	-1, 2892,
	191, 1018,
	302, 1268,
	-2, 1241,
	-1, 3027,
	105, 1018,
	149, 1018,
	188, 1018,
	191, 1018,
	-2, 1130,
	-1, 3419,
	82, 1091,
	154, 1091,
	-2, 1018,
	-1, 3423,
	82, 1091,
	154, 1091,
	-2, 1018,
	-1, 3437,
	82, 1095,
	154, 1095,
	-2, 1018,
	-1, 3442,
	82, 1096,
	154, 1096,
	-2, 1018,
}

const yyPrivate = 57344

const yyLast = 39646

var yyAct = [...]int{
	583, 1339, 1645, 3422, 3423, 3402, 191, 3431, 1403, 561,
	3283, 563, 3348, 585, 3371, 3309, 3291, 2739, 3292, 2974,
	3209, 571, 3194, 2968, 2223, 3068, 2906, 1192, 3213, 1071,
	3185, 3015, 3105, 2805, 1399, 3012, 3094, 2806, 1253, 3014,
	465, 613, 3142, 827, 938, 2328, 2972, 2842, 1329, 3195,
	475, 3197, 480, 480, 2963, 1597, 2859, 565, 480, 496,
	505, 2893, 2010, 505, 1599, 3019, 3033, 2374, 3026, 2991,
	1406, 2693, 2653, 2803, 3029, 2490, 2491, 2489, 2848, 2682,
	1734, 2138, 2413, 2736, 2473, 176, 2718, 2725, 2875, 2483,
	2651, 516, 1837, 2552, 2791, 1459, 1699, 2136, 2013, 2512,
	1802, 2771, 2486, 2666, 510, 2663, 2348, 2724, 1978, 931,
	2086, 2359, 2654, 1945, 554, 2699, 555, 2661, 2102, 1246,
	2595, 1936, 1935, 1822, 2525, 560, 2206, 1811, 2393, 1749,
	55, 1803, 2189, 1544, 1776, 1833, 1810, 1727, 1167, 1325,
	758, 2040, 2535, 1333, 1330, 2103, 1702, 1832, 36, 2091,
	1165, 1700, 821, 2337, 2332, 1731, 2395, 2011, 1637, 6,
	1201, 1627, 2366, 187, 8, 465, 186, 7, 1574, 1977,
	2134, 562, 883, 1397, 2258, 1338, 1834, 1292, 1262, 564,
	1867, 116, 553, 1232, 1844, 1609, 35, 1959, 2656, 2655,
	2290, 191, 464, 191, 1355, 874, 875, 2289, 1453, 1388,
	1437, 1318, 474, 1806, 555, 790, 1809, 502, 26, 949,
	2006, 15, 572, 13, 1402, 14, 1608, 492, 1181, 1792,
	1299, 1766, 1396, 820, 1231, 1202, 32, 2110, 757, 1573,
	489, 1460, 1229, 1177, 519, 518, 1285, 1193, 23, 700,
	16, 10, 177, 504, 1291, 167, 735, 740, 1110, 1072,
	173, 755, 1841, 3136, 2318, 2318, 871, 2862, 2318, 1851,
	2246, 2798, 2195, 2193, 2192, 2190, 1557, 501, 777, 1306,
	497, 1302, 499, 866, 500, 1144, 870, 867, 872, 867,
	175, 1129, 867, 476, 3356, 498, 1214, 1551, 1125, 1304,
	2311, 2309, 2961, 2548, 2546, 174, 51, 163, 138, 836,
	1781, 485, 1007, 1008, 1009, 1006, 508, 1007, 1008, 1009,
	1006, 3101, 3095, 164, 2964, 2804, 1819, 1066, 2896, 3199,
	156, 1805, 701, 2621, 165, 2048, 174, 51, 163, 138,
	2313, 3001, 2240, 3153, 970, 865, 174, 712, 3274, 8,
	174, 174, 7, 115, 174, 2327, 2232, 1838, 174, 2329,
	833, 174, 51, 163, 138, 835, 2908, 1130, 103, 174,
	51, 163, 138, 174, 168, 2992, 1353, 174, 1970, 2899,
	3122, 3232, 1272, 1271, 1270, 839, 837, 3154, 838, 2894,
	1139, 1346, 1568, 515, 2916, 2917, 2619, 1849, 2567, 115,
	2895, 514, 2560, 1157, 556, 168, 1350, 1963, 2128, 1210,
	3124, 1373, 1211, 1004, 1707, 168, 702, 2129, 809, 168,
	168, 1343, 703, 168, 1233, 115, 1235, 1352, 1131, 691,
	168, 690, 692, 693, 2518, 694, 695, 2900, 168, 2519,
	2520, 1744, 1345, 1711, 1389, 2207, 168, 1393, 1189, 2116,
	120, 121, 2115, 122, 123, 2117, 713, 978, 799, 985,
	980, 1623, 986, 1712, 1713, 2334, 479, 479, 1558, 1559,
	997, 1392, 487, 1197, 3331, 2335, 1405, 1196, 1199, 1200,
	1199, 1200, 1002, 3295, 3296, 830, 829, 3202, 981, 480,
	988, 2984, 3202, 3265, 3201, 3264, 3200, 3263, 1213, 480,
	942, 3201, 3200, 1926, 3317, 3267, 3271, 3313, 3314, 3106,
	3107, 3108, 3109, 3103, 3187, 3329, 2553, 505, 505, 1138,
	480, 137, 162, 172, 2333, 101, 2807, 2554, 1409, 2555,
	3187, 2915, 3190, 2014, 3098, 1305, 1303, 2807, 2429, 2227,
	943, 1853, 3206, 161, 155, 154, 2314, 952, 2820, 1728,
	57, 2675, 137, 1394, 172, 877, 1718, 1384, 2904, 2849,
	3006, 805, 803, 2667, 804, 2080, 974, 1845, 983, 2856,
	1957, 952, 1789, 746, 161, 2321, 1391, 1722, 1040, 3269,
	2901, 2905, 2903, 2902, 831, 2918, 2677, 3276, 3277, 3118,
	832, 976, 3119, 868, 869, 3130, 2583, 2237, 873, 3272,
	3273, 935, 999, 979, 982, 2046, 2672, 2673, 1312, 1311,
	2340, 157, 158, 159, 2585, 965, 2962, 973, 2910, 2911,
	1000, 1001, 2674, 2547, 2477, 942, 2983, 2671, 941, 975,
	549, 984, 2083, 551, 2985, 3294, 836, 2082, 550, 3133,
	166, 2087, 1408, 1407, 1187, 3121, 3003, 3324, 1850, 3333,
	810, 2691, 502, 502, 2700, 3158, 2312, 2930, 1212, 3224,
	111, 2737, 2738, 2918, 160, 3150, 112, 3219, 507, 2367,
	806, 506, 1141, 1140, 2923, 2897, 3120, 2482, 1223, 995,
	996, 2909, 1075, 1965, 3214, 1128, 3416, 833, 3432, 3362,
	1742, 1743, 835, 1390, 3328, 1856, 1858, 1859, 3285, 1415,
	1418, 1419, 3281, 3282, 1176, 3285, 977, 836, 987, 3369,
	1416, 2933, 501, 501, 3205, 497, 497, 499, 499, 500,
	500, 945, 946, 113, 2016, 1839, 3059, 3135, 2823, 2589,
	498, 498, 2317, 808, 1136, 475, 50, 1839, 1839, 2669,
	954, 953, 3396, 2057, 2056, 937, 2077, 2078, 2975, 1042,
	1043, 1044, 1045, 1076, 1108, 2741, 962, 1113, 833, 3118,
	958, 959, 3119, 835, 954, 953, 2029, 758, 867, 867,
	867, 867, 2009, 2031, 2346, 947, 3048, 3113, 867, 503,
	867, 748, 3152, 749, 2131, 52, 956, 503, 1242, 1241,
	963, 3433, 3275, 3439, 3054, 1174, 1046, 1840, 1173, 1852,
	1172, 2191, 1191, 1190, 3403, 2876, 1307, 1198, 3143, 2329,
	807, 2914, 3159, 932, 1195, 3121, 480, 2638, 1225, 1868,
	169, 170, 3151, 171, 465, 465, 2009, 2959, 139, 3184,
	2030, 1145, 3125, 465, 465, 701, 1230, 1257, 1257, 3427,
	480, 52, 2514, 2516, 2310, 514, 3120, 1199, 1200, 52,
	2733, 169, 170, 2810, 171, 2233, 3002, 2241, 970, 139,
	2120, 2015, 505, 1286, 475, 1188, 2017, 1295, 1295, 139,
	2668, 1255, 1255, 139, 139, 3334, 1259, 139, 191, 2913,
	1729, 139, 1084, 1085, 139, 3374, 1264, 465, 1199, 1200,
	114, 39, 139, 933, 3114, 2678, 139, 49, 3196, 2044,
	139, 5, 936, 940, 3131, 118, 119, 964, 832, 1170,
	1842, 3268, 1150, 2588, 1175, 2430, 2339, 2431, 2432, 1155,
	2018, 1185, 3007, 2586, 961, 1154, 1153, 2530, 2531, 1204,
	1205, 2019, 1207, 1208, 1209, 1857, 2670, 1137, 1337, 1417,
	1340, 1313, 1719, 1385, 969, 1348, 2740, 2737, 2738, 509,
	990, 2836, 3061, 991, 1251, 1252, 2352, 2354, 2355, 2356,
	2353, 1112, 1010, 1721, 1114, 1142, 1371, 2427, 3426, 2320,
	3438, 1039, 2343, 2344, 2597, 2596, 1237, 1239, 2734, 1048,
	1257, 993, 1257, 942, 1143, 1249, 1250, 2342, 1162, 2026,
	1939, 1354, 3069, 3070, 3071, 3074, 3073, 3072, 1134, 1183,
	1184, 1561, 1055, 1224, 1178, 1182, 1182, 1182, 2515, 752,
	753, 754, 1854, 1855, 1146, 1147, 1148, 1149, 1164, 1151,
	1938, 3375, 2457, 3050, 1156, 3055, 3056, 3049, 1178, 1178,
	1941, 1940, 747, 1562, 2448, 2449, 1215, 1216, 1560, 1308,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1132, 1133, 1327, 1328, 1448, 1449, 1203, 989,
	1240, 1206, 2020, 1458, 3114, 750, 1287, 715, 3115, 2069,
	716, 3034, 836, 1497, 1498, 1499, 836, 1507, 1332, 1335,
	2811, 1336, 3445, 2100, 1948, 1900, 1513, 719, 1899, 1514,
	1344, 1600, 485, 1265, 1351, 2265, 1316, 994, 1319, 1320,
	3444, 1516, 1278, 1524, 1525, 1284, 502, 1949, 1950, 1321,
	1322, 1404, 1296, 3435, 2705, 3417, 1380, 1401, 1366, 1367,
	1297, 1386, 992, 926, 922, 923, 924, 925, 3412, 2270,
	1600, 2269, 2268, 2266, 858, 863, 864, 942, 718, 3406,
	3405, 3377, 721, 720, 2372, 1769, 1542, 3383, 1420, 1286,
	1382, 3350, 3372, 3373, 1005, 1571, 2447, 1257, 1576, 1577,
	1005, 1579, 1580, 480, 1492, 967, 501, 480, 3261, 497,
	1257, 499, 1005, 500, 758, 1362, 1379, 1598, 2735, 1376,
	3303, 1375, 1257, 1387, 498, 3436, 1357, 1847, 1225, 2373,
	1005, 800, 3297, 496, 1398, 2025, 2768, 968, 2267, 2023,
	3413, 970, 1545, 3242, 1506, 939, 1378, 2101, 1377, 1374,
	1370, 1847, 1847, 1622, 1395, 1400, 1446, 1447, 1369, 1847,
	1221, 1628, 1628, 3351, 1225, 2209, 1225, 1225, 2101, 811,
	480, 480, 1570, 1571, 1571, 2043, 1626, 1257, 1696, 1697,
	1709, 968, 1489, 1490, 1263, 1493, 1961, 705, 706, 707,
	708, 1578, 3304, 1508, 465, 1439, 1257, 3177, 3176, 800,
	1614, 1294, 1294, 939, 3139, 1553, 1515, 2768, 1517, 2458,
	2460, 2461, 2462, 2459, 802, 3139, 1621, 801, 2764, 1624,
	1625, 3172, 2373, 1767, 480, 1571, 1257, 2839, 1754, 2822,
	480, 480, 480, 1759, 1760, 1007, 1008, 1009, 1006, 1929,
	1764, 1765, 1745, 2689, 3171, 1771, 1647, 2232, 3400, 3170,
	1691, 1692, 191, 3352, 3169, 191, 191, 1548, 191, 2743,
	2642, 970, 1606, 1607, 2640, 860, 861, 862, 1518, 3178,
	1982, 2101, 2533, 3138, 2271, 2272, 2323, 2016, 2019, 1616,
	1617, 2617, 802, 2315, 1723, 801, 1480, 2222, 1005, 1994,
	1601, 1602, 1610, 3139, 1612, 1613, 1507, 1507, 1813, 1543,
	1960, 1549, 1751, 1507, 1507, 2214, 2131, 1715, 1619, 1717,
	1824, 1575, 2995, 2937, 2868, 2752, 3139, 1838, 1753, 1735,
	1736, 3139, 1710, 1629, 1590, 1565, 3139, 2509, 2296, 2004,
	1934, 1730, 1818, 710, 1598, 2887, 1603, 1780, 1257, 1836,
	1783, 1784, 1595, 1786, 1594, 3139, 1109, 1904, 1178, 1631,
	1410, 1411, 1412, 1413, 1414, 1615, 1605, 1737, 1738, 1756,
	1757, 1758, 1182, 1611, 2288, 1566, 1567, 1620, 1569, 1829,
	1740, 1163, 2690, 2248, 1182, 1007, 1008, 1009, 1006, 1582,
	1583, 1584, 1632, 1633, 2996, 2131, 2869, 2753, 1451, 1830,
	1243, 1575, 1861, 2706, 1455, 1456, 1457, 2537, 2230, 2101,
	1005, 1814, 1491, 2218, 1865, 1866, 1695, 1698, 2216, 2020,
	1501, 1714, 1879, 1716, 2015, 2009, 2014, 1724, 2012, 2017,
	2211, 1993, 2375, 1808, 2235, 2234, 836, 2226, 1999, 2204,
	1808, 2202, 2200, 836, 1895, 2855, 1005, 2198, 1630, 1880,
	1398, 1007, 1008, 1009, 1006, 1005, 1828, 1476, 1752, 1774,
	1762, 1981, 1359, 1473, 1930, 1052, 1546, 1475, 1472, 1474,
	1478, 1479, 502, 955, 934, 1477, 1911, 929, 1775, 1777,
	1982, 1905, 1906, 2018, 1908, 2212, 1910, 833, 1898, 1889,
	2217, 1915, 835, 927, 833, 1888, 1887, 1878, 1846, 835,
	1363, 2112, 2212, 3083, 1794, 2935, 1494, 705, 706, 707,
	708, 2205, 1820, 2203, 2199, 1739, 1815, 1581, 1022, 2199,
	1817, 1585, 2710, 2701, 554, 1496, 1495, 480, 480, 2580,
	480, 836, 501, 1982, 1827, 497, 1929, 499, 1179, 500,
	1245, 1826, 3220, 480, 480, 480, 1831, 3392, 1005, 1618,
	498, 3035, 1496, 1495, 2879, 1979, 2877, 2190, 1005, 1168,
	1005, 1005, 3378, 1169, 717, 1986, 1225, 1005, 1005, 3353,
	1847, 2041, 1364, 934, 1863, 1864, 1025, 1026, 1027, 1028,
	1029, 1022, 833, 1268, 1634, 1635, 3221, 835, 1869, 3137,
	3110, 1225, 1445, 1247, 1860, 3036, 3052, 3051, 2880, 2702,
	2878, 1546, 1862, 3008, 1248, 2036, 1546, 1546, 1442, 1444,
	1441, 1873, 1443, 2861, 1439, 2769, 2796, 2762, 2757, 1483,
	1484, 1485, 1486, 1487, 1488, 1481, 1482, 2754, 2684, 2479,
	2350, 1988, 1989, 2319, 2245, 1530, 2215, 2122, 1750, 1244,
	1159, 1991, 1992, 2703, 1750, 1750, 1750, 1158, 944, 2255,
	2184, 2042, 1778, 710, 1180, 1779, 1454, 1454, 1782, 1874,
	2539, 1785, 1523, 1572, 1787, 2105, 2105, 1709, 2105, 513,
	1021, 1020, 1030, 1031, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1022, 1007, 1008, 1009, 1006, 465, 465, 722, 1902,
	1925, 1927, 1928, 2799, 942, 3262, 1007, 1008, 1009, 1006,
	1257, 480, 1006, 1300, 1931, 1778, 1942, 2194, 1007, 1008,
	1009, 1006, 3064, 1823, 1009, 1006, 480, 2797, 1995, 3063,
	1962, 2556, 942, 2174, 475, 2419, 2418, 2401, 1295, 2399,
	1709, 3009, 3010, 2179, 2126, 2181, 1990, 3395, 3043, 191,
	1054, 1996, 3421, 3409, 1997, 3363, 2003, 1007, 1008, 1009,
	1006, 1075, 3358, 1053, 2047, 1300, 2049, 2050, 2051, 2052,
	2053, 2054, 2055, 2109, 3357, 2058, 2059, 2060, 2061, 2062,
	2063, 2064, 2065, 2066, 2067, 2068, 2000, 2070, 2071, 2072,
	2073, 2074, 1987, 2075, 2107, 3287, 2111, 2008, 2007, 2228,
	3004, 2176, 1836, 1007, 1008, 1009, 1006, 836, 3394, 1257,
	2183, 1257, 2257, 1257, 1954, 1998, 1871, 3251, 942, 1875,
	2021, 2022, 1182, 2027, 1511, 3222, 2247, 2853, 1007, 1008,
	1009, 1006, 1076, 3162, 2185, 3155, 2178, 2186, 1512, 2224,
	2225, 2118, 3096, 2119, 3038, 2238, 3037, 2881, 1237, 1239,
	1257, 2274, 2469, 2084, 2852, 2133, 3005, 1891, 833, 1886,
	2139, 2123, 2124, 835, 2113, 2676, 2281, 1893, 2467, 2576,
	2465, 1257, 1030, 1031, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1022, 2283, 2854, 1255, 2551, 1907, 2454, 2273, 2127,
	2550, 1912, 1913, 1914, 2280, 2452, 1917, 1918, 1919, 1920,
	1921, 1922, 1923, 1924, 2451, 1255, 2450, 2442, 2468, 2282,
	2130, 1007, 1008, 1009, 1006, 2177, 2436, 2435, 942, 2434,
	2285, 2286, 942, 1890, 2466, 480, 2464, 2433, 2259, 2259,
	2316, 1257, 1933, 1797, 2347, 3288, 2175, 2860, 1796, 1795,
	1571, 1952, 1953, 2453, 1955, 2244, 2242, 2371, 1791, 1007,
	1008, 1009, 1006, 2377, 1790, 1748, 1747, 1971, 1972, 1973,
	2239, 1007, 1008, 1009, 1006, 1983, 2253, 1746, 1360, 1127,
	2387, 2349, 1007, 1008, 1009, 1006, 2484, 942, 2231, 2229,
	2307, 1301, 2236, 2220, 2662, 2398, 1007, 1008, 1009, 1006,
	3382, 3381, 942, 942, 942, 1628, 549, 3323, 942, 551,
	2409, 2410, 2411, 942, 550, 2415, 2416, 3322, 2417, 2251,
	2252, 3319, 2969, 2360, 2249, 2250, 3315, 2361, 3208, 3013,
	3193, 2264, 2262, 1398, 3182, 2380, 3166, 2368, 3161, 3160,
	2383, 2105, 3134, 1021, 1020, 1030, 1031, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1022, 2470, 2324, 2378, 3132, 1647,
	2139, 3097, 3045, 465, 2389, 3022, 2967, 2965, 1571, 942,
	1709, 1709, 1709, 1709, 2610, 2944, 1883, 2941, 2939, 2336,
	2474, 942, 1709, 2326, 2851, 2105, 2331, 2850, 2291, 2292,
	1546, 2396, 1546, 2847, 2297, 2396, 2830, 2828, 2763, 2392,
	2759, 1257, 2325, 2750, 2749, 2685, 2379, 2646, 2645, 2345,
	1546, 1546, 480, 480, 2403, 2384, 2385, 2644, 1937, 2590,
	2376, 2587, 2549, 3212, 8, 1263, 2370, 7, 3229, 2523,
	2463, 2404, 2405, 2609, 2455, 2445, 2408, 2443, 3225, 2386,
	1750, 2414, 1294, 2391, 2388, 2439, 2438, 2987, 2394, 1007,
	1008, 1009, 1006, 2400, 2977, 1575, 2505, 2437, 2221, 1007,
	1008, 1009, 1006, 2976, 2425, 2426, 2407, 191, 1007, 1008,
	1009, 1006, 191, 1007, 1008, 1009, 1006, 2927, 2440, 2441,
	1007, 1008, 1009, 1006, 647, 646, 2444, 1877, 1799, 1007,
	1008, 1009, 1006, 1507, 1793, 1507, 1556, 2492, 2566, 1555,
	1361, 2534, 2476, 1007, 1008, 1009, 1006, 2575, 2825, 2492,
	1083, 1079, 1078, 1257, 2475, 2478, 2582, 2613, 2480, 930,
	714, 2493, 2494, 2495, 2496, 3111, 2999, 2612, 2506, 2504,
	2508, 2988, 2874, 2507, 1007, 1008, 1009, 1006, 2873, 1876,
	2524, 2872, 2838, 1007, 1008, 1009, 1006, 2834, 2521, 2256,
	2829, 2827, 2540, 1007, 1008, 1009, 1006, 2544, 2275, 2276,
	2812, 1007, 1008, 1009, 1006, 2802, 2278, 2279, 2517, 2397,
	2801, 1545, 2787, 2786, 586, 596, 2565, 1327, 1328, 2284,
	2711, 2649, 2639, 587, 2615, 595, 588, 592, 591, 589,
	590, 2608, 2600, 2599, 2563, 1332, 1335, 2603, 1336, 2605,
	2569, 2542, 2541, 2594, 1546, 2579, 2538, 2532, 942, 2322,
	2201, 2197, 2584, 1007, 1008, 1009, 1006, 2665, 2196, 1916,
	2562, 2557, 836, 1320, 2559, 2570, 2572, 2680, 2571, 836,
	1909, 2564, 480, 1321, 1322, 1903, 1901, 2611, 593, 2330,
	2561, 1897, 1896, 2694, 942, 942, 942, 2568, 2578, 2591,
	1894, 1885, 1882, 1709, 1979, 1881, 2709, 2592, 1798, 1541,
	1540, 2369, 2598, 1007, 1008, 1009, 1006, 2305, 2381, 2382,
	594, 1539, 2606, 2607, 2304, 1510, 2723, 1509, 2726, 1500,
	2726, 2726, 1269, 1267, 2688, 942, 2648, 174, 3434, 2604,
	3391, 2641, 3385, 1007, 1008, 1009, 1006, 3370, 3241, 2745,
	1007, 1008, 1009, 1006, 3367, 3365, 1257, 1257, 3250, 2742,
	1073, 3179, 3168, 2360, 3163, 1315, 3078, 2647, 3062, 2744,
	2643, 3058, 2952, 2950, 2712, 1007, 1008, 1009, 1006, 2713,
	2714, 2925, 2924, 2921, 2696, 2697, 2698, 2920, 2681, 2863,
	1255, 1255, 2659, 2658, 2746, 2747, 1326, 2601, 2602, 2707,
	2687, 174, 480, 163, 138, 2721, 168, 2665, 1317, 2704,
	1331, 1334, 2708, 2722, 1323, 2622, 2623, 1166, 1571, 1571,
	2731, 2624, 2625, 2626, 2627, 2471, 2628, 2629, 2630, 2631,
	2632, 2633, 2634, 2635, 2716, 2402, 2365, 2727, 2728, 2364,
	2363, 2362, 2306, 1219, 1220, 2210, 1222, 2732, 1226, 1227,
	1228, 836, 2121, 2076, 1980, 2715, 1951, 598, 117, 3420,
	1932, 1440, 168, 117, 942, 1761, 2527, 2528, 2274, 2717,
	168, 855, 1564, 1552, 1383, 1347, 1324, 2800, 1126, 1111,
	1273, 1274, 1275, 1276, 1277, 2767, 1279, 1280, 1281, 1282,
	1283, 1107, 1106, 1105, 1289, 1290, 3410, 1104, 1103, 1102,
	2779, 1020, 1030, 1031, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1022, 2756, 486, 2760, 2543, 117, 2545, 2761, 480,
	2765, 2766, 1101, 2755, 1100, 1099, 1098, 2776, 2758, 1097,
	1096, 2751, 1095, 1094, 1093, 1546, 1092, 1091, 1090, 1089,
	1546, 2780, 1088, 2783, 2784, 2785, 1087, 1823, 1086, 1021,
	1020, 1030, 1031, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1022, 2789, 1082, 2795, 1519, 1520, 1521, 1522, 1081, 1080,
	1526, 1527, 1528, 1529, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 2593, 1077, 1070, 1069, 1067, 1066, 1065, 2843,
	942, 2813, 2139, 1064, 2219, 2815, 1063, 1062, 2814, 2818,
	3239, 2303, 2819, 1061, 1060, 2614, 1059, 2729, 1058, 1057,
	1056, 2831, 1051, 850, 845, 840, 844, 848, 1050, 1049,
	972, 928, 2867, 2772, 2773, 3237, 834, 1007, 1008, 1009,
	1006, 3235, 2922, 117, 1985, 2105, 1709, 2884, 1967, 960,
	3339, 853, 3337, 2302, 3293, 843, 2775, 2351, 117, 2301,
	117, 942, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1022,
	2723, 2132, 1801, 971, 942, 2778, 2954, 2777, 2835, 1007,
	1008, 1009, 1006, 2955, 942, 1007, 1008, 1009, 1006, 1257,
	2845, 2503, 2498, 2097, 2098, 2497, 2686, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1011, 1571, 851, 1160, 2213, 942,
	2501, 2858, 2885, 854, 2499, 2502, 477, 2886, 2683, 2500,
	2888, 836, 2574, 1255, 2919, 1592, 1593, 2936, 836, 2045,
	102, 836, 2953, 841, 2932, 2958, 2912, 2730, 191, 2837,
	2790, 54, 2883, 53, 2208, 2889, 2840, 1683, 2719, 2846,
	2720, 942, 2946, 1587, 1588, 1589, 852, 2926, 2931, 2928,
	2816, 2817, 1309, 2882, 2243, 2300, 2934, 2224, 2225, 481,
	2864, 2865, 2866, 1356, 2986, 2940, 2870, 2871, 2938, 1341,
	942, 2943, 2945, 1958, 1763, 2947, 482, 966, 2956, 2890,
	2948, 1007, 1008, 1009, 1006, 2660, 842, 483, 2657, 484,
	2650, 2390, 2929, 2002, 942, 1257, 1257, 2299, 1975, 1596,
	2694, 2421, 2414, 1563, 3306, 3028, 1750, 3028, 2422, 2423,
	2424, 2298, 3165, 2960, 2993, 2748, 2970, 1496, 1495, 2971,
	1122, 1123, 2085, 1007, 1008, 1009, 1006, 2492, 2782, 1255,
	3020, 1257, 2081, 3018, 1120, 1121, 3044, 1007, 1008, 1009,
	1006, 1694, 2994, 1218, 2942, 1217, 3000, 998, 2990, 480,
	2526, 942, 942, 1118, 1119, 942, 942, 1825, 3024, 3025,
	1171, 1116, 1117, 849, 1152, 3020, 1194, 3386, 3279, 2492,
	3081, 3023, 3257, 3032, 3031, 3080, 3255, 3039, 3040, 3075,
	2295, 1598, 2886, 3088, 3042, 2919, 3041, 3215, 3192, 3191,
	3066, 3067, 3092, 3093, 3076, 3077, 3046, 2912, 3189, 2792,
	846, 3180, 847, 3091, 3085, 3090, 1007, 1008, 1009, 1006,
	2966, 2294, 2832, 2809, 2808, 2997, 2998, 2293, 1755, 2536,
	2793, 2287, 3016, 2821, 2032, 1358, 1600, 2843, 3341, 3340,
	3084, 2577, 1969, 1884, 3117, 2824, 3086, 1007, 1008, 1009,
	1006, 2277, 2826, 1007, 1008, 1009, 1006, 1007, 1008, 1009,
	1006, 117, 117, 834, 957, 2978, 3099, 2979, 3340, 3341,
	3145, 2254, 3112, 3060, 3116, 2833, 2788, 1007, 1008, 1009,
	1006, 1450, 939, 1186, 3126, 3129, 178, 3, 2088, 3016,
	3016, 3389, 62, 3016, 3016, 3127, 3128, 1007, 1008, 1009,
	1006, 705, 706, 707, 708, 3140, 939, 1007, 1008, 1009,
	1006, 2, 3354, 3146, 3355, 3148, 1, 3082, 3147, 942,
	2308, 1550, 1124, 1257, 3156, 2093, 2096, 2097, 2098, 2094,
	709, 2095, 2099, 704, 1038, 1234, 2114, 1741, 1261, 1554,
	711, 2510, 3164, 2511, 1021, 1020, 1030, 1031, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1022, 2781, 1255, 3173, 2513,
	1843, 3174, 2481, 3204, 2093, 2096, 2097, 2098, 2094, 2079,
	2095, 2099, 1956, 2679, 1161, 3198, 3181, 3188, 751, 1502,
	942, 3186, 1368, 857, 951, 1365, 950, 3216, 948, 1452,
	600, 1804, 2472, 1546, 2446, 3087, 3305, 3347, 3249, 3308,
	1381, 584, 3183, 3102, 1546, 3211, 3253, 2949, 3104, 942,
	2951, 3210, 3207, 2973, 1848, 1003, 1257, 3218, 2558, 3244,
	3247, 761, 773, 638, 3223, 3387, 611, 2957, 1068, 1349,
	3234, 3236, 3238, 3240, 3227, 1342, 2620, 2618, 859, 610,
	2857, 2341, 2529, 3149, 3248, 856, 774, 3016, 3233, 1788,
	1255, 3100, 1310, 3256, 3243, 3258, 3259, 3254, 1257, 3252,
	1314, 2001, 3157, 3430, 3419, 3175, 3401, 3384, 3284, 3289,
	3415, 1115, 3327, 3368, 2982, 2980, 2981, 3278, 1021, 1020,
	1030, 1031, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1022,
	760, 3312, 1255, 3361, 3280, 520, 3286, 1720, 463, 818,
	800, 3298, 3079, 3299, 3311, 3300, 1800, 3301, 3016, 3302,
	521, 1984, 3270, 3167, 732, 1966, 733, 725, 2358, 2357,
	942, 3316, 1421, 1012, 3198, 3318, 1438, 2636, 3217, 2637,
	1047, 559, 1872, 2338, 2907, 2522, 61, 3016, 60, 59,
	58, 3330, 3332, 1770, 199, 3346, 3335, 3228, 602, 3338,
	3336, 198, 3011, 3246, 3310, 582, 581, 580, 3349, 3342,
	3343, 3344, 3345, 3065, 579, 3359, 578, 942, 2092, 2090,
	2089, 1480, 1704, 1703, 1768, 3360, 2692, 2412, 2406, 3364,
	2028, 3366, 2033, 802, 1636, 3290, 801, 3230, 3231, 3057,
	2456, 1586, 3312, 3380, 2024, 1653, 3376, 2428, 1650, 1649,
	1266, 2420, 3053, 3047, 486, 3311, 942, 3379, 942, 1680,
	2841, 3027, 2891, 2892, 3388, 2898, 3390, 1974, 882, 878,
	3393, 880, 881, 786, 879, 2263, 2005, 2652, 1947, 3349,
	3397, 762, 942, 1946, 1944, 117, 1943, 3404, 1135, 3203,
	3408, 3411, 3266, 2989, 3414, 2137, 2135, 2774, 3325, 2770,
	1812, 1821, 3141, 3320, 3321, 2573, 1705, 1701, 764, 3418,
	1968, 3123, 3425, 1591, 726, 1964, 3429, 3428, 99, 152,
	48, 89, 88, 3437, 98, 150, 3440, 47, 183, 182,
	3425, 3443, 3442, 185, 3441, 3429, 1007, 1008, 1009, 1006,
	184, 181, 2187, 2188, 180, 1404, 1298, 179, 3260, 117,
	3030, 699, 38, 117, 37, 33, 12, 11, 34, 21,
	22, 20, 1372, 19, 25, 117, 31, 30, 110, 109,
	29, 785, 784, 108, 107, 117, 106, 105, 104, 28,
	18, 42, 1476, 41, 1404, 40, 1404, 9, 1473, 97,
	95, 783, 1475, 1472, 1474, 1478, 1479, 2616, 27, 1033,
	1477, 1037, 759, 96, 93, 94, 1055, 92, 90, 73,
	1404, 72, 71, 763, 795, 1480, 86, 1034, 1036, 1032,
	85, 1035, 1021, 1020, 1030, 1031, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1022, 84, 83, 82, 791, 81, 79,
	80, 772, 70, 69, 68, 67, 66, 91, 3226, 77,
	1021, 1020, 1030, 1031, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1022, 87, 900, 78, 76, 75, 74, 65, 64,
	63, 136, 135, 792, 796, 1021, 1020, 1030, 1031, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1022, 134, 133, 132,
	130, 131, 129, 780, 128, 778, 782, 799, 127, 126,
	125, 779, 776, 775, 124, 781, 766, 767, 765, 768,
	769, 770, 771, 43, 797, 44, 798, 45, 46, 146,
	145, 147, 149, 151, 148, 153, 143, 793, 794, 141,
	144, 142, 140, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1483, 1484, 1485, 1486, 1487, 1488,
	1481, 1482, 56, 100, 17, 24, 4, 0, 0, 0,
	0, 0, 0, 0, 789, 0, 0, 0, 0, 0,
	788, 0, 0, 0, 0, 0, 1476, 0, 0, 0,
	0, 0, 1473, 886, 0, 0, 1475, 1472, 1474, 1478,
	1479, 0, 0, 0, 1477, 0, 0, 0, 0, 0,
	0, 0, 0, 908, 912, 914, 916, 918, 919, 921,
	0, 926, 922, 923, 924, 925, 0, 903, 904, 905,
	906, 884, 885, 909, 0, 887, 0, 888, 889, 890,
	891, 892, 893, 894, 895, 896, 899, 901, 897, 898,
	907, 1870, 0, 0, 0, 0, 0, 1708, 911, 913,
	915, 917, 920, 0, 787, 0, 0, 0, 0, 0,
	0, 0, 0, 3399, 0, 1021, 1020, 1030, 1031, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1022, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 902, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 0, 117, 117, 0, 117, 0, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1483, 1484,
	1485, 1486, 1487, 1488, 1481, 1482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 618, 834, 0, 0, 0, 0, 0, 0,
	834, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 573, 0, 0, 0, 293, 0,
	0, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 457, 0, 458, 0, 0, 609,
	0, 462, 383, 336, 0, 0, 0, 0, 670, 678,
	0, 0, 2260, 2261, 0, 0, 0, 0, 0, 0,
	566, 0, 0, 599, 647, 646, 586, 596, 0, 0,
	268, 197, 459, 0, 460, 587, 0, 595, 588, 592,
	591, 589, 590, 0, 662, 0, 0, 0, 1038, 0,
	0, 557, 570, 0, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 567, 568,
	0, 0, 0, 0, 619, 0, 569, 0, 0, 614,
	593, 597, 0, 0, 0, 0, 258, 388, 405, 269,
	379, 418, 274, 386, 264, 351, 375, 0, 0, 260,
	403, 385, 333, 312, 313, 259, 0, 370, 291, 304,
	288, 349, 594, 617, 621, 287, 684, 615, 413, 262,
	0, 412, 348, 399, 404, 334, 328, 261, 401, 332,
	327, 316, 295, 685, 317, 318, 308, 360, 326, 361,
	309, 338, 337, 339, 0, 0, 910, 0, 0, 441,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 612, 0, 0, 0, 415, 0,
	0, 668, 0, 0, 0, 387, 0, 0, 319, 0,
	0, 0, 616, 0, 373, 354, 681, 558, 0, 371,
	324, 400, 362, 406, 389, 414, 367, 363, 253, 390,
	290, 335, 265, 267, 285, 292, 294, 296, 297, 344,
	345, 357, 378, 391, 392, 393, 289, 275, 372, 276,
	306, 277, 254, 281, 280, 282, 380, 283, 256, 358,
	397, 0, 302, 368, 331, 257, 330, 359, 396, 395,
	266, 422, 428, 429, 0, 0, 434, 0, 0, 0,
	443, 448, 449, 450, 452, 453, 454, 455, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 1504, 1503, 1505,
	427, 320, 321, 300, 250, 251, 472, 666, 350, 0,
	0, 0, 0, 680, 661, 663, 664, 667, 671, 672,
	673, 674, 675, 677, 679, 683, 471, 0, 0, 0,
	0, 0, 468, 356, 2108, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 408,
	420, 437, 440, 0, 0, 0, 0, 255, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 682, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 620, 0, 0,
	340, 341, 342, 343, 669, 0, 273, 438, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 1708, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 432, 433,
	299, 305, 451, 307, 272, 355, 301, 417, 314, 0,
	444, 0, 445, 0, 0, 0, 0, 347, 310, 311,
	381, 315, 325, 369, 416, 353, 374, 270, 407, 382,
	329, 0, 0, 691, 665, 690, 692, 693, 689, 694,
	695, 676, 577, 0, 624, 687, 686, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 248, 278, 279, 284, 469, 466, 398, 470,
	0, 252, 0, 323, 0, 364, 298, 0, 0, 654,
	631, 632, 633, 575, 634, 628, 629, 630, 655, 622,
	651, 652, 601, 625, 635, 650, 636, 653, 656, 657,
	696, 697, 642, 626, 220, 698, 639, 658, 649, 648,
	637, 623, 659, 660, 608, 603, 640, 641, 627, 643,
	644, 645, 576, 604, 605, 606, 607, 0, 0, 0,
	423, 424, 425, 447, 409, 0, 467, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 473, 461, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 0, 0, 0, 117, 352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 573, 0, 0, 0, 293, 1547, 0, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 457, 0, 458, 0, 0, 609, 0, 462,
	383, 336, 0, 0, 0, 0, 670, 678, 0, 0,
	0, 0, 0, 0, 0, 1732, 0, 0, 566, 0,
	0, 599, 647, 646, 586, 596, 0, 0, 268, 197,
	459, 0, 460, 587, 0, 595, 588, 592, 591, 589,
	590, 0, 662, 0, 0, 0, 0, 0, 0, 557,
	570, 0, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1708, 1708, 1708,
	1708, 0, 0, 0, 0, 0, 567, 568, 0, 1708,
	0, 0, 619, 0, 569, 0, 0, 1733, 593, 597,
	0, 0, 0, 0, 258, 388, 405, 269, 379, 418,
	274, 386, 264, 351, 375, 0, 0, 260, 403, 385,
	333, 312, 313, 259, 0, 370, 291, 304, 288, 349,
	594, 617, 621, 287, 684, 615, 413, 262, 0, 412,
	348, 399, 404, 334, 328, 261, 401, 332, 327, 316,
	295, 685, 317, 318, 308, 360, 326, 361, 309, 338,
	337, 339, 0, 0, 0, 0, 0, 441, 442, 0,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 117,
	0, 0, 612, 0, 0, 0, 415, 0, 0, 668,
	0, 0, 0, 387, 0, 0, 319, 0, 0, 117,
	616, 0, 373, 354, 681, 558, 117, 371, 324, 400,
	362, 406, 389, 414, 367, 363, 253, 390, 290, 335,
	265, 267, 285, 292, 294, 296, 297, 344, 345, 357,
	378, 391, 392, 393, 289, 275, 372, 276, 306, 277,
	254, 281, 280, 282, 380, 283, 256, 358, 397, 0,
	302, 368, 331, 257, 330, 359, 396, 395, 266, 422,
	428, 429, 0, 0, 434, 0, 0, 0, 443, 448,
	449, 450, 452, 453, 454, 455, 0, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 427, 320,
	321, 300, 250, 251, 472, 666, 350, 0, 0, 0,
	0, 680, 661, 663, 664, 667, 671, 672, 673, 674,
	675, 677, 679, 683, 471, 0, 0, 0, 0, 0,
	468, 356, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 408, 420, 437,
	440, 0, 0, 0, 0, 255, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 682, 0, 0, 0, 419,
	1708, 0, 0, 0, 0, 620, 0, 0, 340, 341,
	342, 343, 669, 0, 273, 438, 366, 0, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 432, 433, 299, 305,
	451, 307, 272, 355, 301, 417, 314, 0, 444, 0,
	445, 0, 0, 0, 0, 347, 310, 311, 381, 315,
	325, 369, 416, 353, 374, 270, 407, 382, 329, 0,
	0, 691, 665, 690, 692, 693, 689, 694, 695, 676,
	577, 0, 624, 687, 686, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	248, 278, 279, 284, 469, 466, 398, 470, 0, 252,
	0, 323, 0, 364, 298, 0, 0, 654, 631, 632,
	633, 575, 634, 628, 629, 630, 655, 622, 651, 652,
	601, 625, 635, 650, 636, 653, 656, 657, 696, 697,
	642, 626, 220, 698, 639, 658, 649, 648, 637, 623,
	659, 660, 608, 603, 640, 641, 627, 643, 644, 645,
	576, 604, 605, 606, 607, 0, 0, 0, 423, 424,
	425, 447, 409, 0, 467, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	473, 461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 174, 618,
	0, 0, 0, 0, 0, 0, 0, 0, 352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 573, 0, 0, 0, 293, 0, 0, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 457, 0, 458, 0, 0, 1041, 0, 462, 383,
	336, 0, 0, 0, 0, 670, 678, 0, 117, 0,
	0, 0, 0, 0, 0, 117, 0, 566, 117, 0,
	599, 647, 646, 586, 596, 0, 0, 268, 197, 459,
	0, 460, 587, 0, 595, 588, 592, 591, 589, 590,
	0, 662, 0, 0, 0, 0, 0, 0, 557, 570,
	0, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1708, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 567, 568, 0, 0, 0,
	0, 619, 0, 569, 0, 0, 614, 593, 597, 0,
	0, 0, 0, 258, 388, 405, 269, 379, 418, 274,
	386, 264, 351, 375, 0, 0, 260, 403, 385, 333,
	312, 313, 259, 0, 370, 291, 304, 288, 349, 594,
	617, 621, 287, 684, 615, 413, 262, 0, 412, 348,
	399, 404, 334, 328, 261, 401, 332, 327, 316, 295,
	685, 317, 318, 308, 360, 326, 361, 309, 338, 337,
	339, 0, 0, 0, 0, 117, 441, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 612, 0, 0, 0, 415, 0, 0, 668, 0,
	0, 0, 387, 0, 0, 319, 0, 0, 0, 616,
	0, 373, 354, 681, 558, 0, 371, 324, 400, 362,
	406, 389, 414, 367, 363, 253, 390, 290, 335, 265,
	267, 285, 292, 294, 296, 297, 344, 345, 357, 378,
	391, 392, 393, 289, 275, 372, 276, 306, 277, 254,
	281, 280, 282, 380, 283, 256, 358, 397, 0, 302,
	368, 331, 257, 330, 359, 396, 395, 266, 422, 428,
	429, 0, 0, 434, 0, 0, 0, 443, 448, 449,
	450, 452, 453, 454, 455, 0, 0, 0, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 427, 320, 321,
	300, 250, 251, 472, 666, 350, 0, 0, 0, 0,
	680, 661, 663, 664, 667, 671, 672, 673, 674, 675,
	677, 679, 683, 471, 0, 0, 0, 0, 0, 468,
	356, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 408, 420, 437, 440,
	0, 0, 0, 0, 255, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 682, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 620, 0, 0, 340, 341, 342,
	343, 669, 0, 273, 438, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 432, 433, 299, 305, 451,
	307, 272, 355, 301, 417, 314, 0, 444, 0, 445,
	0, 0, 0, 0, 347, 310, 311, 381, 315, 325,
	369, 416, 353, 374, 270, 407, 382, 329, 0, 0,
	691, 665, 690, 692, 693, 689, 694, 695, 676, 577,
	0, 624, 687, 686, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 0, 248,
	278, 279, 284, 469, 466, 398, 470, 0, 252, 0,
	323, 139, 364, 298, 0, 0, 654, 631, 632, 633,
	575, 634, 628, 629, 630, 655, 622, 651, 652, 601,
	625, 635, 650, 636, 653, 656, 657, 696, 697, 642,
	626, 220, 698, 639, 658, 649, 648, 637, 623, 659,
	660, 608, 603, 640, 641, 627, 643, 644, 645, 576,
	604, 605, 606, 607, 0, 618, 0, 423, 424, 425,
	447, 409, 0, 467, 352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 573, 0, 473,
	461, 293, 3398, 0, 322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 457, 0, 458,
	0, 0, 609, 0, 462, 383, 336, 0, 0, 0,
	0, 670, 678, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 566, 0, 0, 599, 647, 646, 586,
	596, 0, 0, 268, 197, 459, 0, 460, 587, 0,
	595, 588, 592, 591, 589, 590, 0, 662, 0, 0,
	0, 0, 0, 0, 557, 570, 0, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 567, 568, 0, 0, 0, 0, 619, 0, 569,
	0, 0, 614, 593, 597, 0, 0, 0, 0, 258,
	388, 405, 269, 379, 418, 274, 386, 264, 351, 375,
	0, 0, 260, 403, 385, 333, 312, 313, 259, 0,
	370, 291, 304, 288, 349, 594, 617, 621, 287, 684,
	615, 413, 262, 0, 412, 348, 399, 404, 334, 328,
	261, 401, 332, 327, 316, 295, 685, 317, 318, 308,
	360, 326, 361, 309, 338, 337, 339, 0, 0, 0,
	0, 0, 441, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 612, 0, 0,
	0, 415, 0, 0, 668, 0, 0, 0, 387, 0,
	0, 319, 0, 0, 0, 616, 0, 373, 354, 681,
	558, 0, 371, 324, 400, 362, 406, 389, 414, 367,
	363, 253, 390, 290, 335, 265, 267, 285, 292, 294,
	296, 297, 344, 345, 357, 378, 391, 392, 393, 289,
	275, 372, 276, 306, 277, 254, 281, 280, 282, 380,
	283, 256, 358, 397, 0, 302, 368, 331, 257, 330,
	359, 396, 395, 266, 422, 428, 429, 0, 0, 434,
	0, 0, 0, 443, 448, 449, 450, 452, 453, 454,
	455, 0, 0, 0, 0, 436, 0, 0, 0, 0,
	0, 0, 0, 427, 320, 321, 300, 250, 251, 472,
	666, 350, 0, 0, 0, 0, 680, 661, 663, 664,
	667, 671, 672, 673, 674, 675, 677, 679, 683, 471,
	0, 0, 0, 0, 0, 468, 356, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 408, 420, 437, 440, 0, 0, 0, 0,
	255, 439, 0, 0, 0, 0, 0, 0, 0, 0,
	682, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	620, 0, 0, 340, 341, 342, 343, 669, 0, 273,
	438, 366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 432, 433, 299, 305, 451, 307, 272, 355, 301,
	417, 314, 0, 444, 0, 445, 0, 0, 0, 0,
	347, 310, 311, 381, 315, 325, 369, 416, 353, 374,
	270, 407, 382, 329, 0, 0, 691, 665, 690, 692,
	693, 689, 694, 695, 676, 577, 0, 624, 687, 686,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 0, 248, 278, 279, 284, 469,
	466, 398, 470, 0, 252, 0, 323, 0, 364, 298,
	0, 0, 654, 631, 632, 633, 575, 634, 628, 629,
	630, 655, 622, 651, 652, 601, 625, 635, 650, 636,
	653, 656, 657, 696, 697, 642, 626, 220, 698, 639,
	658, 649, 648, 637, 623, 659, 660, 608, 603, 640,
	641, 627, 643, 644, 645, 576, 604, 605, 606, 607,
	0, 618, 0, 423, 424, 425, 447, 409, 0, 467,
	352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 573, 0, 473, 461, 293, 1547, 0,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 457, 0, 458, 0, 0, 609, 0,
	462, 383, 336, 0, 0, 0, 0, 670, 678, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 566,
	0, 0, 599, 647, 646, 586, 596, 0, 0, 268,
	197, 459, 0, 460, 587, 0, 595, 588, 592, 591,
	589, 590, 0, 662, 0, 0, 0, 0, 0, 0,
	557, 570, 0, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 567, 568, 0,
	0, 0, 0, 619, 0, 569, 0, 0, 614, 593,
	597, 0, 0, 0, 0, 258, 388, 405, 269, 379,
	418, 274, 386, 264, 351, 375, 0, 0, 260, 403,
	385, 333, 312, 313, 259, 0, 370, 291, 304, 288,
	349, 594, 617, 621, 287, 684, 615, 413, 262, 0,
	412, 348, 399, 404, 334, 328, 261, 401, 332, 327,
	316, 295, 685, 317, 318, 308, 360, 326, 361, 309,
	338, 337, 339, 0, 0, 0, 0, 0, 441, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 612, 0, 0, 0, 415, 0, 0,
	668, 0, 0, 0, 387, 0, 0, 319, 0, 0,
	0, 616, 0, 373, 354, 681, 558, 0, 371, 324,
	400, 362, 406, 389, 414, 367, 363, 253, 390, 290,
	335, 265, 267, 285, 292, 294, 296, 297, 344, 345,
	357, 378, 391, 392, 393, 289, 275, 372, 276, 306,
	277, 254, 281, 280, 282, 380, 283, 256, 358, 397,
	0, 302, 368, 331, 257, 330, 359, 396, 395, 266,
	422, 428, 429, 0, 0, 434, 0, 0, 0, 443,
	448, 449, 450, 452, 453, 454, 455, 0, 0, 0,
	0, 436, 0, 0, 0, 0, 0, 0, 0, 427,
	320, 321, 300, 250, 251, 472, 666, 350, 0, 0,
	0, 0, 680, 661, 663, 664, 667, 671, 672, 673,
	674, 675, 677, 679, 683, 471, 0, 0, 0, 0,
	0, 468, 356, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 408, 420,
	437, 440, 0, 0, 0, 0, 255, 439, 0, 0,
	0, 0, 0, 0, 0, 0, 682, 0, 0, 0,
	419, 0, 0, 0, 0, 0, 620, 0, 0, 340,
	341, 342, 343, 669, 0, 273, 438, 366, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 432, 433, 299,
	305, 451, 307, 272, 355, 301, 417, 314, 0, 444,
	0, 445, 0, 0, 0, 0, 347, 310, 311, 381,
	315, 325, 369, 416, 353, 374, 270, 407, 382, 329,
	0, 0, 691, 665, 690, 692, 693, 689, 694, 695,
	676, 577, 0, 624, 687, 686, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	0, 248, 278, 279, 284, 469, 466, 398, 470, 0,
	252, 0, 323, 0, 364, 298, 0, 0, 654, 631,
	632, 633, 575, 634, 628, 629, 630, 655, 622, 651,
	652, 601, 625, 635, 650, 636, 653, 656, 657, 696,
	697, 642, 626, 220, 698, 639, 658, 649, 648, 637,
	623, 659, 660, 608, 603, 640, 641, 627, 643, 644,
	645, 576, 604, 605, 606, 607, 0, 618, 0, 423,
	424, 425, 447, 409, 0, 467, 352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 573,
	0, 473, 461, 293, 0, 0, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 457,
	0, 458, 0, 0, 609, 0, 462, 383, 336, 0,
	0, 0, 0, 670, 678, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 566, 0, 0, 599, 647,
	646, 586, 596, 0, 0, 268, 197, 459, 0, 460,
	587, 0, 595, 588, 592, 591, 589, 590, 0, 662,
	0, 0, 0, 0, 0, 0, 557, 570, 0, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 567, 568, 1293, 0, 0, 0, 619,
	0, 569, 0, 0, 614, 593, 597, 0, 0, 0,
	0, 258, 388, 405, 269, 379, 418, 274, 386, 264,
	351, 375, 0, 0, 260, 403, 385, 333, 312, 313,
	259, 0, 370, 291, 304, 288, 349, 594, 617, 621,
	287, 684, 615, 413, 262, 0, 412, 348, 399, 404,
	334, 328, 261, 401, 332, 327, 316, 295, 685, 317,
	318, 308, 360, 326, 361, 309, 338, 337, 339, 0,
	0, 0, 0, 0, 441, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 612,
	0, 0, 0, 415, 0, 0, 668, 0, 0, 0,
	387, 0, 0, 319, 0, 0, 0, 616, 0, 373,
	354, 681, 558, 0, 371, 324, 400, 362, 406, 389,
	414, 367, 363, 253, 390, 290, 335, 265, 267, 285,
	292, 294, 296, 297, 344, 345, 357, 378, 391, 392,
	393, 289, 275, 372, 276, 306, 277, 254, 281, 280,
	282, 380, 283, 256, 358, 397, 0, 302, 368, 331,
	257, 330, 359, 396, 395, 266, 422, 428, 429, 0,
	0, 434, 0, 0, 0, 443, 448, 449, 450, 452,
	453, 454, 455, 0, 0, 0, 0, 436, 0, 0,
	0, 0, 0, 0, 0, 427, 320, 321, 300, 250,
	251, 472, 666, 350, 0, 0, 0, 0, 680, 661,
	663, 664, 667, 671, 672, 673, 674, 675, 677, 679,
	683, 471, 0, 0, 0, 0, 0, 468, 356, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 408, 420, 437, 440, 0, 0,
	0, 0, 255, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 682, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 620, 0, 0, 340, 341, 342, 343, 669,
	0, 273, 438, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 432, 433, 299, 305, 451, 307, 272,
	355, 301, 417, 314, 0, 444, 0, 445, 0, 0,
	0, 0, 347, 310, 311, 381, 315, 325, 369, 416,
	353, 374, 270, 407, 382, 329, 0, 0, 691, 665,
	690, 692, 693, 689, 694, 695, 676, 577, 0, 624,
	687, 686, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 0, 248, 278, 279,
	284, 469, 466, 398, 470, 0, 252, 0, 323, 0,
	364, 298, 0, 0, 654, 631, 632, 633, 575, 634,
	628, 629, 630, 655, 622, 651, 652, 601, 625, 635,
	650, 636, 653, 656, 657, 696, 697, 642, 626, 220,
	698, 639, 658, 649, 648, 637, 623, 659, 660, 608,
	603, 640, 641, 627, 643, 644, 645, 576, 604, 605,
	606, 607, 0, 0, 0, 423, 424, 425, 447, 409,
	618, 467, 0, 1892, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 0, 0, 0, 0, 473, 461, 0,
	0, 0, 573, 0, 0, 0, 293, 0, 0, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 457, 0, 458, 0, 0, 609, 0, 462,
	383, 336, 0, 0, 0, 0, 670, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 566, 0,
	0, 599, 647, 646, 586, 596, 0, 0, 268, 197,
	459, 0, 460, 587, 0, 595, 588, 592, 591, 589,
	590, 0, 662, 0, 0, 0, 0, 0, 0, 557,
	570, 0, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 567, 568, 0, 0,
	0, 0, 619, 0, 569, 0, 0, 614, 593, 597,
	0, 0, 0, 0, 258, 388, 405, 269, 379, 418,
	274, 386, 264, 351, 375, 0, 0, 260, 403, 385,
	333, 312, 313, 259, 0, 370, 291, 304, 288, 349,
	594, 617, 621, 287, 684, 615, 413, 262, 0, 412,
	348, 399, 404, 334, 328, 261, 401, 332, 327, 316,
	295, 685, 317, 318, 308, 360, 326, 361, 309, 338,
	337, 339, 0, 0, 0, 0, 0, 441, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 612, 0, 0, 0, 415, 0, 0, 668,
	0, 0, 0, 387, 0, 0, 319, 0, 0, 0,
	616, 0, 373, 354, 681, 558, 0, 371, 324, 400,
	362, 406, 389, 414, 367, 363, 253, 390, 290, 335,
	265, 267, 285, 292, 294, 296, 297, 344, 345, 357,
	378, 391, 392, 393, 289, 275, 372, 276, 306, 277,
	254, 281, 280, 282, 380, 283, 256, 358, 397, 0,
	302, 368, 331, 257, 330, 359, 396, 395, 266, 422,
	428, 429, 0, 0, 434, 0, 0, 0, 443, 448,
	449, 450, 452, 453, 454, 455, 0, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 427, 320,
	321, 300, 250, 251, 472, 666, 350, 0, 0, 0,
	0, 680, 661, 663, 664, 667, 671, 672, 673, 674,
	675, 677, 679, 683, 471, 0, 0, 0, 0, 0,
	468, 356, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 408, 420, 437,
	440, 0, 0, 0, 0, 255, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 682, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 620, 0, 0, 340, 341,
	342, 343, 669, 0, 273, 438, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 432, 433, 299, 305,
	451, 307, 272, 355, 301, 417, 314, 0, 444, 0,
	445, 0, 0, 0, 0, 347, 310, 311, 381, 315,
	325, 369, 416, 353, 374, 270, 407, 382, 329, 0,
	0, 691, 665, 690, 692, 693, 689, 694, 695, 676,
	577, 0, 624, 687, 686, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	248, 278, 279, 284, 469, 466, 398, 470, 0, 252,
	0, 323, 0, 364, 298, 0, 0, 654, 631, 632,
	633, 575, 634, 628, 629, 630, 655, 622, 651, 652,
	601, 625, 635, 650, 636, 653, 656, 657, 696, 697,
	642, 626, 220, 698, 639, 658, 649, 648, 637, 623,
	659, 660, 608, 603, 640, 641, 627, 643, 644, 645,
	576, 604, 605, 606, 607, 0, 618, 0, 423, 424,
	425, 447, 409, 0, 467, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 573, 0,
	473, 461, 293, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 457, 0,
	458, 0, 0, 609, 0, 462, 383, 336, 0, 0,
	0, 0, 670, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 566, 0, 0, 599, 647, 646,
	586, 596, 0, 0, 268, 197, 459, 0, 460, 587,
	0, 595, 588, 592, 591, 589, 590, 0, 662, 0,
	0, 0, 0, 0, 0, 557, 570, 0, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 567, 568, 0, 0, 0, 0, 619, 0,
	569, 0, 0, 614, 593, 597, 0, 0, 0, 0,
	258, 388, 405, 269, 379, 418, 274, 386, 264, 351,
	375, 0, 0, 260, 403, 385, 333, 312, 313, 259,
	0, 370, 291, 304, 288, 349, 594, 617, 621, 287,
	684, 615, 413, 262, 0, 412, 348, 399, 404, 334,
	328, 261, 401, 332, 327, 316, 295, 685, 317, 318,
	308, 360, 326, 361, 309, 338, 337, 339, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 612, 0,
	0, 0, 415, 0, 0, 668, 0, 0, 0, 387,
	0, 0, 319, 0, 0, 0, 616, 0, 373, 354,
	681, 558, 0, 371, 324, 400, 362, 406, 389, 414,
	367, 363, 253, 390, 290, 335, 265, 267, 285, 292,
	294, 296, 297, 344, 345, 357, 378, 391, 392, 393,
	289, 275, 372, 276, 306, 277, 254, 281, 280, 282,
	380, 283, 256, 358, 397, 0, 302, 368, 331, 257,
	330, 359, 396, 395, 266, 422, 428, 429, 0, 0,
	434, 0, 0, 0, 443, 448, 449, 450, 452, 453,
	454, 455, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 427, 320, 321, 300, 250, 251,
	472, 666, 350, 0, 0, 0, 0, 680, 661, 663,
	664, 667, 671, 672, 673, 674, 675, 677, 679, 683,
	471, 0, 0, 0, 0, 0, 468, 356, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 408, 420, 437, 440, 0, 0, 0,
	0, 255, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 682, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 620, 0, 0, 340, 341, 342, 343, 669, 0,
	273, 438, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 433, 299, 305, 451, 307, 272, 355,
	301, 417, 314, 0, 444, 0, 445, 0, 0, 0,
	0, 347, 310, 311, 381, 315, 325, 369, 416, 353,
	374, 270, 407, 382, 329, 0, 0, 691, 665, 690,
	692, 693, 689, 694, 695, 676, 577, 0, 624, 687,
	686, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 248, 278, 279, 284,
	469, 466, 398, 470, 0, 252, 0, 323, 0, 364,
	298, 0, 0, 654, 631, 632, 633, 575, 634, 628,
	629, 630, 655, 622, 651, 652, 601, 625, 635, 650,
	636, 653, 656, 657, 696, 697, 642, 626, 220, 698,
	639, 658, 649, 648, 637, 623, 659, 660, 608, 603,
	640, 641, 627, 643, 644, 645, 576, 604, 605, 606,
	607, 0, 618, 0, 423, 424, 425, 447, 409, 0,
	467, 352, 0, 0, 0, 0, 0, 0, 0, 0,
	1422, 0, 0, 0, 573, 0, 473, 461, 293, 0,
	0, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 457, 0, 458, 0, 0, 609,
	0, 462, 383, 336, 0, 0, 0, 0, 670, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	566, 0, 0, 599, 647, 646, 586, 596, 0, 0,
	268, 197, 459, 0, 460, 587, 0, 595, 588, 592,
	591, 589, 590, 0, 662, 0, 0, 0, 0, 0,
	0, 0, 570, 0, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 567, 568,
	0, 0, 0, 0, 619, 0, 569, 0, 0, 614,
	593, 597, 0, 0, 0, 0, 258, 388, 405, 269,
	379, 418, 274, 386, 264, 351, 375, 0, 0, 260,
	403, 385, 333, 312, 313, 259, 0, 370, 291, 304,
	288, 349, 594, 617, 621, 287, 684, 615, 413, 262,
	0, 412, 348, 399, 404, 334, 328, 261, 401, 332,
	327, 316, 295, 685, 317, 318, 308, 360, 326, 361,
	309, 338, 337, 339, 0, 0, 0, 0, 0, 441,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 612, 0, 0, 0, 415, 0,
	0, 668, 0, 0, 0, 387, 0, 0, 319, 0,
	0, 0, 616, 0, 373, 354, 681, 0, 0, 371,
	324, 400, 362, 406, 389, 414, 367, 363, 253, 390,
	290, 335, 265, 267, 285, 292, 294, 296, 297, 344,
	345, 357, 378, 391, 392, 393, 289, 275, 372, 276,
	306, 277, 254, 281, 280, 282, 380, 283, 256, 358,
	397, 0, 302, 368, 331, 257, 330, 359, 396, 395,
	266, 422, 1423, 1424, 0, 0, 434, 0, 0, 0,
	443, 448, 449, 450, 452, 453, 454, 455, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	427, 320, 321, 300, 250, 251, 472, 666, 350, 0,
	0, 0, 0, 680, 661, 663, 664, 667, 671, 672,
	673, 674, 675, 677, 679, 683, 471, 0, 0, 0,
	0, 0, 468, 356, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 408,
	420, 437, 440, 0, 0, 0, 0, 255, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 682, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 620, 0, 0,
	340, 341, 342, 343, 669, 0, 273, 438, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 432, 433,
	299, 305, 451, 307, 272, 355, 301, 417, 314, 0,
	444, 0, 445, 0, 0, 0, 0, 347, 310, 311,
	381, 315, 325, 369, 416, 353, 374, 270, 407, 382,
	329, 0, 0, 691, 665, 690, 692, 693, 689, 694,
	695, 676, 577, 0, 624, 687, 686, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 248, 278, 279, 284, 469, 466, 398, 470,
	0, 252, 0, 323, 0, 364, 298, 0, 0, 654,
	631, 632, 633, 575, 634, 628, 629, 630, 655, 622,
	651, 652, 601, 625, 635, 650, 636, 653, 656, 657,
	696, 697, 642, 626, 220, 698, 639, 658, 649, 648,
	637, 623, 659, 660, 608, 603, 640, 641, 627, 643,
	644, 645, 576, 604, 605, 606, 607, 0, 618, 0,
	423, 424, 425, 447, 409, 0, 467, 352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	573, 0, 473, 461, 293, 0, 0, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 0, 458, 0, 0, 609, 0, 462, 383, 336,
	0, 0, 0, 0, 670, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 599,
	647, 646, 586, 596, 0, 0, 268, 197, 459, 0,
	460, 587, 0, 595, 588, 592, 591, 589, 590, 0,
	662, 0, 0, 0, 0, 0, 0, 557, 570, 0,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 567, 568, 0, 0, 0, 0,
	619, 0, 569, 0, 0, 614, 593, 597, 0, 0,
	0, 0, 258, 388, 405, 269, 379, 418, 274, 386,
	264, 351, 375, 0, 0, 260, 403, 385, 333, 312,
	313, 259, 0, 370, 291, 304, 288, 349, 594, 617,
	621, 287, 684, 615, 413, 262, 0, 412, 348, 399,
	404, 334, 328, 261, 401, 332, 327, 316, 295, 685,
	317, 318, 308, 360, 326, 361, 309, 338, 337, 339,
	0, 0, 0, 0, 0, 441, 442, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	612, 0, 0, 0, 415, 0, 0, 668, 0, 0,
	0, 387, 0, 0, 319, 0, 0, 0, 616, 0,
	373, 354, 681, 558, 0, 371, 324, 400, 362, 406,
	389, 414, 367, 363, 253, 390, 290, 335, 265, 267,
	285, 292, 294, 296, 297, 344, 345, 357, 378, 391,
	392, 393, 289, 275, 372, 276, 306, 277, 254, 281,
	280, 282, 380, 283, 256, 358, 397, 0, 302, 368,
	331, 257, 330, 359, 396, 395, 266, 422, 428, 429,
	0, 0, 434, 0, 0, 0, 443, 448, 449, 450,
	452, 453, 454, 455, 0, 0, 0, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 427, 320, 321, 300,
	250, 251, 472, 666, 350, 0, 0, 0, 0, 680,
	661, 663, 664, 667, 671, 672, 673, 674, 675, 677,
	679, 683, 471, 0, 0, 0, 0, 0, 468, 356,
	0, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 384, 408, 420, 437, 440, 0,
	0, 0, 0, 255, 439, 0, 0, 0, 0, 0,
	0, 0, 0, 682, 0, 0, 0, 419, 0, 0,
	0, 0, 0, 620, 0, 0, 340, 341, 342, 343,
	669, 0, 273, 438, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 432, 433, 299, 305, 451, 307,
	272, 355, 301, 417, 314, 0, 444, 0, 445, 0,
	0, 0, 0, 347, 310, 311, 381, 315, 325, 369,
	416, 353, 374, 270, 407, 382, 329, 0, 0, 691,
	665, 690, 692, 693, 689, 694, 695, 676, 577, 0,
	624, 687, 686, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 394, 0, 248, 278,
	279, 284, 469, 466, 398, 470, 0, 252, 0, 323,
	0, 364, 298, 0, 0, 654, 631, 632, 633, 575,
	634, 628, 629, 630, 655, 622, 651, 652, 601, 625,
	635, 650, 636, 653, 656, 657, 696, 697, 642, 626,
	220, 698, 639, 658, 649, 648, 637, 623, 659, 660,
	608, 603, 640, 641, 627, 643, 644, 645, 576, 604,
	605, 606, 607, 0, 618, 0, 423, 424, 425, 447,
	409, 0, 467, 352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 573, 0, 473, 461,
	293, 0, 0, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 457, 0, 458, 0,
	0, 609, 0, 462, 383, 336, 0, 0, 0, 0,
	670, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 566, 0, 0, 599, 647, 646, 586, 596,
	0, 0, 268, 197, 459, 0, 460, 587, 0, 595,
	588, 592, 591, 589, 590, 0, 662, 0, 0, 0,
	0, 0, 0, 0, 570, 0, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	567, 568, 0, 0, 0, 0, 619, 0, 569, 0,
	0, 614, 593, 597, 0, 0, 0, 0, 258, 388,
	405, 269, 379, 418, 274, 386, 264, 351, 375, 0,
	0, 260, 403, 385, 333, 312, 313, 259, 0, 370,
	291, 304, 288, 349, 594, 617, 621, 287, 684, 615,
	413, 262, 0, 412, 348, 399, 404, 334, 328, 261,
	401, 332, 327, 316, 295, 685, 317, 318, 308, 360,
	326, 361, 309, 338, 337, 339, 0, 0, 0, 0,
	0, 441, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 612, 0, 0, 0,
	415, 0, 0, 668, 0, 0, 0, 387, 0, 0,
	319, 0, 0, 0, 616, 0, 373, 354, 681, 0,
	0, 371, 324, 400, 362, 406, 389, 414, 367, 363,
	253, 390, 290, 335, 265, 267, 285, 292, 294, 296,
	297, 344, 345, 357, 378, 391, 392, 393, 289, 275,
	372, 276, 306, 277, 254, 281, 280, 282, 380, 283,
	256, 358, 397, 0, 302, 368, 331, 257, 330, 359,
	396, 395, 266, 422, 428, 429, 0, 0, 434, 0,
	0, 0, 443, 448, 449, 450, 452, 453, 454, 455,
	0, 0, 0, 0, 436, 0, 0, 0, 0, 0,
	0, 0, 427, 320, 321, 300, 250, 251, 472, 666,
	350, 0, 0, 0, 0, 680, 661, 663, 664, 667,
	671, 672, 673, 674, 675, 677, 679, 683, 471, 0,
	0, 0, 0, 0, 468, 356, 0, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 408, 420, 437, 440, 0, 0, 0, 0, 255,
	439, 0, 0, 0, 0, 0, 0, 0, 0, 682,
	0, 0, 0, 419, 0, 0, 0, 0, 0, 620,
	0, 0, 340, 341, 342, 343, 669, 0, 273, 438,
	366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	432, 433, 299, 305, 451, 307, 272, 355, 301, 417,
	314, 0, 444, 0, 445, 0, 0, 0, 0, 347,
	310, 311, 381, 315, 325, 369, 416, 353, 374, 270,
	407, 382, 329, 0, 0, 691, 665, 690, 692, 693,
	689, 694, 695, 676, 577, 0, 624, 687, 686, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 0, 248, 278, 279, 284, 469, 466,
	398, 470, 0, 252, 0, 323, 0, 364, 298, 0,
	0, 654, 631, 632, 633, 575, 634, 628, 629, 630,
	655, 622, 651, 652, 601, 625, 635, 650, 636, 653,
	656, 657, 696, 697, 642, 626, 220, 698, 639, 658,
	649, 648, 637, 623, 659, 660, 608, 603, 640, 641,
	627, 643, 644, 645, 576, 604, 605, 606, 607, 0,
	0, 0, 423, 424, 425, 447, 409, 0, 467, 174,
	51, 163, 138, 0, 0, 0, 0, 0, 0, 352,
	0, 0, 0, 0, 473, 461, 0, 164, 0, 0,
	0, 0, 0, 0, 156, 0, 293, 0, 165, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 457, 0, 458, 0, 0, 115, 0, 462,
	383, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 0, 0, 0, 0, 0, 168, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	459, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 388, 405, 269, 379, 418,
	274, 386, 264, 351, 375, 0, 0, 260, 403, 385,
	333, 312, 313, 259, 0, 370, 291, 304, 288, 349,
	0, 402, 430, 287, 421, 0, 413, 262, 0, 412,
	348, 399, 404, 334, 328, 261, 401, 332, 327, 316,
	295, 446, 317, 318, 308, 360, 326, 361, 309, 338,
	337, 339, 0, 0, 0, 0, 0, 441, 442, 0,
	0, 0, 0, 0, 0, 137, 162, 172, 0, 101,
	0, 0, 0, 0, 0, 0, 415, 0, 0, 189,
	0, 0, 0, 387, 0, 0, 319, 161, 155, 154,
	431, 0, 373, 354, 57, 0, 0, 371, 324, 400,
	362, 406, 389, 414, 367, 363, 253, 390, 290, 335,
	265, 267, 285, 292, 294, 296, 297, 344, 345, 357,
	378, 391, 392, 393, 289, 275, 372, 276, 306, 277,
	254, 281, 280, 282, 380, 283, 256, 358, 397, 0,
	302, 368, 331, 257, 330, 359, 396, 395, 266, 422,
	428, 429, 0, 0, 434, 157, 158, 159, 443, 448,
	449, 450, 452, 453, 454, 455, 0, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 427, 320,
	321, 300, 250, 251, 410, 286, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 426,
	192, 0, 0, 456, 200, 0, 0, 0, 160, 0,
	201, 356, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 408, 420, 437,
	440, 0, 0, 0, 0, 255, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 435, 0, 0, 340, 341,
	342, 343, 303, 0, 273, 438, 366, 113, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 0, 0, 0, 0, 0, 432, 433, 299, 305,
	451, 307, 272, 355, 301, 417, 314, 0, 444, 0,
	445, 0, 0, 0, 0, 347, 310, 311, 381, 315,
	325, 369, 416, 353, 374, 270, 407, 382, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	248, 278, 279, 284, 365, 263, 398, 376, 0, 252,
	0, 323, 139, 364, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 0, 352, 0, 423, 424,
	425, 447, 409, 0, 202, 39, 190, 193, 195, 194,
	0, 49, 0, 293, 0, 5, 322, 0, 0, 118,
	203, 461, 0, 0, 0, 0, 0, 0, 0, 457,
	0, 458, 0, 0, 0, 0, 462, 383, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1074, 0, 0, 196, 0,
	0, 586, 596, 0, 0, 268, 197, 459, 0, 460,
	587, 0, 595, 588, 592, 591, 589, 590, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 593, 0, 0, 0, 0,
	0, 258, 388, 405, 269, 379, 418, 274, 386, 264,
	351, 375, 0, 0, 260, 403, 385, 333, 312, 313,
	259, 0, 370, 291, 304, 288, 349, 594, 402, 430,
	287, 421, 0, 413, 262, 0, 412, 348, 399, 404,
	334, 328, 261, 401, 332, 327, 316, 295, 446, 317,
	318, 308, 360, 326, 361, 309, 338, 337, 339, 0,
	0, 0, 0, 0, 441, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	387, 0, 0, 319, 0, 0, 0, 431, 0, 373,
	354, 0, 0, 0, 371, 324, 400, 362, 406, 389,
	414, 367, 363, 253, 390, 290, 335, 265, 267, 285,
	292, 294, 296, 297, 344, 345, 357, 378, 391, 392,
	393, 289, 275, 372, 276, 306, 277, 254, 281, 280,
	282, 380, 283, 256, 358, 397, 0, 302, 368, 331,
	257, 330, 359, 396, 395, 266, 422, 428, 429, 0,
	0, 434, 0, 0, 0, 443, 448, 449, 450, 452,
	453, 454, 455, 0, 0, 0, 0, 436, 0, 0,
	0, 0, 0, 0, 0, 427, 320, 321, 300, 250,
	251, 472, 286, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 426, 0, 0, 0,
	456, 471, 0, 0, 0, 0, 0, 468, 356, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 408, 420, 437, 440, 0, 0,
	0, 0, 255, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 435, 0, 0, 340, 341, 342, 343, 303,
	0, 273, 438, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 432, 433, 299, 305, 451, 307, 272,
	355, 301, 417, 314, 0, 444, 0, 445, 0, 0,
	0, 0, 347, 310, 311, 381, 315, 325, 369, 416,
	353, 374, 270, 407, 382, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 0, 248, 278, 279,
	284, 469, 466, 398, 470, 0, 252, 0, 323, 0,
	364, 298, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 0, 0, 0, 249, 244, 245,
	246, 247, 0, 0, 0, 423, 424, 425, 447, 409,
	0, 467, 174, 51, 163, 138, 0, 0, 0, 0,
	0, 0, 352, 490, 0, 0, 0, 473, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 0, 458, 0, 0,
	0, 0, 462, 383, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 495, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 268, 197, 459, 0, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 388, 405,
	269, 379, 418, 274, 386, 264, 351, 375, 0, 0,
	260, 403, 385, 333, 312, 313, 259, 0, 370, 291,
	304, 288, 349, 0, 402, 430, 287, 421, 0, 413,
	262, 0, 412, 348, 399, 404, 334, 328, 261, 401,
	332, 327, 316, 295, 446, 317, 318, 308, 360, 326,
	361, 309, 338, 337, 339, 0, 0, 0, 0, 0,
	441, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 494, 0, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 387, 0, 0, 319,
	0, 0, 0, 431, 0, 373, 354, 0, 0, 0,
	371, 324, 400, 362, 406, 389, 414, 367, 363, 253,
	390, 290, 335, 265, 267, 285, 292, 294, 296, 297,
	344, 345, 357, 378, 391, 392, 393, 289, 275, 372,
	276, 306, 277, 254, 281, 280, 282, 380, 283, 256,
	358, 397, 0, 302, 368, 331, 257, 330, 359, 396,
	395, 266, 422, 428, 429, 0, 0, 434, 0, 0,
	0, 443, 448, 449, 450, 452, 453, 454, 455, 0,
	0, 0, 0, 436, 0, 0, 0, 0, 0, 0,
	0, 427, 320, 321, 300, 250, 251, 472, 286, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 426, 0, 0, 0, 456, 471, 0, 0,
	0, 0, 0, 468, 356, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	408, 420, 437, 440, 0, 0, 0, 0, 255, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 435, 0,
	0, 340, 341, 342, 343, 491, 493, 273, 438, 366,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 432,
	433, 299, 305, 451, 307, 272, 355, 301, 417, 314,
	0, 444, 0, 445, 0, 0, 0, 0, 347, 310,
	311, 381, 315, 325, 369, 416, 353, 374, 270, 407,
	382, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 248, 278, 279, 284, 469, 466, 398,
	470, 0, 252, 0, 323, 139, 364, 298, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 352, 249, 244, 245, 246, 247, 0, 0,
	900, 423, 424, 425, 447, 409, 0, 467, 0, 293,
	0, 0, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 461, 457, 0, 458, 0, 0,
	0, 0, 462, 383, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 268, 197, 459, 0, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	886, 0, 0, 0, 0, 0, 0, 258, 388, 405,
	269, 379, 418, 274, 386, 264, 351, 375, 0, 0,
	2161, 2163, 2164, 2165, 2166, 2167, 2168, 0, 2173, 2169,
	2170, 2171, 2172, 0, 2156, 2157, 2158, 2159, 884, 2140,
	2162, 0, 2141, 348, 2142, 2143, 2144, 2145, 2146, 2147,
	2148, 2149, 2150, 2153, 2154, 2151, 2152, 2160, 360, 326,
	361, 309, 338, 337, 339, 911, 913, 915, 917, 920,
	441, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 387, 0, 0, 319,
	0, 0, 0, 2155, 0, 373, 354, 0, 0, 0,
	371, 324, 400, 362, 406, 389, 414, 367, 363, 253,
	390, 290, 335, 265, 267, 285, 292, 294, 296, 297,
	344, 345, 357, 378, 391, 392, 393, 289, 275, 372,
	276, 306, 277, 254, 281, 280, 282, 380, 283, 256,
	358, 397, 0, 302, 368, 331, 257, 330, 359, 396,
	395, 266, 422, 428, 429, 0, 0, 434, 0, 0,
	0, 443, 448, 449, 450, 452, 453, 454, 455, 0,
	0, 0, 0, 436, 0, 0, 0, 0, 0, 0,
	0, 427, 320, 321, 300, 250, 251, 472, 286, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 426, 0, 0, 0, 456, 471, 0, 0,
	0, 0, 0, 468, 356, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	408, 420, 437, 440, 0, 0, 0, 0, 255, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 435, 0,
	0, 340, 341, 342, 343, 303, 0, 273, 438, 366,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 432,
	433, 299, 305, 451, 307, 272, 355, 301, 417, 314,
	0, 444, 0, 445, 0, 0, 0, 0, 347, 310,
	311, 381, 315, 325, 369, 416, 353, 374, 270, 407,
	382, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 248, 278, 279, 284, 469, 466, 398,
	470, 0, 252, 910, 323, 0, 364, 298, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 352, 249, 244, 245, 246, 247, 0, 0,
	0, 423, 424, 425, 447, 409, 0, 467, 0, 293,
	0, 0, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 461, 457, 0, 458, 0, 0,
	0, 0, 462, 383, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 268, 197, 459, 0, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 2016, 2019, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 388, 405,
	269, 379, 418, 274, 386, 264, 351, 375, 0, 0,
	260, 403, 385, 333, 312, 313, 259, 0, 370, 291,
	304, 288, 349, 0, 402, 430, 287, 421, 0, 413,
	262, 0, 412, 348, 399, 404, 334, 328, 261, 401,
	332, 327, 316, 295, 446, 317, 318, 308, 360, 326,
	361, 309, 338, 337, 339, 0, 0, 0, 0, 0,
	441, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2020, 415,
	0, 0, 0, 2015, 0, 2014, 387, 2012, 2017, 319,
	0, 0, 0, 431, 0, 373, 354, 0, 0, 0,
	371, 324, 400, 362, 406, 389, 414, 367, 363, 253,
	390, 290, 335, 265, 267, 285, 292, 294, 296, 297,
	344, 345, 357, 378, 391, 392, 393, 289, 275, 372,
	276, 306, 277, 254, 281, 280, 282, 380, 283, 256,
	358, 397, 2018, 302, 368, 331, 257, 330, 359, 396,
	395, 266, 422, 428, 429, 0, 0, 434, 0, 0,
	0, 443, 448, 449, 450, 452, 453, 454, 455, 0,
	0, 0, 0, 436, 0, 0, 0, 0, 0, 0,
	0, 427, 320, 321, 300, 250, 251, 472, 286, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 426, 0, 0, 0, 456, 471, 0, 0,
	0, 0, 0, 468, 356, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	408, 420, 437, 440, 0, 0, 0, 0, 255, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 435, 0,
	0, 340, 341, 342, 343, 303, 0, 273, 438, 366,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 432,
	433, 299, 305, 451, 307, 272, 355, 301, 417, 314,
	0, 444, 0, 445, 0, 0, 0, 0, 347, 310,
	311, 381, 315, 325, 369, 416, 353, 374, 270, 407,
	382, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 248, 278, 279, 284, 469, 466, 398,
	470, 0, 252, 0, 323, 0, 364, 298, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 0, 249, 244, 245, 246, 247, 352, 0,
	0, 423, 424, 425, 447, 409, 0, 467, 0, 0,
	1772, 0, 0, 0, 0, 293, 0, 0, 322, 0,
	0, 0, 0, 473, 461, 0, 0, 0, 0, 0,
	0, 457, 0, 458, 0, 0, 0, 0, 462, 383,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 1773, 0, 0, 0, 268, 197, 459,
	0, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 1007, 1008, 1009, 1006, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 388, 405, 269, 379, 418, 274,
	386, 264, 351, 375, 0, 0, 260, 403, 385, 333,
	312, 313, 259, 0, 370, 291, 304, 288, 349, 0,
	402, 430, 287, 421, 0, 413, 262, 0, 412, 348,
	399, 404, 334, 328, 261, 401, 332, 327, 316, 295,
	446, 317, 318, 308, 360, 326, 361, 309, 338, 337,
	339, 0, 0, 0, 0, 0, 441, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 387, 0, 0, 319, 0, 0, 0, 431,
	0, 373, 354, 0, 0, 0, 371, 324, 400, 362,
	406, 389, 414, 367, 363, 253, 390, 290, 335, 265,
	267, 285, 292, 294, 296, 297, 344, 345, 357, 378,
	391, 392, 393, 289, 275, 372, 276, 306, 277, 254,
	281, 280, 282, 380, 283, 256, 358, 397, 0, 302,
	368, 331, 257, 330, 359, 396, 395, 266, 422, 428,
	429, 0, 0, 434, 0, 0, 0, 443, 448, 449,
	450, 452, 453, 454, 455, 0, 0, 0, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 427, 320, 321,
	300, 250, 251, 472, 286, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 426, 0,
	0, 0, 456, 471, 0, 0, 0, 0, 0, 468,
	356, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 408, 420, 437, 440,
	0, 0, 0, 0, 255, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 435, 0, 0, 340, 341, 342,
	343, 303, 0, 273, 438, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 432, 433, 299, 305, 451,
	307, 272, 355, 301, 417, 314, 0, 444, 0, 445,
	0, 0, 0, 0, 347, 310, 311, 381, 315, 325,
	369, 416, 353, 374, 270, 407, 382, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 0, 248,
	278, 279, 284, 469, 466, 398, 470, 0, 252, 0,
	323, 0, 364, 298, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 352, 249,
	244, 245, 246, 247, 0, 0, 0, 423, 424, 425,
	447, 409, 0, 467, 0, 293, 817, 0, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	461, 457, 0, 458, 0, 0, 0, 0, 462, 383,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 824, 825, 0, 0, 0, 0, 268, 197, 459,
	0, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 388, 812, 269, 379, 418, 274,
	386, 264, 351, 375, 0, 0, 260, 403, 385, 333,
	312, 313, 259, 0, 370, 291, 304, 288, 349, 0,
	402, 430, 287, 421, 802, 413, 262, 801, 412, 348,
	399, 404, 334, 328, 261, 401, 332, 327, 316, 295,
	446, 317, 318, 308, 360, 326, 361, 309, 338, 337,
	339, 0, 0, 0, 0, 0, 441, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 0,
	0, 0, 387, 0, 0, 319, 0, 0, 0, 431,
	0, 373, 354, 0, 0, 0, 371, 324, 400, 362,
	406, 389, 414, 815, 363, 253, 390, 290, 335, 265,
	267, 285, 292, 294, 296, 297, 344, 345, 357, 378,
	391, 392, 393, 289, 275, 372, 276, 306, 277, 254,
	281, 280, 282, 380, 283, 256, 358, 397, 0, 302,
	368, 331, 257, 330, 359, 396, 395, 266, 422, 428,
	429, 0, 0, 434, 0, 0, 0, 443, 448, 449,
	450, 452, 453, 454, 455, 0, 0, 0, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 427, 320, 321,
	300, 250, 251, 472, 286, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 426, 0,
	0, 0, 456, 471, 0, 0, 0, 0, 0, 468,
	356, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 408, 420, 437, 440,
	0, 0, 0, 0, 255, 439, 0, 0, 0, 0,
	0, 0, 816, 0, 411, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 819, 0, 0, 340, 341, 342,
	343, 303, 0, 273, 438, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 432, 433, 299, 305, 451,
	307, 272, 355, 301, 417, 314, 0, 444, 0, 445,
	0, 0, 0, 0, 826, 813, 822, 814, 315, 325,
	369, 416, 353, 374, 270, 407, 382, 823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 0, 248,
	278, 279, 284, 469, 466, 398, 470, 0, 252, 0,
	323, 0, 364, 298, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 0, 0, 352, 249,
	244, 245, 246, 247, 0, 0, 0, 423, 424, 425,
	447, 409, 0, 467, 0, 293, 0, 0, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	461, 457, 0, 458, 0, 0, 0, 0, 462, 383,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 268, 197, 459,
	0, 460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 2035, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 388, 405, 269, 379, 418, 274,
	386, 264, 351, 375, 0, 0, 260, 403, 385, 333,
	312, 313, 259, 0, 370, 291, 304, 288, 349, 0,
	402, 430, 287, 421, 0, 413, 262, 0, 412, 348,
	399, 404, 334, 328, 261, 401, 332, 327, 316, 295,
	446, 317, 318, 308, 360, 326, 361, 309, 338, 337,
	339, 0, 0, 0, 0, 0, 441, 442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2034, 415, 0, 0, 0, 2039,
	2037, 0, 387, 0, 2038, 319, 0, 0, 0, 431,
	0, 373, 354, 0, 0, 0, 371, 324, 400, 362,
	406, 389, 414, 367, 363, 253, 390, 290, 335, 265,
	267, 285, 292, 294, 296, 297, 344, 345, 357, 378,
	391, 392, 393, 289, 275, 372, 276, 306, 277, 254,
	281, 280, 282, 380, 283, 256, 358, 397, 0, 302,
	368, 331, 257, 330, 359, 396, 395, 266, 422, 428,
	429, 0, 0, 434, 0, 0, 0, 443, 448, 449,
	450, 452, 453, 454, 455, 0, 0, 0, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 427, 320, 321,
	300, 250, 251, 472, 286, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 346, 426, 0,
	0, 0, 456, 471, 0, 0, 0, 0, 0, 468,
	356, 0, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 408, 420, 437, 440,
	0, 0, 0, 0, 255, 439, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 419, 0,
	0, 0, 0, 0, 435, 0, 0, 340, 341, 342,
	343, 303, 0, 273, 438, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 432, 433, 299, 305, 451,
	307, 272, 355, 301, 417, 314, 0, 444, 0, 445,
	0, 0, 0, 0, 347, 310, 311, 381, 315, 325,
	369, 416, 353, 374, 270, 407, 382, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 0, 248,
	278, 279, 284, 469, 466, 398, 470, 0, 252, 0,
	323, 0, 364, 298, 0, 0, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	219, 220, 229, 230, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 174, 0, 0, 249,
	244, 245, 246, 247, 0, 0, 352, 423, 424, 425,
	447, 409, 0, 467, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 0, 0, 322, 0, 0, 473,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 457,
	0, 458, 0, 0, 115, 0, 462, 383, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 1816, 0, 196, 0,
	0, 0, 0, 0, 0, 268, 197, 459, 0, 460,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 388, 405, 269, 379, 418, 274, 386, 264,
	351, 375, 0, 0, 260, 403, 385, 333, 312, 313,
	259, 0, 370, 291, 304, 288, 349, 0, 402, 430,
	287, 421, 0, 413, 262, 0, 412, 348, 399, 404,
	334, 328, 261, 401, 332, 327, 316, 295, 446, 317,
	318, 308, 360, 326, 361, 309, 338, 337, 339, 0,
	0, 0, 0, 0, 441, 442, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 415, 0, 0, 0, 0, 0, 0,
	387, 0, 0, 319, 0, 0, 0, 431, 0, 373,
	354, 0, 0, 0, 371, 324, 400, 362, 406, 389,
	414, 367, 363, 253, 390, 290, 335, 265, 267, 285,
	292, 294, 296, 297, 344, 345, 357, 378, 391, 392,
	393, 289, 275, 372, 276, 306, 277, 254, 281, 280,
	282, 380, 283, 256, 358, 397, 0, 302, 368, 331,
	257, 330, 359, 396, 395, 266, 422, 428, 429, 0,
	0, 434, 0, 0, 0, 443, 448, 449, 450, 452,
	453, 454, 455, 0, 0, 0, 0, 436, 0, 0,
	0, 0, 0, 0, 0, 427, 320, 321, 300, 250,
	251, 472, 286, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 346, 426, 0, 0, 0,
	456, 471, 0, 0, 0, 0, 0, 468, 356, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 408, 420, 437, 440, 0, 0,
	0, 0, 255, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 419, 0, 0, 0,
	0, 0, 435, 0, 0, 340, 341, 342, 343, 303,
	0, 273, 438, 366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 432, 433, 299, 305, 451, 307, 272,
	355, 301, 417, 314, 0, 444, 0, 445, 0, 0,
	0, 0, 347, 310, 311, 381, 315, 325, 369, 416,
	353, 374, 270, 407, 382, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 0, 248, 278, 279,
	284, 469, 466, 398, 470, 0, 252, 0, 323, 139,
	364, 298, 0, 0, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 221,
	222, 223, 224, 225, 226, 227, 228, 0, 219, 220,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 174, 0, 0, 249, 244, 245,
	246, 247, 0, 0, 352, 423, 424, 425, 447, 409,
	0, 467, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 0, 322, 0, 0, 473, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 457, 0, 458,
	0, 0, 115, 0, 462, 383, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 1807, 0, 196, 0, 0, 0,
	0, 0, 0, 268, 197, 459, 0, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	388, 405, 269, 379, 418, 274, 386, 264, 351, 375,
	0, 0, 260, 403, 385, 333, 312, 313, 259, 0,
	370, 291, 304, 288, 349, 0, 402, 430, 287, 421,
	0, 413, 262, 0, 412, 348, 399, 404, 334, 328,
	261, 401, 332, 327, 316, 295, 446, 317, 318, 308,
	360, 326, 361, 309, 338, 337, 339, 0, 0, 0,
	0, 0, 441, 442, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 415, 0, 0, 0, 0, 0, 0, 387, 0,
	0, 319, 0, 0, 0, 431, 0, 373, 354, 0,
	0, 0, 371, 324, 400, 362, 406, 389, 414, 367,
	363, 253, 390, 290, 335, 265, 267, 285, 292, 294,
	296, 297, 344, 345, 357, 378, 391, 392, 393, 289,
	275, 372, 276, 306, 277, 254, 281, 280, 282, 380,
	283, 256, 358, 397, 0, 302, 368, 331, 257, 330,
	359, 396, 395, 266, 422, 428, 429, 0, 0, 434,
	0, 0, 0, 443, 448, 449, 450, 452, 453, 454,
	455, 0, 0, 0, 0, 436, 0, 0, 0, 0,
	0, 0, 0, 427, 320, 321, 300, 250, 251, 472,
	286, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 346, 426, 0, 0, 0, 456, 471,
	0, 0, 0, 0, 0, 468, 356, 0, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 408, 420, 437, 440, 0, 0, 0, 0,
	255, 439, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 419, 0, 0, 0, 0, 0,
	435, 0, 0, 340, 341, 342, 343, 303, 0, 273,
	438, 366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 432, 433, 299, 305, 451, 307, 272, 355, 301,
	417, 314, 0, 444, 0, 445, 0, 0, 0, 0,
	347, 310, 311, 381, 315, 325, 369, 416, 353, 374,
	270, 407, 382, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 394, 0, 248, 278, 279, 284, 469,
	466, 398, 470, 0, 252, 0, 323, 139, 364, 298,
	0, 0, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 221, 222, 223,
	224, 225, 226, 227, 228, 0, 219, 220, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 174, 0, 0, 249, 244, 245, 246, 247,
	0, 0, 352, 423, 424, 425, 447, 409, 0, 467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 322, 0, 0, 473, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 0, 458, 0, 0,
	115, 0, 462, 383, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1706, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 268, 197, 459, 0, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 388, 405,
	269, 379, 418, 274, 386, 264, 351, 375, 0, 0,
	260, 403, 385, 333, 312, 313, 259, 0, 370, 291,
	304, 288, 349, 0, 402, 430, 287, 421, 0, 413,
	262, 0, 412, 348, 399, 404, 334, 328, 261, 401,
	332, 327, 316, 295, 446, 317, 318, 308, 360, 326,
	361, 309, 338, 337, 339, 0, 0, 0, 0, 0,
	441, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 387, 0, 0, 319,
	0, 0, 0, 431, 0, 373, 354, 0, 0, 0,
	371, 324, 400, 362, 406, 389, 414, 367, 363, 253,
	390, 290, 335, 265, 267, 285, 292, 294, 296, 297,
	344, 345, 357, 378, 391, 392, 393, 289, 275, 372,
	276, 306, 277, 254, 281, 280, 282, 380, 283, 256,
	358, 397, 0, 302, 368, 331, 257, 330, 359, 396,
	395, 266, 422, 428, 429, 0, 0, 434, 0, 0,
	0, 443, 448, 449, 450, 452, 453, 454, 455, 0,
	0, 0, 0, 436, 0, 0, 0, 0, 0, 0,
	0, 427, 320, 321, 300, 250, 251, 472, 286, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 426, 0, 0, 0, 456, 471, 0, 0,
	0, 0, 0, 468, 356, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	408, 420, 437, 440, 0, 0, 0, 0, 255, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 435, 0,
	0, 340, 341, 342, 343, 303, 0, 273, 438, 366,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 432,
	433, 299, 305, 451, 307, 272, 355, 301, 417, 314,
	0, 444, 0, 445, 0, 0, 0, 0, 347, 310,
	311, 381, 315, 325, 369, 416, 353, 374, 270, 407,
	382, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 248, 278, 279, 284, 469, 466, 398,
	470, 0, 252, 0, 323, 139, 364, 298, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 352, 249, 244, 245, 246, 247, 0, 0,
	0, 423, 424, 425, 447, 409, 0, 467, 0, 293,
	0, 0, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 473, 461, 457, 0, 458, 0, 0,
	0, 0, 462, 383, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 824, 825, 0, 0, 0,
	0, 268, 197, 459, 0, 460, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 388, 405,
	269, 379, 418, 274, 386, 264, 351, 375, 0, 0,
	260, 403, 385, 333, 312, 313, 259, 0, 370, 291,
	304, 288, 349, 0, 402, 430, 287, 421, 802, 413,
	262, 801, 412, 348, 399, 404, 334, 328, 261, 401,
	332, 327, 316, 295, 446, 317, 318, 308, 360, 326,
	361, 309, 338, 337, 339, 0, 0, 0, 0, 0,
	441, 442, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 415,
	0, 0, 0, 0, 0, 0, 387, 0, 0, 319,
	0, 0, 0, 431, 0, 373, 354, 0, 0, 0,
	371, 324, 400, 362, 406, 389, 414, 367, 363, 253,
	390, 290, 335, 265, 267, 285, 292, 294, 296, 297,
	344, 345, 357, 378, 391, 392, 393, 289, 275, 372,
	276, 306, 277, 254, 281, 280, 282, 380, 283, 256,
	358, 397, 0, 302, 368, 331, 257, 330, 359, 396,
	395, 266, 422, 428, 429, 0, 0, 434, 0, 0,
	0, 443, 448, 449, 450, 452, 453, 454, 455, 0,
	0, 0, 0, 436, 0, 0, 0, 0, 0, 0,
	0, 427, 320, 321, 300, 250, 251, 472, 286, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 346, 426, 0, 0, 0, 456, 471, 0, 0,
	0, 0, 0, 468, 356, 0, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	408, 420, 437, 440, 0, 0, 0, 0, 255, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 419, 0, 0, 0, 0, 0, 435, 0,
	0, 340, 341, 342, 343, 303, 0, 273, 438, 366,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 432,
	433, 299, 305, 451, 307, 272, 355, 301, 417, 314,
	0, 444, 0, 445, 0, 0, 0, 0, 826, 1725,
	822, 1726, 315, 325, 369, 416, 353, 374, 270, 407,
	382, 823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 0, 248, 278, 279, 284, 469, 466, 398,
	470, 0, 252, 0, 323, 0, 364, 298, 0, 0,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 221, 222, 223, 224, 225,
	226, 227, 228, 0, 219, 220, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 0, 0, 249, 244, 245, 246, 247, 0, 352,
	0, 423, 424, 425, 447, 409, 0, 467, 2485, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 0, 322,
	0, 0, 0, 473, 461, 0, 0, 0, 0, 0,
	0, 0, 457, 0, 458, 0, 0, 0, 0, 462,
	383, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 268, 197,
	459, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 388, 405, 269, 379, 418,
	274, 386, 264, 351, 375, 0, 0, 260, 403, 385,
	333, 312, 313, 259, 0, 370, 291, 304, 288, 349,
	0, 402, 430, 287, 421, 0, 413, 262, 0, 412,
	348, 399, 404, 334, 328, 261, 401, 332, 327, 316,
	295, 446, 317, 318, 308, 360, 326, 361, 309, 338,
	337, 339, 0, 0, 0, 0, 0, 441, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 2488, 0, 0,
	2487, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 319, 0, 0, 0,
	431, 0, 373, 354, 0, 0, 0, 371, 324, 400,
	362, 406, 389, 414, 367, 363, 253, 390, 290, 335,
	265, 267, 285, 292, 294, 296, 297, 344, 345, 357,
	378, 391, 392, 393, 289, 275, 372, 276, 306, 277,
	254, 281, 280, 282, 380, 283, 256, 358, 397, 0,
	302, 368, 331, 257, 330, 359, 396, 395, 266, 422,
	428, 429, 0, 0, 434, 0, 0, 0, 443, 448,
	449, 450, 452, 453, 454, 455, 0, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 427, 320,
	321, 300, 250, 251, 472, 286, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 426,
	0, 0, 0, 456, 471, 0, 0, 0, 0, 0,
	468, 356, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 408, 420, 437,
	440, 0, 0, 0, 0, 255, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 435, 0, 0, 340, 341,
	342, 343, 303, 0, 273, 438, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 432, 433, 299, 305,
	451, 307, 272, 355, 301, 417, 314, 0, 444, 0,
	445, 0, 0, 0, 0, 347, 310, 311, 381, 315,
	325, 369, 416, 353, 374, 270, 407, 382, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	248, 278, 279, 284, 469, 466, 398, 470, 0, 252,
	0, 323, 0, 364, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 352,
	249, 244, 245, 246, 247, 0, 0, 0, 423, 424,
	425, 447, 409, 0, 467, 0, 293, 1260, 0, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	473, 461, 457, 0, 458, 0, 0, 0, 0, 462,
	383, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 1258, 0, 0, 0, 268, 197,
	459, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1256, 0, 0,
	0, 0, 0, 0, 258, 388, 405, 269, 379, 418,
	274, 386, 264, 351, 375, 0, 0, 260, 403, 385,
	333, 312, 313, 259, 0, 370, 291, 304, 288, 349,
	0, 402, 430, 287, 421, 0, 413, 262, 0, 412,
	348, 399, 404, 334, 328, 261, 401, 332, 327, 316,
	295, 446, 317, 318, 308, 360, 326, 361, 309, 338,
	337, 339, 0, 0, 0, 0, 0, 441, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 319, 0, 0, 0,
	431, 0, 373, 354, 0, 0, 0, 371, 324, 400,
	362, 406, 389, 414, 367, 363, 253, 390, 290, 335,
	265, 267, 285, 292, 294, 296, 297, 344, 345, 357,
	378, 391, 392, 393, 289, 275, 372, 276, 306, 277,
	254, 281, 280, 282, 380, 283, 256, 358, 397, 0,
	302, 368, 331, 257, 330, 359, 396, 395, 266, 422,
	428, 429, 0, 0, 434, 0, 0, 0, 443, 448,
	449, 450, 452, 453, 454, 455, 0, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 427, 320,
	321, 300, 250, 251, 472, 286, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 426,
	0, 0, 0, 456, 471, 0, 0, 0, 0, 0,
	468, 356, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 408, 420, 437,
	440, 0, 0, 0, 0, 255, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 435, 0, 0, 340, 341,
	342, 343, 303, 0, 273, 438, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 432, 433, 299, 305,
	451, 307, 272, 355, 301, 417, 314, 0, 444, 0,
	445, 0, 0, 0, 0, 347, 310, 311, 381, 315,
	325, 369, 416, 353, 374, 270, 407, 382, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	248, 278, 279, 284, 469, 466, 398, 470, 0, 252,
	0, 323, 0, 364, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 352,
	249, 244, 245, 246, 247, 0, 0, 0, 423, 424,
	425, 447, 409, 0, 467, 0, 293, 1254, 0, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	473, 461, 457, 0, 458, 0, 0, 0, 0, 462,
	383, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 1258, 0, 0, 0, 268, 197,
	459, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1256, 0, 0,
	0, 0, 0, 0, 258, 388, 405, 269, 379, 418,
	274, 386, 264, 351, 375, 0, 0, 260, 403, 385,
	333, 312, 313, 259, 0, 370, 291, 304, 288, 349,
	0, 402, 430, 287, 421, 0, 413, 262, 0, 412,
	348, 399, 404, 334, 328, 261, 401, 332, 327, 316,
	295, 446, 317, 318, 308, 360, 326, 361, 309, 338,
	337, 339, 0, 0, 0, 0, 0, 441, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 319, 0, 0, 0,
	431, 0, 373, 354, 0, 0, 0, 371, 324, 400,
	362, 406, 389, 414, 367, 363, 253, 390, 290, 335,
	265, 267, 285, 292, 294, 296, 297, 344, 345, 357,
	378, 391, 392, 393, 289, 275, 372, 276, 306, 277,
	254, 281, 280, 282, 380, 283, 256, 358, 397, 0,
	302, 368, 331, 257, 330, 359, 396, 395, 266, 422,
	428, 429, 0, 0, 434, 0, 0, 0, 443, 448,
	449, 450, 452, 453, 454, 455, 0, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 427, 320,
	321, 300, 250, 251, 472, 286, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 426,
	0, 0, 0, 456, 471, 0, 0, 0, 0, 0,
	468, 356, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 408, 420, 437,
	440, 0, 0, 0, 0, 255, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 435, 0, 0, 340, 341,
	342, 343, 303, 0, 273, 438, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 432, 433, 299, 305,
	451, 307, 272, 355, 301, 417, 314, 0, 444, 0,
	445, 0, 0, 0, 0, 347, 310, 311, 381, 315,
	325, 369, 416, 353, 374, 270, 407, 382, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	248, 278, 279, 284, 469, 466, 398, 470, 0, 252,
	0, 323, 0, 364, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 352,
	249, 244, 245, 246, 247, 0, 0, 0, 423, 424,
	425, 447, 409, 0, 467, 0, 293, 0, 0, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	473, 461, 457, 0, 458, 0, 0, 0, 0, 462,
	383, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3307,
	0, 196, 647, 0, 0, 0, 0, 0, 268, 197,
	459, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 388, 405, 269, 379, 418,
	274, 386, 264, 351, 375, 0, 0, 260, 403, 385,
	333, 312, 313, 259, 0, 370, 291, 304, 288, 349,
	0, 402, 430, 287, 421, 0, 413, 262, 0, 412,
	348, 399, 404, 334, 328, 261, 401, 332, 327, 316,
	295, 446, 317, 318, 308, 360, 326, 361, 309, 338,
	337, 339, 0, 0, 0, 0, 0, 441, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 319, 0, 0, 0,
	431, 0, 373, 354, 0, 0, 0, 371, 324, 400,
	362, 406, 389, 414, 367, 363, 253, 390, 290, 335,
	265, 267, 285, 292, 294, 296, 297, 344, 345, 357,
	378, 391, 392, 393, 289, 275, 372, 276, 306, 277,
	254, 281, 280, 282, 380, 283, 256, 358, 397, 0,
	302, 368, 331, 257, 330, 359, 396, 395, 266, 422,
	428, 429, 0, 0, 434, 0, 0, 0, 443, 448,
	449, 450, 452, 453, 454, 455, 0, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 427, 320,
	321, 300, 250, 251, 472, 286, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 426,
	0, 0, 0, 456, 471, 0, 0, 0, 0, 0,
	468, 356, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 408, 420, 437,
	440, 0, 0, 0, 0, 255, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 435, 0, 0, 340, 341,
	342, 343, 303, 0, 273, 438, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 432, 433, 299, 305,
	451, 307, 272, 355, 301, 417, 314, 0, 444, 0,
	445, 0, 0, 0, 0, 347, 310, 311, 381, 315,
	325, 369, 416, 353, 374, 270, 407, 382, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	248, 278, 279, 284, 469, 466, 398, 470, 0, 252,
	0, 323, 0, 364, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 352,
	249, 244, 245, 246, 247, 0, 0, 0, 423, 424,
	425, 447, 409, 0, 467, 0, 293, 0, 0, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	473, 461, 457, 0, 458, 0, 0, 0, 0, 462,
	383, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 1258, 0, 0, 0, 268, 197,
	459, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1256, 0, 0,
	0, 0, 0, 0, 258, 388, 405, 269, 379, 418,
	274, 386, 264, 351, 375, 0, 0, 260, 403, 385,
	333, 312, 313, 259, 0, 370, 291, 304, 288, 349,
	0, 402, 430, 287, 421, 0, 413, 262, 0, 412,
	348, 399, 404, 334, 328, 261, 401, 332, 327, 316,
	295, 446, 317, 318, 308, 360, 326, 361, 309, 338,
	337, 339, 0, 0, 0, 0, 0, 441, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 319, 0, 0, 0,
	431, 0, 373, 354, 0, 0, 0, 371, 324, 400,
	362, 406, 389, 414, 367, 363, 253, 390, 290, 335,
	265, 267, 285, 292, 294, 296, 297, 344, 345, 357,
	378, 391, 392, 393, 289, 275, 372, 276, 306, 277,
	254, 281, 280, 282, 380, 283, 256, 358, 397, 0,
	302, 368, 331, 257, 330, 359, 396, 395, 266, 422,
	428, 429, 0, 0, 434, 0, 0, 0, 443, 448,
	449, 450, 452, 453, 454, 455, 0, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 427, 320,
	321, 300, 250, 251, 472, 286, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 426,
	0, 0, 0, 456, 471, 0, 0, 0, 0, 0,
	468, 356, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 408, 420, 437,
	440, 0, 0, 0, 0, 255, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 435, 0, 0, 340, 341,
	342, 343, 303, 0, 273, 438, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 432, 433, 299, 305,
	451, 307, 272, 355, 301, 417, 314, 0, 444, 0,
	445, 0, 0, 0, 0, 347, 310, 311, 381, 315,
	325, 369, 416, 353, 374, 270, 407, 382, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	248, 278, 279, 284, 469, 466, 398, 470, 0, 252,
	0, 323, 0, 364, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 352,
	249, 244, 245, 246, 247, 0, 0, 0, 423, 424,
	425, 447, 409, 0, 467, 0, 293, 0, 0, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	473, 461, 457, 0, 458, 0, 0, 0, 0, 462,
	383, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 1258, 0, 0, 0, 268, 197,
	459, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3021, 0, 0,
	0, 0, 0, 0, 258, 388, 405, 269, 379, 418,
	274, 386, 264, 351, 375, 0, 0, 260, 403, 385,
	333, 312, 313, 259, 0, 370, 291, 304, 288, 349,
	0, 402, 430, 287, 421, 0, 413, 262, 0, 412,
	348, 399, 404, 334, 328, 261, 401, 332, 327, 316,
	295, 446, 317, 318, 308, 360, 326, 361, 309, 338,
	337, 339, 0, 0, 0, 0, 0, 441, 442, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 415, 0, 0, 0,
	0, 0, 0, 387, 0, 0, 319, 0, 0, 0,
	431, 0, 373, 354, 0, 0, 0, 371, 324, 400,
	362, 406, 389, 414, 367, 363, 253, 390, 290, 335,
	265, 267, 285, 292, 294, 296, 297, 344, 345, 357,
	378, 391, 392, 393, 289, 275, 372, 276, 306, 277,
	254, 281, 280, 282, 380, 283, 256, 358, 397, 0,
	302, 368, 331, 257, 330, 359, 396, 395, 266, 422,
	428, 429, 0, 0, 434, 0, 0, 0, 443, 448,
	449, 450, 452, 453, 454, 455, 0, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 427, 320,
	321, 300, 250, 251, 472, 286, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 346, 426,
	0, 0, 0, 456, 471, 0, 0, 0, 0, 0,
	468, 356, 0, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 408, 420, 437,
	440, 0, 0, 0, 0, 255, 439, 0, 0, 0,
	0, 0, 0, 0, 0, 411, 0, 0, 0, 419,
	0, 0, 0, 0, 0, 435, 0, 0, 340, 341,
	342, 343, 303, 0, 273, 438, 366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 432, 433, 299, 305,
	451, 307, 272, 355, 301, 417, 314, 0, 444, 0,
	445, 0, 0, 0, 0, 347, 310, 311, 381, 315,
	325, 369, 416, 353, 374, 270, 407, 382, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	248, 278, 279, 284, 469, 466, 398, 470, 0, 252,
	0, 323, 0, 364, 298, 0, 0, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 221, 222, 223, 224, 225, 226, 227, 228,
	0, 219, 220, 229, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 0, 0, 0,
	249, 244, 245, 246, 247, 352, 0, 0, 423, 424,
	425, 447, 409, 0, 467, 0, 0, 2104, 0, 0,
	0, 0, 293, 0, 0, 322, 0, 0, 0, 0,
	473, 461, 0, 0, 0, 0, 0, 0, 457, 0,
	458, 0, 0, 0, 0, 462, 383, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	2106, 0, 0, 0, 268, 197, 459, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 388, 405, 269, 379, 418, 274, 386, 264, 351,
	375, 0, 0, 260, 403, 385, 333, 312, 313, 259,
	0, 370, 291, 304, 288, 349, 0, 402, 430, 287,
	421, 0, 413, 262, 0, 412, 348, 399, 404, 334,
	328, 261, 401, 332, 327, 316, 295, 446, 317, 318,
	308, 360, 326, 361, 309, 338, 337, 339, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 319, 0, 0, 0, 431, 0, 373, 354,
	0, 0, 0, 371, 324, 400, 362, 406, 389, 414,
	367, 363, 253, 390, 290, 335, 265, 267, 285, 292,
	294, 296, 297, 344, 345, 357, 378, 391, 392, 393,
	289, 275, 372, 276, 306, 277, 254, 281, 280, 282,
	380, 283, 256, 358, 397, 0, 302, 368, 331, 257,
	330, 359, 396, 395, 266, 422, 428, 429, 0, 0,
	434, 0, 0, 0, 443, 448, 449, 450, 452, 453,
	454, 455, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 427, 320, 321, 300, 250, 251,
	472, 286, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 426, 0, 0, 0, 456,
	471, 0, 0, 0, 0, 0, 468, 356, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 408, 420, 437, 440, 0, 0, 0,
	0, 255, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 435, 0, 0, 340, 341, 342, 343, 303, 0,
	273, 438, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 433, 299, 305, 451, 307, 272, 355,
	301, 417, 314, 0, 444, 0, 445, 0, 0, 0,
	0, 347, 310, 311, 381, 315, 325, 369, 416, 353,
	374, 270, 407, 382, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 248, 278, 279, 284,
	469, 466, 398, 470, 0, 252, 0, 323, 0, 364,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 352, 249, 244, 245, 246,
	247, 0, 0, 0, 423, 424, 425, 447, 409, 0,
	467, 0, 293, 2125, 0, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 461, 457, 0,
	458, 0, 0, 0, 0, 462, 383, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	1258, 0, 0, 0, 268, 197, 459, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 388, 405, 269, 379, 418, 274, 386, 264, 351,
	375, 0, 0, 260, 403, 385, 333, 312, 313, 259,
	0, 370, 291, 304, 288, 349, 0, 402, 430, 287,
	421, 0, 413, 262, 0, 412, 348, 399, 404, 334,
	328, 261, 401, 332, 327, 316, 295, 446, 317, 318,
	308, 360, 326, 361, 309, 338, 337, 339, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 319, 0, 0, 0, 431, 0, 373, 354,
	0, 0, 0, 371, 324, 400, 362, 406, 389, 414,
	367, 363, 253, 390, 290, 335, 265, 267, 285, 292,
	294, 296, 297, 344, 345, 357, 378, 391, 392, 393,
	289, 275, 372, 276, 306, 277, 254, 281, 280, 282,
	380, 283, 256, 358, 397, 0, 302, 368, 331, 257,
	330, 359, 396, 395, 266, 422, 428, 429, 0, 0,
	434, 0, 0, 0, 443, 448, 449, 450, 452, 453,
	454, 455, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 427, 320, 321, 300, 250, 251,
	472, 286, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 426, 0, 0, 0, 456,
	471, 0, 0, 0, 0, 0, 468, 356, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 408, 420, 437, 440, 0, 0, 0,
	0, 255, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 435, 0, 0, 340, 341, 342, 343, 303, 0,
	273, 438, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 433, 299, 305, 451, 307, 272, 355,
	301, 417, 314, 0, 444, 0, 445, 0, 0, 0,
	0, 347, 310, 311, 381, 315, 325, 369, 416, 353,
	374, 270, 407, 382, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 248, 278, 279, 284,
	469, 466, 398, 470, 0, 252, 0, 323, 0, 364,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 352, 249, 244, 245, 246,
	247, 0, 0, 0, 423, 424, 425, 447, 409, 0,
	467, 0, 293, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 461, 457, 0,
	458, 0, 0, 0, 0, 462, 383, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3407, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 459, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 388, 405, 269, 379, 418, 274, 386, 264, 351,
	375, 0, 0, 260, 403, 385, 333, 312, 313, 259,
	0, 370, 291, 304, 288, 349, 0, 402, 430, 287,
	421, 0, 413, 262, 0, 412, 348, 399, 404, 334,
	328, 261, 401, 332, 327, 316, 295, 446, 317, 318,
	308, 360, 326, 361, 309, 338, 337, 339, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 319, 0, 0, 0, 431, 0, 373, 354,
	0, 0, 0, 371, 324, 400, 362, 406, 389, 414,
	367, 363, 253, 390, 290, 335, 265, 267, 285, 292,
	294, 296, 297, 344, 345, 357, 378, 391, 392, 393,
	289, 275, 372, 276, 306, 277, 254, 281, 280, 282,
	380, 283, 256, 358, 397, 0, 302, 368, 331, 257,
	330, 359, 396, 395, 266, 422, 428, 429, 0, 0,
	434, 0, 0, 0, 443, 448, 449, 450, 452, 453,
	454, 455, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 427, 320, 321, 300, 250, 251,
	472, 286, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 426, 0, 0, 0, 456,
	471, 0, 0, 0, 0, 0, 468, 356, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 408, 420, 437, 440, 0, 0, 0,
	0, 255, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 435, 0, 0, 340, 341, 342, 343, 303, 0,
	273, 438, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 433, 299, 305, 451, 307, 272, 355,
	301, 417, 314, 0, 444, 0, 445, 0, 0, 0,
	0, 347, 310, 311, 381, 315, 325, 369, 416, 353,
	374, 270, 407, 382, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 248, 278, 279, 284,
	469, 466, 398, 470, 0, 252, 0, 323, 0, 364,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 352, 249, 244, 245, 246,
	247, 0, 0, 0, 423, 424, 425, 447, 409, 0,
	467, 0, 293, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 461, 457, 0,
	458, 0, 0, 0, 0, 462, 383, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 647, 0,
	0, 0, 0, 0, 268, 197, 459, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 388, 405, 269, 379, 418, 274, 386, 264, 351,
	375, 0, 0, 260, 403, 385, 333, 312, 313, 259,
	0, 370, 291, 304, 288, 349, 0, 402, 430, 287,
	421, 0, 413, 262, 0, 412, 348, 399, 404, 334,
	328, 261, 401, 332, 327, 316, 295, 446, 317, 318,
	308, 360, 326, 361, 309, 338, 337, 339, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 319, 0, 0, 0, 431, 0, 373, 354,
	0, 0, 0, 371, 324, 400, 362, 406, 389, 414,
	367, 363, 253, 390, 290, 335, 265, 267, 285, 292,
	294, 296, 297, 344, 345, 357, 378, 391, 392, 393,
	289, 275, 372, 276, 306, 277, 254, 281, 280, 282,
	380, 283, 256, 358, 397, 0, 302, 368, 331, 257,
	330, 359, 396, 395, 266, 422, 428, 429, 0, 0,
	434, 0, 0, 0, 443, 448, 449, 450, 452, 453,
	454, 455, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 427, 320, 321, 300, 250, 251,
	472, 286, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 426, 0, 0, 0, 456,
	471, 0, 0, 0, 0, 0, 468, 356, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 408, 420, 437, 440, 0, 0, 0,
	0, 255, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 435, 0, 0, 340, 341, 342, 343, 303, 0,
	273, 438, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 433, 299, 305, 451, 307, 272, 355,
	301, 417, 314, 0, 444, 0, 445, 0, 0, 0,
	0, 347, 310, 311, 381, 315, 325, 369, 416, 353,
	374, 270, 407, 382, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 248, 278, 279, 284,
	469, 466, 398, 470, 0, 252, 0, 323, 0, 364,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 352, 249, 244, 245, 246,
	247, 0, 0, 0, 423, 424, 425, 447, 409, 0,
	467, 0, 293, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 461, 457, 0,
	458, 0, 0, 0, 0, 462, 383, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3326, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 459, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 388, 405, 269, 379, 418, 274, 386, 264, 351,
	375, 0, 0, 260, 403, 385, 333, 312, 313, 259,
	0, 370, 291, 304, 288, 349, 0, 402, 430, 287,
	421, 0, 413, 262, 0, 412, 348, 399, 404, 334,
	328, 261, 401, 332, 327, 316, 295, 446, 317, 318,
	308, 360, 326, 361, 309, 338, 337, 339, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 319, 0, 0, 0, 431, 0, 373, 354,
	0, 0, 0, 371, 324, 400, 362, 406, 389, 414,
	367, 363, 253, 390, 290, 335, 265, 267, 285, 292,
	294, 296, 297, 344, 345, 357, 378, 391, 392, 393,
	289, 275, 372, 276, 306, 277, 254, 281, 280, 282,
	380, 283, 256, 358, 397, 0, 302, 368, 331, 257,
	330, 359, 396, 395, 266, 422, 428, 429, 0, 0,
	434, 0, 0, 0, 443, 448, 449, 450, 452, 453,
	454, 455, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 427, 320, 321, 300, 250, 251,
	472, 286, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 426, 0, 0, 0, 456,
	471, 0, 0, 0, 0, 0, 468, 356, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 408, 420, 437, 440, 0, 0, 0,
	0, 255, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 435, 0, 0, 340, 341, 342, 343, 303, 0,
	273, 438, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 433, 299, 305, 451, 307, 272, 355,
	301, 417, 314, 0, 444, 0, 445, 0, 0, 0,
	0, 347, 310, 311, 381, 315, 325, 369, 416, 353,
	374, 270, 407, 382, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 248, 278, 279, 284,
	469, 466, 398, 470, 0, 252, 0, 323, 0, 364,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 352, 249, 244, 245, 246,
	247, 0, 0, 0, 423, 424, 425, 447, 409, 0,
	467, 0, 293, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 461, 457, 0,
	458, 0, 0, 0, 0, 462, 383, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 459, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 388, 405, 269, 379, 418, 274, 386, 264, 351,
	375, 0, 0, 260, 403, 385, 333, 312, 313, 259,
	0, 370, 291, 304, 288, 349, 0, 402, 430, 287,
	421, 0, 413, 262, 0, 412, 348, 399, 404, 334,
	328, 261, 401, 332, 327, 316, 295, 446, 317, 318,
	308, 360, 326, 361, 309, 338, 337, 339, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 3245, 0, 0, 387,
	0, 0, 319, 0, 0, 0, 431, 0, 373, 354,
	0, 0, 0, 371, 324, 400, 362, 406, 389, 414,
	367, 363, 253, 390, 290, 335, 265, 267, 285, 292,
	294, 296, 297, 344, 345, 357, 378, 391, 392, 393,
	289, 275, 372, 276, 306, 277, 254, 281, 280, 282,
	380, 283, 256, 358, 397, 0, 302, 368, 331, 257,
	330, 359, 396, 395, 266, 422, 428, 429, 0, 0,
	434, 0, 0, 0, 443, 448, 449, 450, 452, 453,
	454, 455, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 427, 320, 321, 300, 250, 251,
	472, 286, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 426, 0, 0, 0, 456,
	471, 0, 0, 0, 0, 0, 468, 356, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 408, 420, 437, 440, 0, 0, 0,
	0, 255, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 435, 0, 0, 340, 341, 342, 343, 303, 0,
	273, 438, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 433, 299, 305, 451, 307, 272, 355,
	301, 417, 314, 0, 444, 0, 445, 0, 0, 0,
	0, 347, 310, 311, 381, 315, 325, 369, 416, 353,
	374, 270, 407, 382, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 248, 278, 279, 284,
	469, 466, 398, 470, 0, 252, 0, 323, 0, 364,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 352, 249, 244, 245, 246,
	247, 0, 0, 0, 423, 424, 425, 447, 409, 0,
	467, 0, 293, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 461, 457, 0,
	458, 0, 0, 0, 0, 462, 383, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3017, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 459, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 388, 405, 269, 379, 418, 274, 386, 264, 351,
	375, 0, 0, 260, 403, 385, 333, 312, 313, 259,
	0, 370, 291, 304, 288, 349, 0, 402, 430, 287,
	421, 0, 413, 262, 0, 412, 348, 399, 404, 334,
	328, 261, 401, 332, 327, 316, 295, 446, 317, 318,
	308, 360, 326, 361, 309, 338, 337, 339, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 319, 0, 0, 0, 431, 0, 373, 354,
	0, 0, 0, 371, 324, 400, 362, 406, 389, 414,
	367, 363, 253, 390, 290, 335, 265, 267, 285, 292,
	294, 296, 297, 344, 345, 357, 378, 391, 392, 393,
	289, 275, 372, 276, 306, 277, 254, 281, 280, 282,
	380, 283, 256, 358, 397, 0, 302, 368, 331, 257,
	330, 359, 396, 395, 266, 422, 428, 429, 0, 0,
	434, 0, 0, 0, 443, 448, 449, 450, 452, 453,
	454, 455, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 427, 320, 321, 300, 250, 251,
	472, 286, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 426, 0, 0, 0, 456,
	471, 0, 0, 0, 0, 0, 468, 356, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 408, 420, 437, 440, 0, 0, 0,
	0, 255, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 435, 0, 0, 340, 341, 342, 343, 303, 0,
	273, 438, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 433, 299, 305, 451, 307, 272, 355,
	301, 417, 314, 0, 444, 0, 445, 0, 0, 0,
	0, 347, 310, 311, 381, 315, 325, 369, 416, 353,
	374, 270, 407, 382, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 248, 278, 279, 284,
	469, 466, 398, 470, 0, 252, 0, 323, 0, 364,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 352, 249, 244, 245, 246,
	247, 0, 0, 0, 423, 424, 425, 447, 409, 0,
	467, 0, 293, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 461, 457, 0,
	458, 0, 0, 0, 0, 462, 383, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	2844, 0, 0, 0, 268, 197, 459, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 388, 405, 269, 379, 418, 274, 386, 264, 351,
	375, 0, 0, 260, 403, 385, 333, 312, 313, 259,
	0, 370, 291, 304, 288, 349, 0, 402, 430, 287,
	421, 0, 413, 262, 0, 412, 348, 399, 404, 334,
	328, 261, 401, 332, 327, 316, 295, 446, 317, 318,
	308, 360, 326, 361, 309, 338, 337, 339, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 319, 0, 0, 0, 431, 0, 373, 354,
	0, 0, 0, 371, 324, 400, 362, 406, 389, 414,
	367, 363, 253, 390, 290, 335, 265, 267, 285, 292,
	294, 296, 297, 344, 345, 357, 378, 391, 392, 393,
	289, 275, 372, 276, 306, 277, 254, 281, 280, 282,
	380, 283, 256, 358, 397, 0, 302, 368, 331, 257,
	330, 359, 396, 395, 266, 422, 428, 429, 0, 0,
	434, 0, 0, 0, 443, 448, 449, 450, 452, 453,
	454, 455, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 427, 320, 321, 300, 250, 251,
	472, 286, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 426, 0, 0, 0, 456,
	471, 0, 0, 0, 0, 0, 468, 356, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 408, 420, 437, 440, 0, 0, 0,
	0, 255, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 435, 0, 0, 340, 341, 342, 343, 303, 0,
	273, 438, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 433, 299, 305, 451, 307, 272, 355,
	301, 417, 314, 0, 444, 0, 445, 0, 0, 0,
	0, 347, 310, 311, 381, 315, 325, 369, 416, 353,
	374, 270, 407, 382, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 248, 278, 279, 284,
	469, 466, 398, 470, 0, 252, 0, 323, 0, 364,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 352, 249, 244, 245, 246,
	247, 0, 0, 0, 423, 424, 425, 447, 409, 0,
	467, 0, 293, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 461, 457, 0,
	458, 0, 0, 0, 0, 462, 383, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 459, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 388, 405, 269, 379, 418, 274, 386, 264, 351,
	375, 0, 0, 260, 403, 385, 333, 312, 313, 259,
	0, 370, 291, 304, 288, 349, 0, 402, 430, 287,
	421, 0, 413, 262, 0, 412, 348, 399, 404, 334,
	328, 261, 401, 332, 327, 316, 295, 446, 317, 318,
	308, 360, 326, 361, 309, 338, 337, 339, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 3089, 0, 0, 387,
	0, 0, 319, 0, 0, 0, 431, 0, 373, 354,
	0, 0, 0, 371, 324, 400, 362, 406, 389, 414,
	367, 363, 253, 390, 290, 335, 265, 267, 285, 292,
	294, 296, 297, 344, 345, 357, 378, 391, 392, 393,
	289, 275, 372, 276, 306, 277, 254, 281, 280, 282,
	380, 283, 256, 358, 397, 0, 302, 368, 331, 257,
	330, 359, 396, 395, 266, 422, 428, 429, 0, 0,
	434, 0, 0, 0, 443, 448, 449, 450, 452, 453,
	454, 455, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 427, 320, 321, 300, 250, 251,
	472, 286, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 426, 0, 0, 0, 456,
	471, 0, 0, 0, 0, 0, 468, 356, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 408, 420, 437, 440, 0, 0, 0,
	0, 255, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 435, 0, 0, 340, 341, 342, 343, 303, 0,
	273, 438, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 433, 299, 305, 451, 307, 272, 355,
	301, 417, 314, 0, 444, 0, 445, 0, 0, 0,
	0, 347, 310, 311, 381, 315, 325, 369, 416, 353,
	374, 270, 407, 382, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 248, 278, 279, 284,
	469, 466, 398, 470, 0, 252, 0, 323, 0, 364,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 352, 249, 244, 245, 246,
	247, 0, 0, 0, 423, 424, 425, 447, 409, 0,
	467, 0, 293, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 461, 457, 0,
	458, 0, 0, 0, 0, 462, 383, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	2695, 0, 0, 0, 268, 197, 459, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 388, 405, 269, 379, 418, 274, 386, 264, 351,
	375, 0, 0, 260, 403, 385, 333, 312, 313, 259,
	0, 370, 291, 304, 288, 349, 0, 402, 430, 287,
	421, 0, 413, 262, 0, 412, 348, 399, 404, 334,
	328, 261, 401, 332, 327, 316, 295, 446, 317, 318,
	308, 360, 326, 361, 309, 338, 337, 339, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 319, 0, 0, 0, 431, 0, 373, 354,
	0, 0, 0, 371, 324, 400, 362, 406, 389, 414,
	367, 363, 253, 390, 290, 335, 265, 267, 285, 292,
	294, 296, 297, 344, 345, 357, 378, 391, 392, 393,
	289, 275, 372, 276, 306, 277, 254, 281, 280, 282,
	380, 283, 256, 358, 397, 0, 302, 368, 331, 257,
	330, 359, 396, 395, 266, 422, 428, 429, 0, 0,
	434, 0, 0, 0, 443, 448, 449, 450, 452, 453,
	454, 455, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 427, 320, 321, 300, 250, 251,
	472, 286, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 426, 0, 0, 0, 456,
	471, 0, 0, 0, 0, 0, 468, 356, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 408, 420, 437, 440, 0, 0, 0,
	0, 255, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 435, 0, 0, 340, 341, 342, 343, 303, 0,
	273, 438, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 433, 299, 305, 451, 307, 272, 355,
	301, 417, 314, 0, 444, 0, 445, 0, 0, 0,
	0, 347, 310, 311, 381, 315, 325, 369, 416, 353,
	374, 270, 407, 382, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 248, 278, 279, 284,
	469, 466, 398, 470, 0, 252, 0, 323, 0, 364,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 352, 249, 244, 245, 246,
	247, 0, 0, 0, 423, 424, 425, 447, 409, 0,
	467, 0, 293, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 461, 457, 0,
	458, 0, 0, 0, 0, 462, 383, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 459, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2710, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 388, 405, 269, 379, 418, 274, 386, 264, 351,
	375, 0, 0, 260, 403, 385, 333, 312, 313, 259,
	0, 370, 291, 304, 288, 349, 0, 402, 430, 287,
	421, 0, 413, 262, 0, 412, 348, 399, 404, 334,
	328, 261, 401, 332, 327, 316, 295, 446, 317, 318,
	308, 360, 326, 361, 309, 338, 337, 339, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 319, 0, 0, 0, 431, 0, 373, 354,
	0, 0, 0, 371, 324, 400, 362, 406, 389, 414,
	367, 363, 253, 390, 290, 335, 265, 267, 285, 292,
	294, 296, 297, 344, 345, 357, 378, 391, 392, 393,
	289, 275, 372, 276, 306, 277, 254, 281, 280, 282,
	380, 283, 256, 358, 397, 0, 302, 368, 331, 257,
	330, 359, 396, 395, 266, 422, 428, 429, 0, 0,
	434, 0, 0, 0, 443, 448, 449, 450, 452, 453,
	454, 455, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 427, 320, 321, 300, 250, 251,
	472, 286, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 426, 0, 0, 0, 456,
	471, 0, 0, 0, 0, 0, 468, 356, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 408, 420, 437, 440, 0, 0, 0,
	0, 255, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 435, 0, 0, 340, 341, 342, 343, 303, 0,
	273, 438, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 433, 299, 305, 451, 307, 272, 355,
	301, 417, 314, 0, 444, 0, 445, 0, 0, 0,
	0, 347, 310, 311, 381, 315, 325, 369, 416, 353,
	374, 270, 407, 382, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 248, 278, 279, 284,
	469, 466, 398, 470, 0, 252, 0, 323, 0, 364,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 352, 249, 244, 245, 246,
	247, 0, 0, 0, 423, 424, 425, 447, 409, 0,
	467, 0, 293, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 461, 457, 0,
	458, 0, 0, 0, 0, 462, 383, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1706, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 459, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 388, 405, 269, 379, 418, 274, 386, 264, 351,
	375, 0, 0, 260, 403, 385, 333, 312, 313, 259,
	0, 370, 291, 304, 288, 349, 0, 402, 430, 287,
	421, 0, 413, 262, 0, 412, 348, 399, 404, 334,
	328, 261, 401, 332, 327, 316, 295, 446, 317, 318,
	308, 360, 326, 361, 309, 338, 337, 339, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 319, 0, 0, 0, 431, 0, 373, 354,
	0, 0, 0, 371, 324, 400, 362, 406, 389, 414,
	367, 363, 253, 390, 290, 335, 265, 267, 285, 292,
	294, 296, 297, 344, 345, 357, 378, 391, 392, 393,
	289, 275, 372, 276, 306, 277, 254, 281, 280, 282,
	380, 283, 256, 358, 397, 0, 302, 368, 331, 257,
	330, 359, 396, 395, 266, 422, 428, 429, 0, 0,
	434, 0, 0, 0, 443, 448, 449, 450, 452, 453,
	454, 455, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 427, 320, 321, 300, 250, 251,
	472, 286, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 426, 0, 0, 0, 456,
	471, 0, 0, 0, 0, 0, 468, 356, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 408, 420, 437, 440, 0, 0, 0,
	0, 255, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 435, 0, 0, 340, 341, 342, 343, 303, 0,
	273, 438, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 433, 299, 305, 451, 307, 272, 355,
	301, 417, 314, 0, 444, 0, 445, 0, 0, 0,
	0, 347, 310, 311, 381, 315, 325, 369, 416, 353,
	374, 270, 407, 382, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 248, 278, 279, 284,
	469, 466, 398, 470, 0, 252, 0, 323, 0, 364,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 352, 249, 244, 245, 246,
	247, 0, 0, 0, 423, 424, 425, 447, 409, 0,
	467, 0, 293, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 461, 457, 0,
	458, 0, 0, 0, 0, 462, 383, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 459, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2794, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 388, 405, 269, 379, 418, 274, 386, 264, 351,
	375, 0, 0, 260, 403, 385, 333, 312, 313, 259,
	0, 370, 291, 304, 288, 349, 0, 402, 430, 287,
	421, 0, 413, 262, 0, 412, 348, 399, 404, 334,
	328, 261, 401, 332, 327, 316, 295, 446, 317, 318,
	308, 360, 326, 361, 309, 338, 337, 339, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 319, 0, 0, 0, 431, 0, 373, 354,
	0, 0, 0, 371, 324, 400, 362, 406, 389, 414,
	367, 363, 253, 390, 290, 335, 265, 267, 285, 292,
	294, 296, 297, 344, 345, 357, 378, 391, 392, 393,
	289, 275, 372, 276, 306, 277, 254, 281, 280, 282,
	380, 283, 256, 358, 397, 0, 302, 368, 331, 257,
	330, 359, 396, 395, 266, 422, 428, 429, 0, 0,
	434, 0, 0, 0, 443, 448, 449, 450, 452, 453,
	454, 455, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 427, 320, 321, 300, 250, 251,
	472, 286, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 426, 0, 0, 0, 456,
	471, 0, 0, 0, 0, 0, 468, 356, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 408, 420, 437, 440, 0, 0, 0,
	0, 255, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 435, 0, 0, 340, 341, 342, 343, 303, 0,
	273, 438, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 433, 299, 305, 451, 307, 272, 355,
	301, 417, 314, 0, 444, 0, 445, 0, 0, 0,
	0, 347, 310, 311, 381, 315, 325, 369, 416, 353,
	374, 270, 407, 382, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 248, 278, 279, 284,
	469, 466, 398, 470, 0, 252, 0, 323, 0, 364,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 352, 249, 244, 245, 246,
	247, 0, 0, 0, 423, 424, 425, 447, 409, 0,
	467, 0, 293, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 461, 457, 0,
	458, 0, 0, 0, 0, 462, 383, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	2664, 0, 0, 0, 268, 197, 459, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 388, 405, 269, 379, 418, 274, 386, 264, 351,
	375, 0, 0, 260, 403, 385, 333, 312, 313, 259,
	0, 370, 291, 304, 288, 349, 0, 402, 430, 287,
	421, 0, 413, 262, 0, 412, 348, 399, 404, 334,
	328, 261, 401, 332, 327, 316, 295, 446, 317, 318,
	308, 360, 326, 361, 309, 338, 337, 339, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 319, 0, 0, 0, 431, 0, 373, 354,
	0, 0, 0, 371, 324, 400, 362, 406, 389, 414,
	367, 363, 253, 390, 290, 335, 265, 267, 285, 292,
	294, 296, 297, 344, 345, 357, 378, 391, 392, 393,
	289, 275, 372, 276, 306, 277, 254, 281, 280, 282,
	380, 283, 256, 358, 397, 0, 302, 368, 331, 257,
	330, 359, 396, 395, 266, 422, 428, 429, 0, 0,
	434, 0, 0, 0, 443, 448, 449, 450, 452, 453,
	454, 455, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 427, 320, 321, 300, 250, 251,
	472, 286, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 426, 0, 0, 0, 456,
	471, 0, 0, 0, 0, 0, 468, 356, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 408, 420, 437, 440, 0, 0, 0,
	0, 255, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 435, 0, 0, 340, 341, 342, 343, 303, 0,
	273, 438, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 433, 299, 305, 451, 307, 272, 355,
	301, 417, 314, 0, 444, 0, 445, 0, 0, 0,
	0, 347, 310, 311, 381, 315, 325, 369, 416, 353,
	374, 270, 407, 382, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 248, 278, 279, 284,
	469, 466, 398, 470, 0, 252, 0, 323, 0, 364,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 352, 249, 244, 245, 246,
	247, 0, 0, 0, 423, 424, 425, 447, 409, 0,
	467, 0, 293, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 461, 457, 0,
	458, 0, 0, 0, 0, 462, 383, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 459, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2581, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 388, 405, 269, 379, 418, 274, 386, 264, 351,
	375, 0, 0, 260, 403, 385, 333, 312, 313, 259,
	0, 370, 291, 304, 288, 349, 0, 402, 430, 287,
	421, 0, 413, 262, 0, 412, 348, 399, 404, 334,
	328, 261, 401, 332, 327, 316, 295, 446, 317, 318,
	308, 360, 326, 361, 309, 338, 337, 339, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 319, 0, 0, 0, 431, 0, 373, 354,
	0, 0, 0, 371, 324, 400, 362, 406, 389, 414,
	367, 363, 253, 390, 290, 335, 265, 267, 285, 292,
	294, 296, 297, 344, 345, 357, 378, 391, 392, 393,
	289, 275, 372, 276, 306, 277, 254, 281, 280, 282,
	380, 283, 256, 358, 397, 0, 302, 368, 331, 257,
	330, 359, 396, 395, 266, 422, 428, 429, 0, 0,
	434, 0, 0, 0, 443, 448, 449, 450, 452, 453,
	454, 455, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 427, 320, 321, 300, 250, 251,
	472, 286, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 426, 0, 0, 0, 456,
	471, 0, 0, 0, 0, 0, 468, 356, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 408, 420, 437, 440, 0, 0, 0,
	0, 255, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 435, 0, 0, 340, 341, 342, 343, 303, 0,
	273, 438, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 433, 299, 305, 451, 307, 272, 355,
	301, 417, 314, 0, 444, 0, 445, 0, 0, 0,
	0, 347, 310, 311, 381, 315, 325, 369, 416, 353,
	374, 270, 407, 382, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 248, 278, 279, 284,
	469, 466, 398, 470, 0, 252, 0, 323, 0, 364,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 352, 249, 244, 245, 246,
	247, 0, 0, 0, 423, 424, 425, 447, 409, 0,
	467, 0, 293, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 461, 457, 0,
	458, 0, 0, 0, 0, 462, 383, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	1258, 0, 0, 0, 268, 197, 459, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 388, 405, 269, 379, 418, 274, 386, 264, 351,
	375, 0, 0, 260, 403, 385, 333, 312, 313, 259,
	0, 370, 291, 304, 288, 349, 0, 402, 430, 287,
	421, 0, 413, 262, 0, 412, 348, 399, 404, 334,
	328, 261, 401, 332, 327, 316, 295, 446, 317, 318,
	308, 360, 326, 361, 309, 338, 337, 339, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 319, 0, 0, 0, 431, 0, 373, 354,
	0, 0, 0, 371, 324, 400, 362, 406, 389, 414,
	367, 363, 253, 390, 290, 335, 265, 267, 285, 292,
	294, 296, 297, 344, 345, 357, 378, 391, 392, 393,
	289, 275, 372, 276, 306, 277, 254, 281, 280, 282,
	380, 283, 256, 358, 397, 0, 302, 368, 331, 257,
	330, 359, 396, 395, 266, 422, 428, 429, 0, 0,
	434, 0, 0, 0, 443, 448, 449, 450, 452, 453,
	454, 455, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 427, 320, 321, 300, 250, 251,
	472, 286, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 426, 0, 0, 0, 456,
	471, 0, 0, 0, 0, 0, 468, 356, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 408, 420, 437, 440, 0, 0, 0,
	0, 255, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 435, 0, 0, 340, 341, 342, 343, 303, 0,
	273, 438, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 433, 299, 305, 451, 307, 272, 355,
	301, 417, 314, 0, 444, 0, 445, 0, 0, 0,
	0, 347, 310, 311, 381, 315, 325, 369, 416, 353,
	374, 270, 407, 382, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 248, 278, 279, 284,
	469, 466, 398, 470, 0, 252, 0, 323, 0, 364,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 352, 249, 244, 245, 246,
	247, 0, 0, 0, 423, 424, 425, 447, 409, 0,
	467, 0, 293, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 461, 457, 0,
	458, 0, 0, 0, 0, 462, 383, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	2106, 0, 0, 0, 268, 197, 459, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 388, 405, 269, 379, 418, 274, 386, 264, 351,
	375, 0, 0, 260, 403, 385, 333, 312, 313, 259,
	0, 370, 291, 304, 288, 349, 0, 402, 430, 287,
	421, 0, 413, 262, 0, 412, 348, 399, 404, 334,
	328, 261, 401, 332, 327, 316, 295, 446, 317, 318,
	308, 360, 326, 361, 309, 338, 337, 339, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 319, 0, 0, 0, 431, 0, 373, 354,
	0, 0, 0, 371, 324, 400, 362, 406, 389, 414,
	367, 363, 253, 390, 290, 335, 265, 267, 285, 292,
	294, 296, 297, 344, 345, 357, 378, 391, 392, 393,
	289, 275, 372, 276, 306, 277, 254, 281, 280, 282,
	380, 283, 256, 358, 397, 0, 302, 368, 331, 257,
	330, 359, 396, 395, 266, 422, 428, 429, 0, 0,
	434, 0, 0, 0, 443, 448, 449, 450, 452, 453,
	454, 455, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 427, 320, 321, 300, 250, 251,
	472, 286, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 426, 0, 0, 0, 456,
	471, 0, 0, 0, 0, 0, 468, 356, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 408, 420, 437, 440, 0, 0, 0,
	0, 255, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 435, 0, 0, 340, 341, 342, 343, 303, 0,
	273, 438, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 433, 299, 305, 451, 307, 272, 355,
	301, 417, 314, 0, 444, 0, 445, 0, 0, 0,
	0, 347, 310, 311, 381, 315, 325, 369, 416, 353,
	374, 270, 407, 382, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 248, 278, 279, 284,
	469, 466, 398, 470, 0, 252, 0, 323, 0, 364,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 352, 249, 244, 245, 246,
	247, 0, 0, 0, 423, 424, 425, 447, 409, 0,
	467, 0, 293, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 461, 457, 0,
	458, 0, 0, 0, 0, 462, 383, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 459, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 388, 405, 269, 379, 418, 274, 386, 264, 351,
	375, 0, 0, 260, 403, 385, 333, 312, 313, 259,
	0, 370, 291, 304, 288, 349, 0, 402, 430, 287,
	421, 0, 413, 262, 0, 412, 348, 399, 404, 334,
	328, 261, 401, 332, 327, 316, 295, 446, 317, 318,
	308, 360, 326, 361, 309, 338, 337, 339, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 319, 0, 0, 0, 431, 0, 373, 354,
	0, 0, 0, 371, 324, 400, 362, 406, 389, 414,
	367, 363, 253, 390, 290, 335, 265, 267, 285, 292,
	294, 296, 297, 344, 345, 357, 378, 391, 392, 393,
	289, 275, 372, 276, 306, 277, 254, 281, 280, 282,
	380, 283, 256, 358, 397, 0, 302, 368, 331, 257,
	330, 359, 396, 395, 266, 422, 428, 429, 0, 0,
	434, 0, 0, 0, 443, 448, 449, 450, 452, 453,
	454, 455, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 427, 320, 321, 300, 250, 251,
	472, 286, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 426, 0, 0, 0, 456,
	471, 0, 0, 0, 0, 0, 468, 356, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 408, 420, 437, 440, 0, 0, 0,
	0, 255, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 435, 0, 0, 340, 341, 342, 343, 303, 0,
	273, 438, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 433, 299, 305, 451, 307, 272, 355,
	301, 417, 314, 0, 444, 0, 445, 0, 0, 0,
	0, 347, 310, 311, 381, 315, 325, 369, 416, 353,
	374, 270, 407, 382, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 248, 278, 279, 284,
	469, 466, 398, 470, 0, 252, 0, 323, 0, 364,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 352, 249, 244, 245, 246,
	247, 0, 0, 0, 423, 424, 425, 447, 409, 0,
	467, 0, 293, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 461, 457, 0,
	458, 0, 0, 0, 0, 462, 383, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 0, 0, 268, 197, 459, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 388, 405, 269, 379, 418, 274, 386, 264, 351,
	375, 0, 0, 260, 403, 385, 333, 312, 313, 259,
	0, 370, 291, 304, 288, 349, 0, 402, 430, 287,
	421, 0, 413, 262, 0, 412, 348, 399, 404, 334,
	328, 261, 401, 332, 327, 316, 295, 446, 317, 318,
	308, 360, 326, 361, 309, 338, 337, 339, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 319, 0, 0, 0, 431, 0, 373, 354,
	0, 0, 0, 371, 324, 400, 362, 406, 389, 414,
	367, 363, 253, 390, 290, 335, 265, 267, 285, 292,
	294, 296, 297, 344, 345, 357, 378, 391, 392, 393,
	289, 275, 372, 276, 306, 277, 254, 281, 280, 282,
	380, 283, 256, 358, 397, 0, 302, 368, 331, 257,
	330, 359, 396, 395, 266, 422, 428, 429, 0, 0,
	434, 0, 0, 0, 443, 448, 449, 450, 452, 453,
	454, 455, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 427, 320, 321, 300, 250, 251,
	472, 286, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 426, 0, 0, 0, 456,
	471, 0, 0, 0, 0, 0, 468, 356, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 408, 420, 437, 440, 0, 0, 0,
	0, 255, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 435, 0, 0, 340, 341, 342, 343, 303, 0,
	273, 438, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 433, 299, 305, 451, 307, 272, 355,
	301, 417, 314, 0, 444, 0, 445, 0, 0, 0,
	0, 347, 310, 311, 381, 315, 325, 369, 416, 353,
	374, 270, 407, 382, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 248, 278, 279, 284,
	469, 466, 398, 470, 0, 252, 0, 323, 0, 364,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 352, 249, 244, 245, 246,
	247, 0, 0, 0, 423, 424, 425, 447, 409, 0,
	467, 0, 293, 0, 0, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 473, 461, 457, 0,
	458, 0, 0, 0, 0, 462, 383, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	2180, 0, 0, 0, 268, 197, 459, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 388, 405, 269, 379, 418, 274, 386, 264, 351,
	375, 0, 0, 260, 403, 385, 333, 312, 313, 259,
	0, 370, 291, 304, 288, 349, 0, 402, 430, 287,
	421, 0, 413, 262, 0, 412, 348, 399, 404, 334,
	328, 261, 401, 332, 327, 316, 295, 446, 317, 318,
	308, 360, 326, 361, 309, 338, 337, 339, 0, 0,
	0, 0, 0, 441, 442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 387,
	0, 0, 319, 0, 0, 0, 431, 0, 373, 354,
	0, 0, 0, 371, 324, 400, 362, 406, 389, 414,
	367, 363, 253, 390, 290, 335, 265, 267, 285, 292,
	294, 296, 297, 344, 345, 357, 378, 391, 392, 393,
	289, 275, 372, 276, 306, 277, 254, 281, 280, 282,
	380, 283, 256, 358, 397, 0, 302, 368, 331, 257,
	330, 359, 396, 395, 266, 422, 428, 429, 0, 0,
	434, 0, 0, 0, 443, 448, 449, 450, 452, 453,
	454, 455, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 427, 320, 321, 300, 250, 251,
	472, 286, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 346, 426, 0, 0, 0, 456,
	471, 0, 0, 0, 0, 0, 468, 356, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 408, 420, 437, 440, 0, 0, 0,
	0, 255, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 411, 0, 0, 0, 419, 0, 0, 0, 0,
	0, 435, 0, 0, 340, 341, 342, 343, 303, 0,
	273, 438, 366, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 432, 433, 299, 305, 451, 307, 272, 355,
	301, 417, 314, 0, 444, 0, 445, 0, 0, 0,
	0, 347, 310, 311, 381, 315, 325, 369, 416, 353,
	374, 270, 407, 382, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 248, 278, 279, 284,
	469, 466, 398, 470, 0, 252, 0, 323, 0, 364,
	298, 0, 0, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 221, 222,
	223, 224, 225, 226, 227, 228, 0, 219, 220, 229,
	230, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 0, 0, 1976, 249, 244, 245, 246,
	247, 352, 0, 0, 423, 424, 425, 447, 409, 0,
	467, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	0, 322, 0, 0, 0, 0, 473, 461, 0, 0,
	0, 0, 0, 0, 457, 0, 458, 0, 0, 0,
	0, 462, 383, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 459, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 388, 405, 269,
	379, 418, 274, 386, 264, 351, 375, 0, 0, 260,
	403, 385, 333, 312, 313, 259, 0, 370, 291, 304,
	288, 349, 0, 402, 430, 287, 421, 0, 413, 262,
	0, 412, 348, 399, 404, 334, 328, 261, 401, 332,
	327, 316, 295, 446, 317, 318, 308, 360, 326, 361,
	309, 338, 337, 339, 0, 0, 0, 0, 0, 441,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 319, 0,
	0, 0, 431, 0, 373, 354, 0, 0, 0, 371,
	324, 400, 362, 406, 389, 414, 367, 363, 253, 390,
	290, 335, 265, 267, 285, 292, 294, 296, 297, 344,
	345, 357, 378, 391, 392, 393, 289, 275, 372, 276,
	306, 277, 254, 281, 280, 282, 380, 283, 256, 358,
	397, 0, 302, 368, 331, 257, 330, 359, 396, 395,
	266, 422, 428, 429, 0, 0, 434, 0, 0, 0,
	443, 448, 449, 450, 452, 453, 454, 455, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	427, 320, 321, 300, 250, 251, 472, 286, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 426, 0, 0, 0, 456, 471, 0, 0, 0,
	0, 0, 468, 356, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 408,
	420, 437, 440, 0, 0, 0, 0, 255, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 435, 0, 0,
	340, 341, 342, 343, 303, 0, 273, 438, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 432, 433,
	299, 305, 451, 307, 272, 355, 301, 417, 314, 0,
	444, 0, 445, 0, 0, 0, 0, 347, 310, 311,
	381, 315, 325, 369, 416, 353, 374, 270, 407, 382,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 248, 278, 279, 284, 469, 466, 398, 470,
	0, 252, 0, 323, 0, 364, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 352, 249, 244, 245, 246, 247, 0, 0, 1693,
	423, 424, 425, 447, 409, 0, 467, 0, 293, 0,
	0, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 473, 461, 457, 0, 458, 0, 0, 0,
	0, 462, 383, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 459, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 388, 405, 269,
	379, 418, 274, 386, 264, 351, 375, 0, 0, 260,
	403, 385, 333, 312, 313, 259, 0, 370, 291, 304,
	288, 349, 0, 402, 430, 287, 421, 0, 413, 262,
	0, 412, 348, 399, 404, 334, 328, 261, 401, 332,
	327, 316, 295, 446, 317, 318, 308, 360, 326, 361,
	309, 338, 337, 339, 0, 0, 0, 0, 0, 441,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 319, 0,
	0, 0, 431, 0, 373, 354, 0, 0, 0, 371,
	324, 400, 362, 406, 389, 414, 367, 363, 253, 390,
	290, 335, 265, 267, 285, 292, 294, 296, 297, 344,
	345, 357, 378, 391, 392, 393, 289, 275, 372, 276,
	306, 277, 254, 281, 280, 282, 380, 283, 256, 358,
	397, 0, 302, 368, 331, 257, 330, 359, 396, 395,
	266, 422, 428, 429, 0, 0, 434, 0, 0, 0,
	443, 448, 449, 450, 452, 453, 454, 455, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	427, 320, 321, 300, 250, 251, 472, 286, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 426, 0, 0, 0, 456, 471, 0, 0, 0,
	0, 0, 468, 356, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 408,
	420, 437, 440, 0, 0, 0, 0, 255, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 435, 0, 0,
	340, 341, 342, 343, 303, 0, 273, 438, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 432, 433,
	299, 305, 451, 307, 272, 355, 301, 417, 314, 0,
	444, 0, 445, 0, 0, 0, 0, 347, 310, 311,
	381, 315, 325, 369, 416, 353, 374, 270, 407, 382,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 248, 278, 279, 284, 469, 466, 398, 470,
	0, 252, 0, 323, 0, 364, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 352, 249, 244, 245, 246, 247, 0, 0, 0,
	423, 424, 425, 447, 409, 0, 467, 0, 293, 0,
	0, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 473, 461, 457, 0, 458, 0, 0, 0,
	0, 462, 383, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 1258, 0, 0, 0,
	268, 197, 459, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 388, 405, 269,
	379, 418, 274, 386, 264, 351, 375, 0, 0, 260,
	403, 385, 333, 312, 313, 259, 0, 370, 291, 304,
	288, 349, 0, 402, 430, 287, 421, 0, 413, 262,
	0, 412, 348, 399, 404, 334, 328, 261, 401, 332,
	327, 316, 295, 446, 317, 318, 308, 360, 326, 361,
	309, 338, 337, 339, 0, 0, 0, 0, 0, 441,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 319, 0,
	0, 0, 431, 0, 373, 354, 0, 0, 0, 371,
	324, 400, 362, 406, 389, 414, 1604, 363, 253, 390,
	290, 335, 265, 267, 285, 292, 294, 296, 297, 344,
	345, 357, 378, 391, 392, 393, 289, 275, 372, 276,
	306, 277, 254, 281, 280, 282, 380, 283, 256, 358,
	397, 0, 302, 368, 331, 257, 330, 359, 396, 395,
	266, 422, 428, 429, 0, 0, 434, 0, 0, 0,
	443, 448, 449, 450, 452, 453, 454, 455, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	427, 320, 321, 300, 250, 251, 472, 286, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 426, 0, 0, 0, 456, 471, 0, 0, 0,
	0, 0, 468, 356, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 408,
	420, 437, 440, 0, 0, 0, 0, 255, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 435, 0, 0,
	340, 341, 342, 343, 303, 0, 273, 438, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 432, 433,
	299, 305, 451, 307, 272, 355, 301, 417, 314, 0,
	444, 0, 445, 0, 0, 0, 0, 347, 310, 311,
	381, 315, 325, 369, 416, 353, 374, 270, 407, 382,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 248, 278, 279, 284, 469, 466, 398, 470,
	0, 252, 0, 323, 0, 364, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 352, 249, 244, 245, 246, 247, 0, 0, 0,
	423, 424, 425, 447, 409, 0, 467, 0, 293, 0,
	0, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 473, 461, 457, 0, 458, 0, 0, 0,
	0, 462, 383, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 459, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 388, 405, 269,
	379, 418, 274, 386, 264, 351, 375, 0, 0, 260,
	403, 385, 333, 312, 313, 259, 0, 370, 291, 304,
	288, 349, 0, 402, 430, 287, 421, 0, 413, 262,
	0, 412, 348, 399, 404, 334, 328, 261, 401, 332,
	327, 316, 295, 446, 317, 318, 308, 360, 326, 361,
	309, 338, 337, 339, 0, 0, 0, 0, 0, 441,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 415, 0,
	0, 1288, 0, 0, 0, 387, 0, 0, 319, 0,
	0, 0, 431, 0, 373, 354, 0, 0, 0, 371,
	324, 400, 362, 406, 389, 414, 367, 363, 253, 390,
	290, 335, 265, 267, 285, 292, 294, 296, 297, 344,
	345, 357, 378, 391, 392, 393, 289, 275, 372, 276,
	306, 277, 254, 281, 280, 282, 380, 283, 256, 358,
	397, 0, 302, 368, 331, 257, 330, 359, 396, 395,
	266, 422, 428, 429, 0, 0, 434, 0, 0, 0,
	443, 448, 449, 450, 452, 453, 454, 455, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	427, 320, 321, 300, 250, 251, 472, 286, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 426, 0, 0, 0, 456, 471, 0, 0, 0,
	0, 0, 468, 356, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 408,
	420, 437, 440, 0, 0, 0, 0, 255, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 435, 0, 0,
	340, 341, 342, 343, 303, 0, 273, 438, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 432, 433,
	299, 305, 451, 307, 272, 355, 301, 417, 314, 0,
	444, 0, 445, 0, 0, 0, 0, 347, 310, 311,
	381, 315, 325, 369, 416, 353, 374, 270, 407, 382,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 248, 278, 279, 284, 469, 466, 398, 470,
	0, 252, 0, 323, 0, 364, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 352, 249, 244, 245, 246, 247, 0, 0, 0,
	423, 424, 425, 447, 409, 0, 467, 0, 293, 0,
	0, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 473, 461, 457, 0, 458, 0, 0, 0,
	0, 462, 383, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 459, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 388, 405, 269,
	379, 418, 274, 386, 264, 351, 375, 0, 0, 260,
	403, 385, 333, 312, 313, 259, 0, 370, 291, 304,
	288, 349, 0, 402, 430, 287, 421, 0, 413, 262,
	0, 412, 348, 399, 404, 334, 328, 261, 401, 332,
	327, 316, 295, 446, 317, 318, 308, 360, 326, 361,
	309, 338, 337, 339, 0, 0, 0, 0, 0, 441,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 319, 0,
	0, 0, 431, 0, 373, 354, 0, 0, 0, 371,
	324, 400, 362, 406, 389, 414, 367, 363, 253, 390,
	290, 335, 265, 267, 285, 292, 294, 296, 297, 344,
	345, 357, 378, 391, 392, 393, 289, 275, 372, 276,
	306, 277, 254, 281, 280, 282, 380, 283, 256, 358,
	397, 0, 302, 368, 331, 257, 330, 359, 396, 395,
	266, 422, 428, 429, 0, 0, 434, 0, 0, 0,
	443, 448, 449, 450, 452, 453, 454, 455, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	427, 320, 321, 300, 250, 251, 472, 286, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 426, 0, 0, 0, 456, 471, 0, 0, 0,
	0, 0, 468, 356, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 408,
	420, 437, 440, 0, 0, 0, 0, 255, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 435, 0, 0,
	340, 341, 342, 343, 303, 0, 273, 438, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 432, 433,
	299, 305, 451, 307, 272, 355, 301, 417, 314, 0,
	444, 0, 445, 0, 0, 0, 0, 347, 310, 311,
	381, 315, 325, 369, 416, 353, 374, 270, 407, 382,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 756, 0, 0,
	394, 0, 248, 278, 279, 284, 469, 466, 398, 470,
	0, 252, 0, 323, 0, 364, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 352, 249, 244, 245, 246, 247, 0, 0, 0,
	423, 424, 425, 447, 409, 0, 467, 0, 293, 0,
	0, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 473, 461, 457, 0, 458, 0, 0, 0,
	0, 462, 383, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 459, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 388, 405, 269,
	379, 418, 274, 386, 264, 351, 375, 0, 0, 260,
	403, 385, 333, 312, 313, 259, 0, 370, 291, 304,
	288, 349, 0, 402, 430, 287, 421, 0, 413, 262,
	0, 412, 348, 399, 404, 334, 328, 261, 401, 332,
	327, 316, 295, 446, 317, 318, 308, 360, 326, 361,
	309, 338, 337, 339, 0, 0, 0, 0, 0, 441,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 319, 0,
	0, 0, 431, 0, 373, 354, 0, 0, 0, 371,
	324, 400, 362, 406, 389, 414, 511, 363, 253, 390,
	290, 335, 265, 267, 285, 292, 294, 296, 297, 344,
	345, 357, 378, 391, 392, 393, 289, 275, 372, 276,
	306, 277, 254, 281, 280, 282, 380, 283, 256, 358,
	397, 0, 302, 368, 331, 257, 330, 359, 396, 395,
	266, 422, 428, 429, 0, 0, 434, 0, 0, 0,
	443, 448, 449, 450, 452, 453, 454, 455, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	427, 320, 321, 300, 250, 251, 472, 286, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 426, 0, 0, 0, 456, 471, 0, 0, 0,
	0, 0, 468, 356, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 408,
	420, 437, 440, 0, 0, 0, 0, 255, 439, 0,
	0, 0, 0, 0, 0, 512, 0, 411, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 435, 0, 0,
	340, 341, 342, 343, 303, 0, 273, 438, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 432, 433,
	299, 305, 451, 307, 272, 355, 301, 417, 314, 0,
	444, 0, 445, 0, 0, 0, 0, 347, 310, 311,
	381, 315, 325, 369, 416, 353, 374, 270, 407, 382,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 248, 278, 279, 284, 469, 466, 398, 470,
	0, 252, 0, 323, 0, 364, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 352, 249, 244, 245, 246, 247, 0, 0, 0,
	423, 424, 425, 447, 409, 0, 467, 0, 293, 0,
	0, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 473, 461, 457, 0, 458, 0, 0, 0,
	0, 462, 383, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 459, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 388, 405, 269,
	379, 418, 274, 386, 264, 351, 375, 0, 0, 260,
	403, 385, 333, 312, 313, 259, 0, 370, 291, 304,
	288, 349, 0, 402, 430, 287, 421, 0, 413, 262,
	0, 412, 348, 399, 404, 334, 328, 261, 401, 332,
	327, 316, 295, 446, 317, 318, 308, 360, 326, 361,
	309, 338, 337, 339, 0, 0, 0, 0, 0, 441,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 488, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 319, 0,
	0, 0, 431, 0, 373, 354, 0, 0, 0, 371,
	324, 400, 362, 406, 389, 414, 367, 363, 253, 390,
	290, 335, 265, 267, 285, 292, 294, 296, 297, 344,
	345, 357, 378, 391, 392, 393, 289, 275, 372, 276,
	306, 277, 254, 281, 280, 282, 380, 283, 256, 358,
	397, 0, 302, 368, 331, 257, 330, 359, 396, 395,
	266, 422, 428, 429, 0, 0, 434, 0, 0, 0,
	443, 448, 449, 450, 452, 453, 454, 455, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	427, 320, 321, 300, 250, 251, 472, 286, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 426, 0, 0, 0, 456, 471, 0, 0, 0,
	0, 0, 468, 356, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 408,
	420, 437, 440, 0, 0, 0, 0, 255, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 435, 0, 0,
	340, 341, 342, 343, 303, 0, 273, 438, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 432, 433,
	299, 305, 451, 307, 272, 355, 301, 417, 314, 0,
	444, 0, 445, 0, 0, 0, 0, 347, 310, 311,
	381, 315, 325, 369, 416, 353, 374, 270, 407, 382,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 248, 278, 279, 284, 469, 466, 398, 470,
	0, 252, 0, 323, 0, 364, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 352, 249, 244, 245, 246, 247, 0, 0, 0,
	423, 424, 425, 447, 409, 0, 467, 478, 293, 0,
	0, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 473, 461, 457, 0, 458, 0, 0, 0,
	0, 462, 383, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 459, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 388, 405, 269,
	379, 418, 274, 386, 264, 351, 375, 0, 0, 260,
	403, 385, 333, 312, 313, 259, 0, 370, 291, 304,
	288, 349, 0, 402, 430, 287, 421, 0, 413, 262,
	0, 412, 348, 399, 404, 334, 328, 261, 401, 332,
	327, 316, 295, 446, 317, 318, 308, 360, 326, 361,
	309, 338, 337, 339, 0, 0, 0, 0, 0, 441,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 319, 0,
	0, 0, 431, 0, 373, 354, 0, 0, 0, 371,
	324, 400, 362, 406, 389, 414, 367, 363, 253, 390,
	290, 335, 265, 267, 285, 292, 294, 296, 297, 344,
	345, 357, 378, 391, 392, 393, 289, 275, 372, 276,
	306, 277, 254, 281, 280, 282, 380, 283, 256, 358,
	397, 0, 302, 368, 331, 257, 330, 359, 396, 395,
	266, 422, 428, 429, 0, 0, 434, 0, 0, 0,
	443, 448, 449, 450, 452, 453, 454, 455, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	427, 320, 321, 300, 250, 251, 472, 286, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 426, 0, 0, 0, 456, 471, 0, 0, 0,
	0, 0, 468, 356, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 408,
	420, 437, 440, 0, 0, 0, 0, 255, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 435, 0, 0,
	340, 341, 342, 343, 303, 0, 273, 438, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 432, 433,
	299, 305, 451, 307, 272, 355, 301, 417, 314, 0,
	444, 0, 445, 0, 0, 0, 0, 347, 310, 311,
	381, 315, 325, 369, 416, 353, 374, 270, 407, 382,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 248, 278, 279, 284, 469, 466, 398, 470,
	0, 252, 0, 323, 0, 364, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 352, 249, 244, 245, 246, 247, 0, 0, 0,
	423, 424, 425, 447, 409, 0, 467, 0, 293, 0,
	0, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 473, 461, 457, 0, 458, 0, 0, 0,
	0, 462, 383, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 459, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 388, 405, 269,
	379, 418, 274, 386, 264, 351, 375, 0, 0, 260,
	403, 385, 333, 312, 313, 259, 0, 370, 291, 304,
	288, 349, 0, 402, 430, 287, 421, 0, 413, 262,
	0, 412, 348, 399, 404, 334, 328, 261, 401, 332,
	327, 316, 295, 446, 317, 318, 308, 360, 326, 361,
	309, 338, 337, 339, 0, 0, 0, 0, 0, 441,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 319, 0,
	0, 0, 431, 0, 373, 354, 0, 0, 0, 371,
	324, 400, 362, 406, 389, 414, 367, 363, 253, 390,
	290, 335, 265, 267, 285, 292, 294, 296, 297, 344,
	345, 357, 378, 391, 392, 393, 289, 275, 372, 276,
	306, 277, 254, 281, 280, 282, 380, 283, 256, 358,
	397, 0, 302, 368, 331, 257, 330, 359, 396, 395,
	266, 422, 428, 429, 0, 0, 434, 0, 0, 0,
	443, 448, 449, 450, 452, 453, 454, 455, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	427, 320, 321, 300, 250, 251, 472, 286, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 426, 0, 0, 0, 456, 471, 0, 0, 0,
	0, 0, 468, 356, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 408,
	420, 437, 440, 0, 0, 0, 0, 255, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 435, 0, 0,
	340, 341, 342, 343, 303, 0, 273, 438, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 432, 433,
	299, 305, 451, 307, 272, 355, 301, 417, 314, 0,
	444, 0, 445, 0, 0, 0, 0, 347, 310, 311,
	381, 315, 325, 369, 416, 353, 374, 270, 407, 382,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 248, 278, 279, 284, 469, 466, 398, 470,
	0, 252, 0, 323, 0, 364, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 352, 249, 244, 245, 246, 247, 0, 0, 0,
	423, 424, 425, 447, 409, 0, 467, 0, 293, 0,
	0, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 473, 461, 457, 0, 458, 0, 0, 0,
	0, 462, 383, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 459, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 388, 1238, 269,
	379, 418, 274, 386, 264, 351, 375, 0, 0, 260,
	403, 385, 333, 312, 313, 259, 0, 370, 291, 304,
	288, 349, 0, 402, 430, 287, 421, 0, 413, 262,
	0, 412, 348, 399, 404, 334, 328, 261, 401, 332,
	327, 316, 295, 446, 317, 318, 308, 360, 326, 361,
	309, 338, 337, 339, 0, 0, 0, 0, 0, 441,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 319, 0,
	0, 0, 431, 0, 373, 354, 0, 0, 0, 371,
	324, 400, 362, 406, 389, 414, 367, 363, 253, 390,
	290, 335, 265, 267, 285, 292, 294, 296, 297, 344,
	345, 357, 378, 391, 392, 393, 289, 275, 372, 276,
	306, 277, 254, 281, 280, 282, 380, 283, 256, 358,
	397, 0, 302, 368, 331, 257, 330, 359, 396, 395,
	266, 422, 428, 429, 0, 0, 434, 0, 0, 0,
	443, 448, 449, 450, 452, 453, 454, 455, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	427, 320, 321, 300, 250, 251, 472, 286, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 426, 0, 0, 0, 456, 471, 0, 0, 0,
	0, 0, 468, 356, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 408,
	420, 437, 440, 0, 0, 0, 0, 255, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 435, 0, 0,
	340, 341, 342, 343, 303, 0, 273, 438, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 432, 433,
	299, 305, 451, 307, 272, 355, 301, 417, 314, 0,
	444, 0, 445, 0, 0, 0, 0, 347, 310, 311,
	381, 315, 325, 369, 416, 353, 374, 270, 407, 382,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 248, 278, 279, 284, 469, 466, 398, 470,
	0, 252, 0, 323, 0, 364, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 352, 249, 244, 245, 246, 247, 0, 0, 0,
	423, 424, 425, 447, 409, 0, 467, 0, 293, 0,
	0, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 473, 461, 457, 0, 458, 0, 0, 0,
	0, 462, 383, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 459, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 388, 1236, 269,
	379, 418, 274, 386, 264, 351, 375, 0, 0, 260,
	403, 385, 333, 312, 313, 259, 0, 370, 291, 304,
	288, 349, 0, 402, 430, 287, 421, 0, 413, 262,
	0, 412, 348, 399, 404, 334, 328, 261, 401, 332,
	327, 316, 295, 446, 317, 318, 308, 360, 326, 361,
	309, 338, 337, 339, 0, 0, 0, 0, 0, 441,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 319, 0,
	0, 0, 431, 0, 373, 354, 0, 0, 0, 371,
	324, 400, 362, 406, 389, 414, 367, 363, 253, 390,
	290, 335, 265, 267, 285, 292, 294, 296, 297, 344,
	345, 357, 378, 391, 392, 393, 289, 275, 372, 276,
	306, 277, 254, 281, 280, 282, 380, 283, 256, 358,
	397, 0, 302, 368, 331, 257, 330, 359, 396, 395,
	266, 422, 428, 429, 0, 0, 434, 0, 0, 0,
	443, 448, 449, 450, 452, 453, 454, 455, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	427, 320, 321, 300, 250, 251, 472, 286, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 426, 0, 0, 0, 456, 471, 0, 0, 0,
	0, 0, 468, 356, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 408,
	420, 437, 440, 0, 0, 0, 0, 255, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 435, 0, 0,
	340, 341, 342, 343, 303, 0, 273, 438, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 432, 433,
	299, 305, 451, 307, 272, 355, 301, 417, 314, 0,
	444, 0, 445, 0, 0, 0, 0, 347, 310, 311,
	381, 315, 325, 369, 416, 353, 374, 270, 407, 382,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 248, 278, 279, 284, 469, 466, 398, 470,
	0, 252, 0, 323, 0, 364, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 0, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 352, 249, 244, 245, 246, 247, 0, 0, 0,
	423, 424, 425, 447, 409, 0, 467, 0, 293, 0,
	0, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 473, 461, 457, 0, 458, 0, 0, 0,
	0, 462, 383, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	268, 197, 459, 0, 460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 388, 405, 269,
	379, 418, 274, 386, 264, 351, 375, 0, 0, 260,
	403, 385, 333, 312, 313, 259, 0, 370, 291, 304,
	288, 349, 0, 402, 430, 287, 421, 0, 413, 262,
	0, 412, 348, 399, 404, 334, 328, 261, 401, 332,
	327, 316, 295, 446, 317, 318, 308, 360, 326, 361,
	309, 338, 337, 339, 0, 0, 0, 0, 0, 441,
	442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 415, 0,
	0, 0, 0, 0, 0, 387, 0, 0, 319, 0,
	0, 0, 431, 0, 373, 354, 0, 0, 0, 371,
	324, 400, 362, 406, 389, 414, 367, 363, 253, 390,
	290, 335, 265, 267, 552, 292, 294, 296, 297, 344,
	345, 357, 378, 391, 392, 393, 289, 275, 372, 276,
	306, 277, 254, 281, 280, 282, 380, 283, 256, 358,
	397, 0, 302, 368, 331, 257, 330, 359, 396, 395,
	266, 422, 428, 429, 0, 0, 434, 0, 0, 0,
	443, 448, 449, 450, 452, 453, 454, 455, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	427, 320, 321, 300, 250, 251, 472, 286, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 426, 0, 0, 0, 456, 471, 0, 0, 0,
	0, 0, 468, 356, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 408,
	420, 437, 440, 0, 0, 0, 0, 255, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 0,
	0, 419, 0, 0, 0, 0, 0, 435, 0, 0,
	340, 341, 342, 343, 303, 0, 273, 438, 366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 432, 433,
	299, 305, 451, 307, 272, 355, 301, 417, 314, 0,
	444, 0, 445, 0, 0, 0, 0, 347, 310, 311,
	381, 315, 325, 369, 416, 353, 374, 270, 407, 382,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	394, 0, 248, 278, 279, 284, 469, 466, 398, 470,
	0, 252, 0, 323, 0, 364, 298, 0, 0, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 221, 222, 223, 224, 225, 226,
	227, 228, 900, 219, 220, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 0,
	0, 0, 249, 244, 245, 246, 247, 0, 0, 0,
	423, 424, 425, 447, 409, 0, 467, 174, 51, 163,
	138, 0, 1681, 0, 0, 0, 0, 1643, 0, 0,
	0, 0, 473, 461, 0, 164, 0, 0, 0, 0,
	0, 0, 156, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1683, 1652, 0, 0,
	0, 0, 0, 0, 0, 115, 1684, 1685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	103, 0, 0, 0, 0, 0, 168, 0, 0, 0,
	0, 0, 1651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 886, 0, 0, 0, 876, 1658, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 908, 912, 914, 916, 918, 919, 921, 0,
	926, 922, 923, 924, 925, 0, 903, 904, 905, 906,
	884, 885, 909, 0, 887, 0, 888, 889, 890, 891,
	892, 893, 894, 895, 896, 899, 901, 897, 898, 907,
	0, 0, 120, 121, 0, 122, 123, 911, 913, 915,
	917, 920, 0, 0, 1674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 902, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 162, 172, 0, 101, 0, 0,
	0, 0, 0, 0, 0, 1642, 1644, 1641, 0, 1638,
	0, 0, 0, 0, 1662, 161, 155, 154, 0, 0,
	0, 0, 57, 0, 0, 1668, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1656, 1690, 0, 0, 1657,
	1659, 1661, 0, 1663, 1664, 1665, 1669, 1670, 1671, 1673,
	1676, 1677, 1678, 0, 0, 0, 0, 0, 0, 0,
	1666, 1675, 1667, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1646, 157, 158, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1682, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1639, 1640,
	0, 0, 111, 0, 0, 0, 160, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 1679, 0, 0, 1681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1655, 0, 0, 0, 0, 0, 0,
	1654, 0, 0, 0, 0, 0, 0, 0, 0, 900,
	0, 0, 0, 1683, 0, 0, 0, 0, 0, 0,
	0, 748, 0, 749, 1672, 113, 0, 0, 0, 0,
	0, 0, 0, 1660, 0, 0, 0, 0, 50, 0,
	0, 0, 0, 0, 0, 0, 1687, 1686, 0, 0,
	0, 0, 0, 0, 3424, 0, 0, 1681, 0, 730,
	0, 0, 0, 0, 1658, 0, 0, 0, 0, 0,
	0, 0, 743, 0, 739, 910, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	0, 1683, 0, 0, 0, 0, 0, 0, 0, 1648,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 170, 0, 171, 0, 0, 0, 886,
	139, 1674, 0, 0, 0, 0, 0, 0, 1681, 0,
	0, 1689, 1658, 0, 1688, 0, 0, 0, 0, 908,
	912, 914, 916, 918, 919, 921, 0, 926, 922, 923,
	924, 925, 0, 903, 904, 905, 906, 884, 885, 909,
	0, 887, 1683, 888, 889, 890, 891, 892, 893, 894,
	895, 896, 899, 901, 897, 898, 907, 0, 0, 0,
	0, 0, 114, 39, 911, 913, 915, 917, 920, 49,
	0, 745, 0, 738, 0, 3144, 0, 118, 119, 1674,
	0, 1662, 742, 741, 0, 0, 0, 0, 0, 0,
	0, 0, 1668, 1658, 0, 0, 0, 0, 0, 724,
	0, 0, 902, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 1656, 1690, 0, 0, 1657, 1659, 1661, 0,
	1663, 1664, 1665, 1669, 1670, 1671, 1673, 1676, 1677, 1678,
	0, 0, 0, 0, 0, 0, 0, 1666, 1675, 1667,
	0, 0, 747, 0, 0, 0, 0, 737, 0, 0,
	0, 736, 0, 531, 530, 537, 527, 723, 0, 1662,
	1674, 729, 0, 0, 0, 534, 535, 0, 536, 540,
	1668, 1682, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 727, 545, 0, 0, 0, 0, 0, 0, 0,
	1656, 1690, 0, 0, 1657, 1659, 1661, 0, 1663, 1664,
	1665, 1669, 1670, 1671, 1673, 1676, 1677, 1678, 0, 0,
	0, 0, 0, 1679, 0, 1666, 1675, 1667, 746, 531,
	530, 537, 527, 0, 0, 549, 0, 0, 551, 0,
	1655, 534, 535, 550, 536, 540, 0, 1654, 522, 0,
	1662, 0, 0, 0, 728, 0, 0, 0, 545, 1682,
	0, 1668, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1672, 0, 0, 0, 0, 0, 0, 0, 0,
	1660, 1656, 1690, 0, 0, 1657, 1659, 1661, 0, 1663,
	1664, 1665, 1669, 1670, 1671, 1673, 1676, 1677, 1678, 0,
	0, 1679, 0, 0, 0, 0, 1666, 1675, 1667, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1655, 0,
	0, 0, 0, 0, 0, 1654, 0, 0, 0, 0,
	0, 744, 531, 530, 537, 527, 0, 0, 0, 0,
	1682, 0, 0, 0, 534, 535, 0, 536, 540, 1672,
	0, 522, 0, 0, 0, 0, 0, 0, 1660, 0,
	0, 545, 0, 0, 0, 0, 0, 0, 0, 0,
	734, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	525, 524, 1679, 0, 0, 0, 0, 0, 0, 529,
	0, 0, 910, 0, 0, 0, 0, 0, 0, 1655,
	0, 533, 0, 0, 549, 0, 1654, 551, 548, 0,
	0, 0, 550, 0, 0, 526, 0, 0, 0, 517,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1672, 0, 0, 0, 0, 0, 0, 0, 0, 1660,
	0, 0, 0, 0, 0, 523, 525, 524, 0, 0,
	0, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 533, 0, 0,
	0, 0, 0, 0, 548, 0, 0, 0, 0, 0,
	0, 526, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 528, 532, 538, 0, 539, 541, 0, 0,
	542, 543, 544, 0, 0, 546, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 525,
	524, 0, 0, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	533, 0, 0, 0, 0, 0, 0, 548, 0, 0,
	0, 0, 0, 0, 526, 0, 0, 0, 528, 532,
	538, 0, 539, 541, 0, 0, 542, 543, 544, 0,
	0, 546, 547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 528, 532, 538, 0, 539, 541, 0, 0, 542,
	543, 544, 0, 0, 546, 547,
}

var yyPact = [...]int{
	283, -1000, -1000, -1000, -336, 10307, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 36149,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 36149,
	-332, 35589, 35589, -1000, -1000, 2459, -1000, 35029, 11460, 36149,
	343, 340, 36149, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 703, -1000, 34469, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 593, 39091, 37829, 7993, -267, -1000, 1231, -90, 2153,
	895, 901, 966, 966, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 38786, 774, 33909,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3155, 315, 774, 13706, 27, 26, 1231, 355, -150,
	-148, -151, 2448, -1000, 1093, 38415, 154, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 7993, 7993,
	10307, -363, 10307, 7993, 36149, 36149, -1000, -1000, -1000, -1000,
	593, 39091, 7993, 2153, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -148, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -150, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -151, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	26, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 38362, -1000, 1380, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2610, 1364, 2152, 544, 36149, -1000,
	1361, 544, -1000, -1000, -1000, 1231, 3055, -1000, 36149, 36149,
	103, 1566, -1000, 347, 339, 329, 1360, -1000, -1000, -1000,
	-1000, -1000, -1000, 501, 3008, -1000, 36149, 36149, 2630, 36149,
	-1000, 1942, 513, 39260, 2812, 1077, 694, 2655, -1000, -1000,
	2609, -1000, 238, 211, 213, 704, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 221, -1000, 2891, -1000, -1000, 218, -1000,
	-1000, 233, -1000, -1000, -1000, 23, -1000, -1000, -1000, -1000,
	-1000, -1000, -78, -1000, -1000, 1026, 2337, 7993, -1000, 2635,
	-1000, 3397, -1000, -1000, -1000, -1000, 5106, 9721, 9721, 9721,
	9721, -1000, -1000, 2451, 7993, 2608, 2607, 2601, -1000, -1000,
	-1000, -1000, -1000, 1352, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1693, -1000, -1000, -1000, 9145, -1000, 2599,
	2598, 2597, 2595, 2593, 2592, 2586, 2585, 2582, 2577, 2576,
	2575, 2574, 2573, 2349, 10874, 2572, 2145, 2144, 2558, 2557,
	2551, 2143, 2349, 2349, 2537, 2535, 2531, 2528, 2527, 2526,
	2525, 2523, 2522, 2521, 2519, 2518, 2515, 2514, 2513, 2511,
	2488, 2487, 2486, 2482, 2481, 2480, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1242,
	-1000, 2468, 3031, 2395, -1000, 2900, 2892, 2873, 2859, -318,
	2467, 1903, -1000, -1000, 61, -1000, -117, -1000, -1000, 877,
	-1000, 821, -1000, 36149, 36149, 141, 716, 579, 579, 579,
	579, 579, 664, 579, 2911, 680, 679, 673, 579, -99,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1565, 1558, 2709,
	809, -1000, -1000, -1000, -1000, 1267, 36149, -1000, 2406, 1469,
	1469, 2907, 525, 523, 520, 1469, 389, -1000, 1562, 1562,
	1562, 1562, 1469, 396, 527, 2915, 2915, 14, 1562, -4,
	1469, 1469, -4, 1469, 1469, 1469, 163, -324, -1000, -1000,
	-1000, -1000, 1562, 1562, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2885, 2883, 593, 593, 36149, 149, 36149, 593, 593,
	593, 585, -58, 37269, 36709, 1942, 512, 511, 1286, 1557,
	-1000, 1511, 36149, 36149, 1511, 1511, 18217, 17657, -1000, 36149,
	-1000, 3031, 2395, 2321, 1541, 2320, 2395, -155, -156, -157,
	593, 593, 593, 593, 593, 181, 593, 593, 593, 593,
	593, 36149, 36149, 33349, 593, 593, 6834, 6834, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 10307, 1679, 1894,
	152, -74, -334, 199, -1000, -1000, 36149, 2782, 209, -1000,
	-1000, -1000, 2354, -1000, 2397, 2397, 2397, 2397, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2397, 2397, 2403,
	2465, -1000, -1000, 2385, 2385, 2385, 2354, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2399, 2399, 2400, 2400, 2399, 36149, 7993, 36149,
	2801, 351, 2464, -1000, 36149, 336, 3031, 2795, 2915, 2975,
	-1000, -1000, 1349, 1902, 2133, -1000, -1000, 347, 1458, -1000,
	1006, -1000, -1000, -1000, -1000, 36149, -78, 314, -1000, -1000,
	2119, 2463, -1000, 516, 1033, 1157, -1000, 198, 39157, 28863,
	1942, 28863, 36149, -1000, -1000, -1000, -1000, -1000, -1000, 17,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 201, -1000, 7993, 7993, 7993, 7993, 7993,
	-1000, 588, 8569, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	9721, 9721, 9721, 9721, 9721, 9721, 9721, 9721, 9721, 9721,
	9721, 9721, 2450, 1518, 9721, 9721, 9721, 9721, 1541, 2959,
	1284, 236, -1000, -1000, -1000, -1000, -1000, 1580, 2337, 7993,
	7993, 7993, 36149, -1000, -1000, 3338, 7993, 7993, 3144, 7993,
	2856, 7993, 7993, 7993, 2317, 3859, 36149, 7993, -1000, 2315,
	2313, -1000, -1000, 1772, 7993, -1000, -1000, 7993, -1000, -1000,
	7993, 9721, 7993, -1000, -1000, -1000, 1149, 2856, 2856, 2856,
	1561, 7993, 7993, 2856, 2856, 2856, 1534, 2856, 2856, 2856,
	2856, 2856, 2856, 2856, 2856, 2309, 2298, 2297, 2915, -267,
	-1000, 6258, 2795, 2915, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -320, 2462, 36149, 2132, 2129, -351,
	-17, 865, 825, 858, -1000, 2839, -1000, 2461, 36149, 579,
	579, -140, 579, -1000, 36149, 1591, 28863, 36149, 36149, 1942,
	36149, 36149, 36149, 579, 579, 579, 36149, -1000, 2761, 28863,
	2730, 585, -1000, 36149, 1267, 2835, 36149, 2979, 9721, 9721,
	-1000, 32789, 1562, 1469, 1469, -1000, -1000, 36149, -1000, -1000,
	-1000, 1562, 36149, 1562, 1562, 2979, 1562, -1000, -1000, -1000,
	1469, 1469, -1000, -1000, 7993, -1000, -1000, 1562, 1562, -1000,
	-1000, 2979, 36149, 2, 2979, 2979, 16, -1000, -1000, -1000,
	36149, 36149, 579, 36149, -1000, 36149, 36149, -1000, -1000, 36149,
	36149, 38426, 36149, 32229, 2881, -1000, 28863, 36149, 36149, 26623,
	-1000, 1218, -1000, -40, -1000, -22, -58, 1511, -58, 1511,
	-1000, 515, 536, 16530, 452, 28863, 4487, -1000, -1000, 1511,
	1511, 4487, 4487, 1406, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1266, -1000, 206, 2915, -1000, -1000, -1000, -1000, -1000,
	1901, 1890, 1889, 36149, 36149, 28863, 1942, 36149, 593, 36149,
	36149, 36149, 36149, 36149, -1000, 2454, 1347, -1000, 2809, 36149,
	36149, 1119, -1000, -1000, 13146, 1346, 1119, -1000, 1627, -1000,
	7993, 10307, -299, 7993, 10307, 10307, 7993, 10307, -1000, 7993,
	171, -1000, -1000, -1000, -1000, 1888, -1000, 1882, -1000, -1000,
	-1000, -1000, -1000, 2127, 2127, -1000, 1873, -1000, -1000, -1000,
	-1000, 1872, -1000, -1000, 1867, -1000, -1000, -1000, 2296, 1026,
	-1000, 2121, 2654, -268, -1000, 15402, 36149, 36149, -1000, -1000,
	-268, -1000, 14834, 36149, 2915, -1000, -274, 2795, 7993, 36149,
	-1000, 2904, -1000, 347, 305, -1000, -1000, -1000, -1000, -1000,
	-1000, 1343, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1265, -1000, 36149, -1000, -1000, 198, 28863, 29983, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 193, -1000, -1000, 167,
	-1000, 660, 148, 1456, -1000, -1000, 146, 172, 106, 782,
	2337, -1000, 1644, 1644, 1631, -1000, 584, -1000, -1000, -1000,
	-1000, 2451, -1000, -1000, -1000, 1765, 2435, -1000, 1475, 1475,
	1412, 1412, 1412, 1412, 1412, 2583, 2583, -1000, -1000, -1000,
	5106, 2450, 9721, 9721, 9721, 9721, 555, 555, 3450, 3640,
	-1000, 7993, 1581, -1000, 7993, 2225, 2173, 1383, 1336, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2293,
	2290, 2080, 2987, 2289, 7993, -1000, -1000, 1454, 1453, 1447,
	-1000, 1871, 7417, -1000, -1000, -1000, 2288, 1331, 2280, -1000,
	-1000, -1000, 2279, 1446, 996, 2274, 1575, 2273, 1243, 7993,
	7993, 7993, 7993, 2268, 1444, 1434, 7993, 7993, 7993, 7993,
	2257, 7993, 7993, 7993, 7993, 7993, 7993, 7993, 7993, 49,
	49, 49, -1000, -1000, 1422, -1000, 2337, -1000, -1000, 2795,
	-1000, 2449, 1866, 1226, -1000, -1000, -1000, 2051, -1000, -1000,
	846, 813, 854, 36149, 942, 2445, 36149, 36149, 579, 36149,
	165, -1000, 2808, 1196, -1000, 148, -88, 356, 1037, 2629,
	2986, -167, 36149, 36149, 36149, 2834, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 31669, -1000, 2443, 1419, -1000, -1000,
	7993, -1000, -1000, 2625, 36149, 36149, 2979, 2979, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1562, 2979, 2979, 1317, 1469,
	1562, -1000, -1000, 1562, -1000, -1000, 1562, -1000, 1325, -1000,
	36149, -1000, -1000, -1000, 2829, 2406, 1225, -1000, 1221, 572,
	572, 945, 518, 2974, 14266, -1000, 1489, 1076, 649, 2747,
	225, -1000, 1489, -214, 1489, 1489, 1489, 1489, 1489, 1489,
	1489, 458, 457, 1489, 1489, 1489, 1489, 1489, 1489, 1489,
	1489, 1489, 1489, 1489, 900, 1489, 1489, 1489, 1489, 1489,
	-1000, 1489, 2442, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	465, 160, 2872, 276, 271, 1196, 2862, 286, 3018, 1043,
	-1000, -1000, -1000, -1000, 20463, 20463, 15970, 20463, -1000, 1460,
	-58, -35, -1000, -1000, 1218, 4487, 1218, 4487, -1000, -1000,
	610, -1000, -1000, 1037, -1000, 36149, 36149, -1000, -1000, 2441,
	1555, -1000, -1000, 10874, -1000, 4487, 4487, -1000, -1000, 21023,
	36149, -1000, -83, -1000, -68, 2795, -1000, -1000, -1000, 1202,
	-1000, -1000, 1213, 1037, 2653, 36149, 1202, 1202, 1202, -1000,
	-1000, 12020, 36149, 36149, -1000, -1000, 2979, 6834, -1000, 26623,
	-1000, -1000, 31103, -1000, 30543, 2979, 1571, -1000, 10307, 1750,
	145, -1000, 194, -339, 144, 1628, 143, 2337, -1000, -1000,
	2256, 2249, 1405, -1000, 1400, 2248, 1399, 1397, -1000, -19,
	-1000, 2765, 1061, -1000, 2434, -1000, 1388, 2708, -1000, 1201,
	-1000, 1554, 1376, -1000, 1061, 1371, 2604, 1201, 2795, 2091,
	-1000, 1183, -1000, 1833, 1324, 102, -1000, -1000, 36149, 2119,
	1366, 29983, 1143, -1000, 605, 1322, 1321, -1000, 28863, 214,
	28863, -1000, 28863, -1000, -1000, 312, -1000, 36149, 2786, -1000,
	-1000, -1000, 2051, 1552, -357, 36149, -1000, -1000, -1000, -1000,
	-1000, 1341, -1000, 555, 555, 3450, 1928, -1000, 9721, -1000,
	9721, 2949, 1570, -1000, 7993, 1725, 3543, 3543, 935, 19337,
	36149, -1000, -1000, 7993, 7993, -1000, 2929, -1000, -1000, -1000,
	-1000, 7993, 7993, 1908, -1000, 36149, -1000, -1000, -1000, -1000,
	19337, -1000, 9721, -1000, 7993, 1184, 1184, 2909, 1332, 49,
	49, 49, 2905, 2899, 2868, 1296, 49, 2799, 2785, 2743,
	2637, 2631, 2589, 2312, 2305, -1000, 2431, -1000, -1000, 6258,
	-1000, -1000, 229, 1179, 1864, 104, -1000, 1551, -1000, -1000,
	-1000, 792, 184, 2247, 1172, -1000, -1000, 36149, -1000, -1000,
	-1000, 12020, 2406, 264, 36149, 2406, 58, 1489, -1000, 559,
	28863, 497, -1000, 36149, 1907, 1548, 2639, 614, 2767, 36149,
	2430, 2429, 2428, 2425, 337, 38799, 36149, 1118, -1000, 1319,
	38415, -1000, 36149, 2337, -1000, 1942, -1000, 1469, -1000, -1000,
	2979, -1000, -1000, 7993, 7993, 2979, 1469, 1469, 1562, 36149,
	-1000, 337, 38799, 2827, 38426, -1000, 36149, -1000, -1000, -1000,
	608, -1000, 814, 579, 36149, 1662, 814, 1660, 2424, -1000,
	-1000, 36149, 36149, 36149, 36149, -1000, -1000, 36149, -1000, 36149,
	36149, 36149, 36149, -1000, 36149, 36149, -1000, 36149, 1659, 1658,
	2831, -1000, 1489, 1489, 766, -1000, -1000, 488, -1000, 1861,
	1853, 1851, 1850, 2090, 2079, 2078, 1489, 1489, 1841, 2070,
	29423, 2068, 980, 1840, 1838, 1829, 1877, 2067, 972, -1000,
	2063, 1860, 1858, 1842, 36149, 2414, 2013, -1000, -1000, 58,
	1489, 263, 36149, 1547, 559, 350, 1915, 17097, 36149, 26623,
	26623, 26623, 26623, -1000, 2688, 2685, -1000, 2707, 2703, 2684,
	36149, 26623, 2406, -1000, 29423, -1000, -1000, -1000, 1541, 1295,
	3057, 757, 7993, -1000, -1000, -50, -49, -1000, -1000, -1000,
	28863, 2062, 452, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2897, 36149, 36149, 620, 2245, 1168, -1000, -1000, -1000, 38799,
	2397, 2397, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2397, 2397, 2403, -1000, -1000, 2385, 2385, 2385, 2354,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2399,
	2399, 2400, 2400, 2399, -1000, -1000, 2971, -1000, 1167, -1000,
	-1000, 1294, -1000, 2971, 1585, -337, 10307, 1574, 1477, -1000,
	7993, 10307, 7993, -305, 250, -307, -1000, -1000, -1000, 2055,
	-1000, -1000, -1000, 1824, -1000, 1819, 68, 84, 1654, -268,
	6258, 332, 36149, -268, 36149, 6258, -1000, 36149, 328, -268,
	2897, -19, 7993, 2739, -1000, -1000, 36149, 1803, -1000, -1000,
	-1000, 2985, 28863, 1942, 1428, 28303, -1000, 212, -1000, 192,
	517, 2054, -1000, 667, 101, 2052, 2051, -1000, -1000, -1000,
	-1000, 9721, -1000, -1000, -1000, -1000, 2337, 7993, 2241, -1000,
	790, 790, 2231, 2230, -1000, 2397, 2397, -1000, 2354, 2385,
	2354, 790, 790, 2229, -1000, 2071, 2275, -1000, 2165, 2155,
	7993, -1000, 2222, 3425, 1177, -108, -242, 49, 49, -1000,
	-1000, -1000, -1000, 49, 49, 49, 49, -1000, 49, 49,
	49, 49, 49, 49, 49, 49, 548, -1000, 2220, 1160,
	-1000, -1000, -1000, -1000, -1000, 3144, 1156, -1000, 2051, 2050,
	-1000, 2041, 2040, 942, 38799, 2219, 2826, 12580, 2824, 2382,
	2381, 2821, 1923, -1000, -1000, -1000, 27743, 462, -1000, -1000,
	-1000, 577, 197, 1799, 480, -1000, 36149, 286, 2727, 1546,
	2038, 36149, -1000, -1000, -1000, -1000, -1000, -1000, 2767, -1000,
	1144, 316, 25503, 12580, 12580, 12580, 320, 1543, -1000, 544,
	1025, 1290, 26623, 36149, -1000, 26063, 2218, -1000, 1037, 2979,
	-1000, 2337, 2337, -1000, 2979, 2979, 1469, -1000, 320, -1000,
	324, -1000, 2764, 38799, -1000, 36149, -1000, 36149, -1000, 36149,
	36149, 579, 7993, 2764, 36149, 600, -1000, -1000, 938, 321,
	633, 633, 1155, -1000, 2791, -1000, -1000, -1000, 36149, -1000,
	-1000, -1000, -1000, -1000, -1000, 19337, 19337, 2855, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2037, 2036, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 36149, 1283, -1000, 1545, 1923, 27743, 1536, 1511, 2033,
	462, 1907, 1535, -1000, 2031, -1000, 1114, 36149, 36149, -1000,
	1103, -1000, 1533, 2615, 2638, 2615, -1000, -1000, -1000, -1000,
	2670, -1000, 2668, -1000, -1000, 1103, -1000, -1000, -1000, -1000,
	-1000, 757, -1000, 2875, 814, 814, 814, 2211, -1000, -1000,
	-1000, 1143, 2210, -1000, -1000, -1000, 3022, -1000, -1000, -1000,
	-1000, -1000, -1000, 12020, 2760, 2950, 2970, 27183, 2950, -1000,
	-337, 1537, -1000, 1640, 142, 1614, 36149, -1000, -1000, -1000,
	2208, 2203, -276, 94, 2964, 2963, 829, -1000, 2198, 1135,
	-268, -1000, -1000, 1061, -1000, -1000, -1000, -268, -1000, 1061,
	-1000, 68, -1000, -1000, 2776, -1000, -1000, 1942, -1000, 180,
	-1000, -1000, -1000, -1000, -1000, -1000, 120, -1000, 36149, -1000,
	1125, 100, -1000, 2337, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	7993, -1000, -1000, -1000, 2146, -1000, -1000, 7993, 2189, 2030,
	2188, 2029, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3031, -1000, 2962, -1000,
	7993, 2185, 3144, -1000, -1000, -1000, -1000, -1000, -1000, 707,
	324, 2180, 1123, -1000, -1000, -1000, -1000, 324, 24383, 12580,
	324, -1000, 2026, 140, -1000, -1000, -1000, 2020, 2017, 1788,
	-1000, -1000, 1817, 1333, 158, -1000, -1000, -1000, -1000, -1000,
	-1000, 1915, 1876, 1531, -360, -1000, 2378, -1000, 1489, 1489,
	1489, 36149, 1282, -1000, 1489, 1489, 2179, 2176, 2170, 537,
	1500, 1498, -1000, 1781, 20463, 26623, 26063, 1064, -1000, 1232,
	-1000, -1000, -1000, -1000, -1000, 2979, 537, -1000, -1000, -1000,
	36149, 278, 2376, -1000, 2372, 2623, 352, 2371, 2370, 36149,
	2115, -1000, 2764, 36149, 607, 2754, -1000, -1000, -1000, -1000,
	-1000, 398, -1000, 36149, -1000, -1000, 1396, -1000, 19337, -1000,
	-1000, 1281, -1000, 2013, 2011, -1000, 140, 2010, 4487, -1000,
	-1000, 2727, 2008, -1000, 36149, 1114, 1114, 3031, 36149, 6258,
	-1000, -1000, 7993, 2362, -1000, 7993, -1000, -1000, -1000, -1000,
	-1000, 2361, 2725, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2207, -1000, 7993, 7993, -1000, -1000, 575, 10307, -308, 243,
	-1000, -1000, -1000, -278, 2000, -1000, -1000, 2960, 1999, 1955,
	36149, -1000, -1000, 1061, 1061, -276, -1000, -1000, 1037, -1000,
	-1000, 16, 463, -1000, 2101, -1000, 2092, 49, -1000, 49,
	-1000, 177, 7993, 2085, -1000, 2169, 38799, -170, -186, 12580,
	-1000, 1280, -1000, 1489, 1489, 2164, -170, -1000, -1000, 311,
	-1000, -1000, 288, -1000, -1000, 1790, 510, -1000, -1000, -1000,
	1521, 1669, 1962, 23823, 19337, 19897, 1998, -1000, -1000, 25503,
	2207, 2207, 38952, 201, 38952, 903, 1495, -1000, 1780, -1000,
	1778, -1000, 2979, 1064, 1232, -1000, -1000, 1421, -1000, 903,
	-1000, -1000, 278, -1000, -1000, 1677, 9721, -1000, -1000, 1995,
	19897, 726, 1515, 1514, 744, 2360, -1000, 414, 3019, -1000,
	-1000, -1000, 751, 2357, -1000, 1652, 1645, -1000, 36149, -1000,
	23823, 23823, 650, 650, 23823, 23823, 2355, 633, -1000, -1000,
	9721, -1000, -1000, -1000, -1000, 1489, 1394, -1000, -1000, -1000,
	-1000, -1000, -1000, 1876, -1000, -1000, 2915, -1000, -1000, 2337,
	36149, 2337, 24943, -1000, 2955, 2953, -1000, 2337, 1026, -1000,
	-337, 36149, 36149, -281, 1776, -1000, 1994, 89, -1000, -1000,
	1032, -278, -283, 65, 66, 1508, -1000, -1000, -1000, -1000,
	2163, -1000, 653, -1000, -1000, -1000, 1026, -1000, -1000, -164,
	-1000, -1000, 341, -1000, -1000, -1000, 24383, 2207, 2207, -186,
	-1000, 498, 1991, -1000, -1000, 281, -1000, -1000, 1975, -1000,
	-1000, 99, -1000, 1507, 1241, -1000, 2354, 7993, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 539, 38871, -1000, 1076,
	-1000, 16, 539, 489, 237, -1000, 1769, -1000, -1000, 3031,
	-1000, 479, -1000, -1000, 3450, -1000, -1000, -1000, -1000, -1000,
	-1000, 1972, 1971, -1000, -1000, -1000, -1000, -1000, 1767, 2353,
	-65, 2852, 1969, -1000, -1000, 2351, 1222, 1217, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1212, 1189, 23823, -1000,
	-1000, 3450, 19337, 1489, -1000, -1000, 1166, 1165, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2350, -1000, -1000, 2951, -281,
	-1000, 1967, 578, 83, 66, -1000, 2948, 87, 2939, 2938,
	1963, -1000, -1000, 483, -270, 47, 46, 32, -1000, -1000,
	-1000, 7993, 36149, 402, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 114, -1000, -1000, -1000, -1000, 1962, 1961, -1000, 23823,
	2791, 2061, 363, 2937, 38952, -1000, 1489, -1000, 363, -1000,
	334, -1000, 1486, -1000, 1759, -1000, 2915, -1000, 326, -1000,
	-1000, -1000, 2076, 7993, 2349, 1489, 2066, -160, 23823, 2622,
	2616, 2591, 2339, 1111, -1000, 19337, -1000, -1000, 23263, 36149,
	1955, -1000, -1000, 2347, 1751, 94, 67, 2926, -1000, 1955,
	2922, 1955, 1955, 1004, 1624, -1000, 41, 39, 37, -1000,
	-1000, -1000, -1000, 461, -1000, 195, -1000, -1000, -1000, 247,
	-1000, -1000, 2791, -1000, 2918, 388, -1000, 19337, -1000, -1000,
	-1000, 1729, -1000, -1000, -1000, -1000, 1883, -1000, 36149, -1000,
	2636, -1000, 173, 1100, 247, 650, 247, 650, 247, 650,
	247, 650, 200, -1000, -1000, -1000, 1088, -1000, -1000, 2844,
	18777, 59, -1000, -1000, -1000, 1959, -1000, 1955, -1000, -1000,
	-1000, 52, 483, -1000, -1000, -1000, 1954, -1000, -1000, -1000,
	-1000, 1489, 1489, 1950, 1940, 308, -1000, -1000, -1000, 22703,
	376, 424, 383, -1000, 532, -1000, -1000, -1000, 633, -1000,
	-1000, 2634, 2632, 2984, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 36149, -1000, 36149, -1000, 1059, -1000,
	-1000, -1000, 1150, -1000, -1000, -1000, -1000, 1487, -1000, -327,
	1708, 1696, -1000, -1000, 36149, -1000, 36149, 370, 1689, 9721,
	2344, 9721, 2343, 393, 2336, -1000, -1000, 3015, -1000, 3013,
	845, 845, 247, 247, 247, 247, -1000, 977, -1000, 1480,
	-1000, 22143, 36149, 1934, -1000, -1000, 1933, -1000, -1000, -1000,
	1055, 2331, 2917, -1000, 3103, 36149, 2969, 36149, 2329, 1465,
	9721, -1000, -1000, -1000, 1737, 433, -1000, 36149, 5682, -1000,
	1145, -1000, -1000, -1000, -1000, 535, 381, -1000, 1048, -1000,
	1047, 21583, 1687, 2484, -1000, -1000, -1000, -1000, -1000, 2337,
	36149, 1036, -1000, 36149, 366, -1000, -1000, -1000, 1023, -1000,
	-1000, -1000, -1000, 535, 2469, -1000, 1686, -1000, -1000, 38793,
	697, -1000, -1000, 38793, 369, -1000, 519, 2327, -1000, -1000,
	1021, -1000, 36149, 702, 7993, -1000, 369, 38952, -1000, 7993,
	1008, -1000, 38952, 990, -1000, -1000,
}

var yyPgo = [...]int{
	0, 159, 3046, 242, 166, 3666, 85, 241, 213, 211,
	240, 3665, 3664, 3663, 2803, 2801, 3662, 3642, 3641, 3640,
	3639, 3636, 3635, 3634, 3633, 3632, 3631, 3630, 3629, 3628,
	3627, 3625, 3623, 3614, 3610, 3609, 3608, 3604, 3602, 3601,
	3600, 3599, 3598, 3597, 3582, 3581, 238, 3580, 3579, 3578,
	3577, 3576, 3575, 3574, 3572, 3559, 3557, 3556, 3555, 3554,
	3553, 3552, 3551, 3550, 3549, 3548, 3546, 3545, 3544, 3530,
	3526, 3522, 3521, 3519, 3518, 3517, 3515, 3514, 3513, 208,
	3508, 2790, 3500, 3499, 3497, 3495, 3493, 3491, 3490, 217,
	3489, 3488, 3487, 3486, 3484, 3483, 3480, 3479, 3478, 3477,
	3476, 226, 3474, 3473, 3472, 3471, 3470, 3469, 215, 3468,
	163, 186, 3467, 3466, 3465, 3464, 3462, 3461, 239, 194,
	70, 3460, 46, 3458, 3457, 220, 3456, 134, 3454, 132,
	3453, 3452, 3451, 3450, 3443, 3439, 3438, 3437, 3435, 3434,
	3432, 3431, 3430, 3429, 3428, 3425, 89, 3424, 247, 3423,
	69, 3421, 3420, 110, 148, 181, 245, 2527, 250, 244,
	177, 169, 96, 3417, 2776, 3416, 151, 227, 146, 24,
	3415, 123, 3411, 248, 44, 27, 237, 127, 55, 150,
	109, 3410, 203, 102, 101, 3409, 3407, 124, 236, 170,
	3406, 97, 3405, 3403, 3402, 3399, 3398, 182, 202, 3396,
	3394, 113, 3393, 3388, 90, 3387, 72, 189, 157, 188,
	3386, 404, 108, 129, 112, 174, 3385, 81, 3384, 3382,
	3381, 3379, 172, 3378, 3377, 120, 61, 3375, 3373, 3372,
	68, 3371, 45, 3370, 38, 3369, 65, 3363, 3362, 3361,
	3359, 3358, 3357, 3355, 3354, 3351, 3350, 3349, 54, 3348,
	3347, 14, 16, 18, 3345, 26, 3344, 158, 3342, 3340,
	3338, 86, 82, 3337, 83, 2, 47, 71, 3336, 3334,
	221, 64, 94, 142, 3333, 412, 3332, 3330, 3329, 149,
	3328, 1546, 3326, 3324, 3317, 3316, 3315, 128, 3314, 219,
	36, 3313, 121, 122, 3312, 35, 43, 185, 216, 3311,
	3308, 3304, 141, 210, 118, 34, 0, 3303, 145, 3300,
	3299, 3298, 243, 3296, 230, 218, 161, 138, 268, 160,
	3295, 3294, 62, 3293, 153, 57, 51, 125, 9, 21,
	171, 3292, 394, 180, 3291, 200, 3290, 175, 1, 131,
	3289, 3287, 29, 249, 3286, 3283, 3282, 111, 3279, 3278,
	275, 74, 3277, 3276, 3275, 3274, 39, 3273, 31, 20,
	3272, 91, 3271, 234, 3270, 214, 135, 173, 168, 147,
	222, 229, 76, 75, 3266, 1604, 137, 92, 17, 3262,
	223, 3259, 152, 119, 3258, 155, 3257, 235, 383, 199,
	3255, 176, 8, 42, 28, 3254, 10, 3253, 197, 190,
	3236, 3235, 22, 49, 3234, 19, 3233, 3232, 3230, 3228,
	5, 3227, 3226, 3224, 4, 7, 3223, 3, 212, 162,
	115, 88, 66, 3222, 3221, 48, 201, 3220, 139, 144,
	143, 3212, 73, 3211, 3209, 3206, 1709, 3205, 246, 3203,
	3202, 3201, 3200, 3199, 3198, 3197, 3196, 3195, 3189, 100,
	41, 3188, 3186, 3183, 3182, 80, 133, 3178, 3175, 3174,
	3173, 32, 126, 3168, 23, 3166, 33, 30, 37, 3163,
	93, 3162, 13, 179, 3161, 3160, 15, 3159, 3158, 11,
	12, 3157, 3156, 107, 3155, 87, 25, 156, 98, 3154,
	3152, 84, 206, 136, 3151, 3150, 95, 231, 198, 3149,
	130, 228, 251, 3148, 209, 3146, 3145, 3144, 3143, 3142,
	3139, 1055, 3138, 3134, 232, 67, 77, 105, 3133, 3132,
	3129, 78, 154, 117, 103, 56, 79, 3122, 106, 184,
	3120, 187, 3119, 3116, 99, 3103, 3101, 3100, 3099, 178,
	3098, 3097, 183, 224, 3096, 3095, 406, 3093, 3090, 3082,
	3081, 3080, 3076, 3074, 3072, 3071, 3052, 233, 225, 3043,
}

//line mysql_sql.y:10744
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) alterTypeOptionUnion() *tree.TypeOption {
	v, _ := st.union.(*tree.TypeOption)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionUnion() *tree.ConnectorOption {
	v, _ := st.union.(*tree.ConnectorOption)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) connectorOptionsUnion() []*tree.ConnectorOption {
	v, _ := st.union.([]*tree.ConnectorOption)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) cycleOptionUnion() *tree.CycleOption {
	v, _ := st.union.(*tree.CycleOption)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) fillModeUnion() tree.FillMode {
	v, _ := st.union.(tree.FillMode)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) timeFillUnion() *tree.Fill {
	v, _ := st.union.(*tree.Fill)
	return v
}

func (st *yySymType) timeIntervalUnion() *tree.Interval {
	v, _ := st.union.(*tree.Interval)
	return v
}

func (st *yySymType) timeSlidingUnion() *tree.Sliding {
	v, _ := st.union.(*tree.Sliding)
	return v
}

func (st *yySymType) timeWindowUnion() *tree.TimeWindow {
	v, _ := st.union.(*tree.TimeWindow)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 552, 555, 555, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 116, 116, 115, 537, 537, 537, 538,
	538, 112, 134, 133, 136, 136, 135, 135, 132, 132,
	128, 131, 131, 130, 130, 129, 124, 126, 126, 125,
	127, 127, 113, 101, 114, 482, 482, 481, 481, 480,
	480, 433, 433, 479, 479, 479, 478, 478, 478, 477,
	477, 476, 476, 475, 475, 473, 473, 474, 472, 471,
	471, 471, 469, 469, 469, 465, 465, 467, 466, 466,
	468, 460, 460, 463, 463, 461, 461, 461, 461, 464,
	459, 459, 459, 458, 458, 100, 100, 100, 377, 377,
	99, 99, 391, 391, 391, 391, 391, 389, 389, 389,
	389, 389, 389, 388, 388, 387, 387, 392, 392, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 90,
	90, 90, 90, 90, 95, 95, 95, 543, 543, 542,
	542, 544, 544, 544, 544, 545, 545, 93, 93, 93,
	94, 386, 386, 386, 91, 92, 92, 376, 376, 381,
	381, 380, 380, 380, 380, 380, 380, 380, 380, 380,
	380, 380, 380, 380, 385, 385, 385, 383, 383, 382,
	382, 384, 384, 84, 84, 84, 87, 86, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 85, 85, 85,
	85, 85, 85, 80, 80, 80, 80, 80, 79, 79,
	81, 81, 373, 373, 372, 96, 96, 97, 540, 540,
	539, 541, 541, 541, 541, 98, 104, 104, 104, 104,
	104, 104, 104, 103, 103, 106, 106, 105, 107, 89,
	89, 89, 89, 89, 89, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 507, 507, 507, 509, 509, 310,
	311, 556, 313, 309, 309, 309, 503, 503, 504, 505,
	506, 506, 506, 102, 11, 11, 11, 11, 11, 11,
	11, 11, 13, 78, 83, 256, 256, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 244,
	244, 244, 239, 239, 239, 239, 240, 240, 241, 241,
	242, 242, 242, 242, 243, 243, 303, 303, 261, 261,
	261, 263, 263, 262, 260, 258, 258, 258, 258, 258,
	258, 259, 259, 259, 264, 264, 76, 82, 82, 82,
	520, 520, 77, 531, 531, 436, 436, 324, 324, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 441, 442, 320, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 46, 46,
	46, 46, 46, 46, 46, 46, 46, 46, 53, 56,
	52, 52, 52, 362, 362, 51, 557, 557, 298, 298,
	64, 63, 55, 65, 66, 67, 68, 69, 70, 50,
	62, 62, 62, 62, 62, 62, 62, 62, 73, 454,
	454, 559, 559, 559, 71, 72, 435, 435, 435, 61,
	60, 59, 58, 57, 57, 49, 49, 48, 48, 54,
	140, 141, 317, 317, 317, 319, 319, 315, 558, 558,
	405, 405, 318, 318, 47, 47, 47, 47, 74, 316,
	316, 297, 314, 314, 314, 12, 12, 10, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 25, 26, 28, 370, 370, 367, 27, 19,
	18, 18, 22, 21, 17, 17, 20, 23, 24, 24,
	9, 9, 9, 9, 14, 14, 15, 161, 161, 212,
	212, 515, 515, 511, 511, 512, 512, 512, 513, 513,
	514, 514, 108, 448, 448, 448, 448, 448, 448, 8,
	183, 183, 447, 447, 447, 447, 447, 447, 374, 374,
	374, 492, 492, 492, 493, 182, 182, 177, 177, 449,
	449, 339, 494, 494, 457, 457, 456, 456, 455, 455,
	180, 180, 181, 181, 164, 164, 119, 119, 462, 462,
	462, 462, 470, 470, 432, 432, 248, 248, 290, 290,
	291, 291, 154, 154, 155, 155, 155, 155, 155, 155,
	546, 546, 547, 548, 549, 549, 550, 550, 550, 551,
	551, 551, 551, 551, 500, 500, 502, 502, 501, 179,
	179, 175, 175, 176, 176, 176, 174, 174, 173, 172,
	172, 171, 169, 169, 169, 170, 170, 170, 187, 187,
	157, 157, 157, 156, 156, 156, 156, 156, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 275, 275,
	158, 158, 508, 508, 508, 437, 437, 437, 444, 444,
	272, 272, 273, 273, 271, 271, 159, 159, 160, 160,
	160, 160, 270, 270, 269, 162, 162, 168, 167, 167,
	163, 163, 163, 163, 280, 280, 279, 279, 279, 279,
	111, 117, 117, 118, 186, 186, 278, 277, 277, 277,
	185, 185, 184, 184, 178, 178, 166, 166, 166, 166,
	276, 165, 274, 536, 536, 535, 535, 534, 532, 532,
	532, 533, 533, 533, 533, 484, 484, 484, 484, 484,
	304, 304, 304, 308, 308, 307, 307, 307, 307, 307,
	312, 7, 7, 7, 7, 7, 7, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	38, 196, 197, 39, 198, 198, 199, 199, 200, 200,
	201, 202, 203, 203, 203, 203, 37, 188, 188, 189,
	189, 190, 190, 191, 192, 192, 192, 195, 193, 194,
	194, 554, 554, 553, 36, 36, 29, 147, 147, 148,
	148, 148, 150, 150, 245, 245, 245, 149, 149, 151,
	151, 151, 516, 519, 517, 517, 521, 521, 521, 522,
	522, 522, 522, 523, 523, 30, 137, 142, 526, 526,
	526, 525, 525, 527, 527, 528, 528, 294, 294, 295,
	295, 145, 146, 146, 144, 139, 153, 153, 153, 153,
	153, 138, 143, 518, 524, 524, 524, 371, 371, 368,
	369, 369, 366, 365, 365, 365, 530, 530, 529, 529,
	529, 305, 305, 31, 361, 361, 363, 364, 364, 364,
	355, 355, 355, 355, 35, 359, 359, 360, 360, 360,
	360, 360, 360, 360, 356, 356, 358, 358, 354, 354,
	354, 354, 354, 354, 34, 152, 152, 353, 353, 350,
	350, 348, 348, 349, 349, 347, 347, 347, 351, 351,
	42, 75, 43, 44, 45, 41, 41, 41, 352, 352,
	33, 33, 33, 121, 120, 120, 120, 120, 120, 123,
	123, 293, 293, 292, 292, 122, 40, 224, 224, 424,
	424, 419, 419, 419, 419, 419, 439, 439, 439, 420,
	420, 420, 421, 421, 421, 423, 423, 423, 422, 422,
	422, 422, 422, 438, 438, 440, 440, 440, 393, 393,
	394, 394, 394, 397, 397, 411, 411, 412, 412, 410,
	410, 417, 417, 416, 416, 415, 415, 414, 414, 413,
	413, 413, 413, 408, 408, 407, 407, 395, 395, 395,
	395, 395, 396, 396, 396, 406, 406, 409, 409, 268,
	268, 267, 267, 232, 232, 233, 233, 266, 266, 230,
	230, 231, 231, 231, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 265, 490,
	490, 491, 235, 235, 246, 246, 246, 246, 246, 246,
	234, 234, 236, 236, 213, 213, 211, 211, 204, 204,
	205, 205, 206, 206, 206, 210, 210, 209, 209, 209,
	209, 207, 207, 208, 208, 208, 208, 208, 208, 379,
	379, 487, 487, 488, 488, 483, 483, 483, 486, 486,
	486, 486, 486, 486, 489, 489, 489, 485, 485, 214,
	288, 288, 288, 306, 306, 306, 306, 287, 287, 287,
	229, 229, 228, 228, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 378, 378, 321, 321,
	322, 322, 255, 254, 254, 254, 254, 254, 252, 253,
	251, 251, 251, 251, 251, 250, 250, 249, 249, 249,
	357, 357, 247, 247, 238, 238, 238, 237, 237, 237,
	418, 328, 328, 328, 328, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 286, 286, 286, 331,
	331, 336, 336, 499, 499, 498, 215, 215, 215, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 225, 225,
	225, 402, 402, 402, 402, 403, 403, 403, 403, 404,
	404, 404, 400, 400, 401, 401, 340, 341, 341, 445,
	445, 446, 446, 398, 398, 399, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 453, 453, 453, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 510, 510, 510, 495, 495,
	495, 496, 496, 496, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	284, 284, 284, 283, 283, 283, 283, 283, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 283, 342, 342,
	343, 343, 450, 450, 450, 450, 450, 450, 451, 451,
	452, 452, 452, 452, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 329, 281, 281, 281, 344, 337, 337,
	338, 338, 332, 332, 332, 332, 332, 332, 332, 334,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	327, 327, 327, 327, 327, 327, 327, 327, 327, 327,
	327, 333, 333, 335, 335, 346, 346, 346, 345, 345,
	345, 345, 345, 345, 345, 227, 227, 227, 227, 326,
	326, 326, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 217, 217, 217, 217, 221, 221,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 222, 222, 222, 222, 222, 220,
	220, 220, 220, 220, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 109, 110, 110, 219, 289, 289, 425, 425,
	428, 428, 426, 426, 427, 429, 429, 429, 430, 430,
	430, 431, 431, 431, 434, 434, 296, 296, 296, 302,
	302, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 6, 4, 0, 1, 1, 0,
	1, 5, 2, 2, 6, 9, 6, 9, 4, 7,
	8, 0, 1, 1, 2, 4, 6, 1, 2, 4,
	0, 2, 10, 10, 2, 0, 2, 1, 3, 3,
	3, 0, 2, 1, 3, 5, 0, 2, 3, 1,
	3, 1, 1, 1, 3, 1, 1, 1, 1, 0,
	3, 3, 0, 3, 3, 0, 1, 3, 0, 1,
	3, 0, 2, 1, 2, 3, 4, 3, 3, 1,
	0, 1, 1, 0, 1, 8, 5, 7, 0, 3,
	8, 5, 1, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 4, 1, 3, 1,
	2, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	2, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 4, 1, 3, 3,
	1, 2, 2, 2, 1, 2, 2, 3, 4, 4,
	6, 1, 1, 1, 2, 4, 6, 1, 4, 1,
	3, 3, 4, 4, 4, 4, 3, 3, 2, 4,
	4, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 2, 2, 0, 1,
	4, 2, 4, 1, 5, 3, 2, 1, 2, 2,
	4, 4, 5, 2, 1, 3, 4, 4, 1, 2,
	9, 7, 1, 3, 3, 1, 1, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 2, 4, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 3, 4, 7, 2,
	3, 3, 4, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 2, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 10, 7, 4, 1, 3, 2, 4, 5,
	5, 6, 5, 5, 3, 2, 2, 1, 3, 4,
	3, 7, 5, 8, 2, 2, 1, 3, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	2, 1, 3, 2, 1, 2, 2, 1, 2, 3,
	2, 3, 3, 3, 1, 1, 7, 7, 8, 8,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	2, 5, 5, 0, 2, 7, 0, 1, 0, 1,
	5, 5, 3, 3, 2, 4, 4, 4, 4, 4,
	1, 1, 1, 3, 3, 1, 1, 1, 6, 0,
	1, 1, 1, 1, 5, 5, 0, 1, 1, 3,
	3, 3, 4, 6, 7, 4, 4, 7, 8, 3,
	3, 3, 0, 2, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 4, 5, 4, 3, 1,
	3, 1, 1, 3, 5, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 4, 1, 3, 1, 4, 6,
	6, 4, 4, 4, 4, 4, 3, 6, 3, 5,
	1, 1, 2, 2, 11, 8, 9, 1, 3, 2,
	4, 0, 2, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 4, 2, 1, 5, 4, 4, 2, 5,
	1, 3, 2, 1, 5, 4, 4, 2, 0, 5,
	4, 0, 1, 3, 3, 1, 3, 1, 3, 1,
	3, 4, 0, 1, 0, 1, 1, 3, 1, 1,
	0, 4, 1, 3, 2, 1, 0, 8, 0, 4,
	7, 4, 0, 2, 0, 2, 0, 2, 0, 4,
	1, 3, 1, 1, 6, 4, 5, 7, 4, 5,
	0, 1, 3, 8, 0, 6, 0, 4, 6, 1,
	1, 1, 1, 1, 2, 3, 1, 3, 6, 0,
	3, 0, 1, 2, 4, 4, 0, 1, 3, 1,
	3, 3, 0, 1, 1, 0, 2, 2, 0, 2,
	3, 3, 3, 1, 3, 3, 3, 3, 1, 2,
	2, 1, 2, 2, 1, 2, 2, 1, 2, 2,
	7, 7, 1, 1, 1, 0, 1, 1, 1, 1,
	0, 2, 0, 3, 0, 2, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 4, 4, 3, 2, 2, 2, 3, 2, 3,
	4, 1, 3, 4, 0, 2, 1, 1, 2, 2,
	0, 1, 2, 4, 1, 3, 1, 3, 2, 3,
	1, 4, 3, 0, 1, 1, 2, 5, 2, 2,
	2, 0, 2, 3, 3, 0, 1, 3, 1, 3,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	7, 1, 1, 7, 1, 3, 0, 1, 1, 3,
	1, 3, 0, 1, 1, 1, 14, 1, 3, 0,
	1, 1, 3, 1, 1, 2, 4, 1, 1, 1,
	1, 0, 1, 2, 9, 9, 7, 1, 2, 3,
	3, 3, 0, 4, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 4, 1, 1, 3, 4, 3, 0,
	1, 1, 1, 0, 2, 7, 8, 8, 0, 3,
	3, 0, 3, 0, 3, 0, 5, 1, 3, 0,
	3, 3, 0, 2, 9, 6, 0, 2, 2, 3,
	3, 4, 4, 1, 0, 2, 2, 1, 3, 2,
	1, 3, 2, 1, 3, 2, 0, 1, 3, 4,
	3, 1, 1, 4, 1, 3, 1, 1, 1, 1,
	0, 1, 1, 1, 11, 0, 2, 3, 3, 2,
	2, 3, 1, 1, 1, 3, 3, 4, 0, 2,
	2, 2, 2, 2, 6, 0, 4, 1, 1, 0,
	3, 0, 1, 1, 2, 4, 4, 4, 0, 1,
	8, 2, 4, 4, 4, 9, 10, 8, 0, 2,
	11, 9, 11, 2, 2, 9, 4, 5, 3, 0,
	4, 1, 3, 0, 3, 5, 10, 0, 2, 0,
	2, 0, 3, 2, 4, 3, 0, 2, 1, 0,
	2, 3, 0, 2, 3, 0, 2, 1, 0, 3,
	2, 4, 3, 0, 1, 0, 1, 1, 0, 6,
	0, 3, 5, 0, 4, 0, 3, 1, 3, 4,
	5, 0, 3, 1, 3, 2, 3, 1, 2, 0,
	4, 6, 5, 0, 2, 0, 2, 4, 5, 4,
	5, 1, 5, 6, 5, 0, 3, 0, 1, 1,
	3, 3, 3, 0, 4, 1, 3, 3, 3, 0,
	1, 1, 3, 2, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 5, 4, 1,
	3, 3, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 0, 1,
	1, 3, 1, 1, 1, 1, 1, 7, 9, 7,
	9, 2, 1, 7, 9, 7, 9, 8, 5, 0,
	1, 0, 1, 1, 1, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 3,
	1, 3, 5, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 2, 1, 2, 2, 1, 1, 2,
	2, 2, 3, 3, 2, 2, 1, 5, 6, 4,
	1, 1, 1, 5, 4, 1, 1, 2, 0, 1,
	1, 2, 5, 0, 1, 1, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 2, 2,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 3, 5, 2,
	2, 2, 2, 1, 1, 2, 5, 6, 6, 6,
	6, 1, 1, 1, 1, 1, 4, 4, 4, 0,
	2, 0, 1, 1, 2, 4, 1, 2, 2, 1,
	2, 2, 1, 2, 2, 2, 2, 2, 0, 1,
	1, 1, 2, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 5, 0, 1, 3, 0, 1, 0,
	2, 0, 2, 0, 1, 6, 8, 8, 6, 6,
	5, 5, 5, 6, 6, 6, 6, 5, 6, 6,
	6, 6, 6, 6, 6, 6, 1, 1, 1, 4,
	4, 6, 8, 6, 4, 5, 4, 4, 4, 3,
	4, 6, 6, 7, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 8, 4, 2, 3, 2, 4, 2, 2,
	4, 6, 2, 2, 4, 6, 4, 2, 0, 1,
	2, 3, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 1, 3, 0, 1,
	1, 3, 3, 3, 3, 3, 2, 1, 1, 3,
	4, 3, 4, 3, 4, 3, 4, 3, 4, 1,
	3, 4, 4, 5, 4, 5, 3, 4, 5, 6,
	1, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 1, 1, 2, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 4,
	4, 1, 2, 3, 5, 1, 1, 3, 0, 1,
	0, 3, 0, 3, 3, 0, 3, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 1, 2, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -552, -555, -2, -5, 608, -1, -4, -110, -84,
	-7, -112, -113, -8, -108, -9, -10, -12, -88, -103,
	-105, -107, -106, -46, -11, -102, -79, -80, -90, -96,
	-99, -100, -101, -114, -109, -111, -154, -115, -116, 598,
	-85, -86, -87, -32, -31, -30, -29, -137, -142, 604,
	443, 13, 492, -14, -15, -500, -16, 257, -309, -310,
	-311, -313, -556, -47, -48, -49, -57, -58, -59, -60,
	-61, -71, -72, -73, -50, -51, -52, -55, -53, -64,
	-63, -65, -66, -67, -68, -69, -70, -54, -140, -141,
	-74, -56, -75, -77, -76, -82, -78, -83, -139, -144,
	-13, 232, -81, 75, -91, -92, -93, -94, -95, -97,
	-98, 367, 373, 430, 597, 60, -155, -157, 612, 613,
	157, 158, 160, 161, -33, -34, -35, -36, -37, -38,
	-40, -39, -41, -42, -43, -44, -45, 228, 15, 535,
	-17, -20, -18, -21, -19, -27, -28, -26, -23, -25,
	-138, -24, -143, -22, 252, 251, 37, 318, 319, 320,
	371, 250, 229, 14, 30, 41, 347, -156, 81, 527,
	528, 530, 230, -158, 12, 616, -6, -3, -2, -124,
	-128, -132, -135, -136, -133, -134, -4, -110, 115, 242,
	599, -306, 363, 600, 602, 601, 84, 92, -299, -301,
	367, 373, 597, 613, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 564,
	565, 555, 556, 557, 558, 559, 560, 561, 562, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 495, 584, 585, 586, 587, 523, 583,
	345, 346, 532, 269, 293, 398, 299, 306, 157, 176,
	170, 198, 190, 528, 165, 273, 311, 274, 91, 160,
	478, 105, 455, 427, 163, 288, 290, 292, 524, 525,
	295, 294, 296, 298, 526, 275, 348, 186, 181, 287,
	271, 179, 276, 39, 277, 203, 278, 279, 537, 451,
	344, 457, 303, 425, 180, 452, 291, 454, 207, 211,
	469, 470, 174, 175, 459, 472, 202, 205, 206, 249,
	342, 343, 42, 534, 261, 473, 209, 201, 197, 481,
	307, 305, 200, 173, 196, 272, 64, 213, 212, 214,
	421, 422, 423, 424, 280, 281, 361, 468, 193, 182,
	349, 166, 22, 476, 256, 456, 374, 282, 300, 308,
	208, 210, 263, 268, 536, 527, 429, 267, 304, 474,
	178, 260, 289, 255, 477, 167, 530, 376, 283, 161,
	297, 471, 480, 63, 389, 172, 164, 246, 158, 265,
	270, 284, 285, 286, 521, 310, 309, 301, 529, 194,
	262, 199, 184, 171, 195, 159, 264, 479, 390, 595,
	347, 408, 192, 189, 266, 239, 475, 458, 162, 412,
	391, 187, 312, 591, 592, 593, 362, 341, 313, 314,
	185, 253, 449, 450, 317, 418, 333, 392, 428, 399,
	393, 220, 221, 321, 461, 463, 204, 594, 322, 323,
	324, 453, 325, 326, 327, 328, 366, 55, 57, 93,
	95, 614, 62, -384, -382, -306, 528, 597, 373, 527,
	530, 367, 347, 613, -198, -306, 615, -164, 38, -211,
	-306, -164, -81, -15, -14, -156, -157, -211, 236, -314,
	23, 425, -89, 426, 232, 81, -306, -9, -101, -8,
	-108, -79, -154, 430, -312, -306, 318, 318, -312, 236,
	-306, 267, 406, -436, 242, -388, -361, 268, -387, -363,
	-390, -364, 31, 228, 230, 229, 264, 15, 371, 238,
	13, 12, 372, 250, 24, 25, 27, 14, 373, 375,
	28, 376, 379, 380, 381, 41, 384, 385, 257, 84,
	92, 87, 275, -197, -306, -338, -332, 112, 258, -334,
	-327, -328, -330, -479, -473, -325, 81, 139, 140, 147,
	113, -329, -418, 35, 115, 544, 583, 493, -282, -283,
	-284, -285, -286, -306, -474, -472, 87, 96, 99, 102,
	103, 101, 100, 151, 183, 98, 88, 152, -157, 84,
	-495, 553, -300, 576, 584, 585, 586, 587, 575, 60,
	-443, -452, 235, -450, 150, 188, 253, 184, 13, 145,
	418, 185, 550, 572, 495, 554, 564, 579, 546, 547,
	548, 541, 542, 543, 545, 555, 557, 571, -453, 567,
	577, 578, 563, 580, 581, 582, 86, 85, 570, 569,
	556, 551, 552, 558, 540, 549, 559, 560, 568, 573,
	574, 355, 105, 356, 357, 485, 348, 358, 242, 425,
	69, 359, 360, 361, 362, 363, 492, 364, 70, 365,
	354, 257, 408, 366, 187, 204, 497, 496, 498, 489,
	486, 484, 487, 488, 490, 491, 561, 562, 566, -117,
	-118, 589, -546, -275, -547, 6, 7, 8, 9, -548,
	152, -537, 427, 536, 87, 162, 159, -375, 162, 111,
	167, 166, -375, 321, 263, -352, -147, 345, 408, 325,
	93, 267, -355, -353, 524, -438, 315, 311, 237, 108,
	-148, 247, 246, 106, 485, 235, 382, 306, 55, 57,
	-511, -512, 225, 226, 227, -502, 518, -501, -306, 357,
	95, 26, 236, 368, 263, 463, 461, 462, 464, 465,
	466, 467, -62, -454, -435, 458, 457, -318, 450, 456,
	448, 460, 451, 346, 327, 326, 228, 609, 525, 519,
	-296, 392, 428, 482, 483, 369, 429, 469, 471, 452,
	105, 191, 188, 237, 239, 236, 345, 485, 408, 93,
	325, -511, 159, 469, 471, 267, 406, 40, -381, 418,
	-380, -382, 470, 481, 85, 86, 468, -296, 105, 449,
	449, -546, -275, -155, -157, -111, -500, 526, 526, 526,
	237, 345, 408, 267, 238, 236, 522, 524, 239, 485,
	235, 318, 368, 263, 325, 93, -437, -508, 31, -444,
	222, 223, 224, 32, 33, -1, 119, 616, -332, -332,
	-6, 619, -6, -332, -306, -306, 154, -217, -221, -218,
	-220, -219, -223, -222, 188, 189, 150, 192, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 205, 206, 203,
	30, 204, 253, 184, 185, 186, 187, 207, 170, 190,
	533, 215, 171, 216, 172, 217, 173, 218, 174, 175,
	219, 176, 179, 180, 181, 182, 178, 153, 81, 153,
	87, -180, 259, -211, 153, -180, -546, -173, -174, 11,
	-211, -287, -306, 427, 122, -89, -89, 426, -503, -504,
	-505, -507, 232, 426, 425, 153, 275, 16, -312, -312,
	79, -211, -363, 267, -388, -361, 35, 78, 154, 240,
	154, 78, 81, 369, 345, 408, 370, 485, 236, 382,
	239, 267, 383, 345, 408, 236, 239, 485, 267, 345,
	236, 239, 408, 267, 383, 448, 449, 239, 26, 374,
	377, 378, 449, -458, 481, 154, 111, 108, 109, 110,
	-332, 129, -345, 122, 123, 124, 125, 126, 127, 128,
	136, 135, 146, 139, 140, 141, 142, 143, 144, 145,
	137, 138, 132, 112, 130, 134, 131, 114, -157, -332,
	-338, 60, -330, -330, -330, -330, -418, -336, -332, 81,
	81, 81, 153, 100, 87, -332, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, -451, 81,
	81, -342, -343, 81, 81, -325, -287, 81, 87, 87,
	81, 81, 81, 87, -343, -343, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, -174, 154,
	-173, 81, -173, -174, -158, -157, 31, 32, 31, 32,
	31, 32, 31, 32, -549, 606, 81, 96, 614, 220,
	474, 535, 165, 166, 167, -196, -306, -198, 368, 239,
	522, 521, 239, -148, -350, 242, -350, -350, -350, -350,
	238, -350, 23, 236, 236, 236, -350, 492, 122, 122,
	58, -513, 169, 154, -502, -179, 81, -317, 130, 134,
	-317, 23, 265, 265, 265, -317, 305, -557, -558, 16,
	132, -315, -558, -315, -315, -317, -559, 238, 459, 42,
	266, 265, -175, -176, 21, -175, 453, 449, -405, 454,
	455, -319, -558, -318, -317, -317, -318, -317, -317, -317,
	236, 239, 485, 325, 610, -557, -557, 30, 30, -436,
	-436, -211, -436, 519, -297, -306, -436, -436, -436, -514,
	241, -543, -542, 472, -545, 474, 159, -382, 159, -382,
	-363, 267, 267, 154, 122, 23, -383, 122, 133, -382,
	-382, -383, -383, -234, 40, -305, 150, -306, 87, -234,
	40, -540, -539, -211, -174, -158, -157, 82, 82, 82,
	529, 529, 529, -436, -436, -436, -436, -436, -438, -436,
	-436, -436, -436, -436, -312, -188, -306, -198, 242, -436,
	-436, -159, -160, 141, -332, -306, -159, -3, -126, -125,
	116, 117, 119, 600, 363, 599, 603, 597, -382, 40,
	-431, 390, 389, -425, -427, 81, -426, 81, -426, -426,
	-426, -426, -426, 81, 81, -428, 81, -428, -428, -425,
	-429, 81, -429, -430, 81, -430, -429, -306, -337, -338,
	-306, 38, -447, 60, -154, 81, 30, 81, -306, -448,
	60, -154, 81, 30, -174, -119, 38, -176, 20, 153,
	96, 87, -89, 82, 154, -506, 102, 103, -509, 202,
	194, -306, -104, 87, -7, -8, -9, -10, -46, -79,
	-154, -475, -473, 81, 31, 417, 78, 16, -389, 236,
	485, 368, 263, 239, 345, -387, -370, -367, -365, -305,
	-363, -366, -365, -392, -287, 449, -120, 432, 431, 317,
	-332, -332, -332, -332, -332, 101, 112, 341, 102, 103,
	-327, -346, 31, 313, 314, -328, -328, -328, -328, -328,
	-328, -328, -328, -328, -328, -328, -328, -335, -344, -418,
	81, 132, 130, 134, 131, 114, -330, -330, -328, -328,
	82, 154, -499, -498, 116, -332, -332, -332, -306, -496,
	-497, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 359, 354, 360, 358, 348, 366, 361, 362,
	187, 516, 517, 510, 511, 512, 513, 514, 515, -337,
	-337, -332, -496, -337, -281, 32, 31, -338, -338, -338,
	82, -332, -510, 339, 338, 340, -177, -306, -337, 82,
	82, 82, 96, -338, -338, -337, -328, -337, -497, -281,
	-281, -281, -281, 141, -338, -338, -281, -281, -281, -281,
	141, -281, -281, -281, -281, -281, -281, -281, -281, 82,
	82, 82, -175, -118, -456, -455, -332, 40, -119, -176,
	-550, 607, 81, -287, -538, 87, 87, 617, 475, 476,
	163, 166, 165, 34, 81, -188, -350, -350, 522, -350,
	-516, -306, 112, -371, -368, -365, -306, -306, -361, -306,
	-306, -211, -350, -350, -350, -211, -245, 52, 53, 54,
	-365, -149, 55, 56, -514, -501, 34, -178, -306, -271,
	17, -330, -330, -365, 267, -557, -317, -317, -298, -297,
	-319, -314, -319, -319, -271, -315, -317, -317, -332, -319,
	-315, -271, -306, 449, -271, -271, -405, -316, -306, -316,
	-350, -297, -298, -298, -211, -211, -256, -257, 233, 352,
	353, 231, 229, 11, 230, -265, 306, -351, 493, -240,
	-241, 76, 41, -243, 394, 387, 269, 273, 91, 274,
	427, 275, 238, 277, 278, 279, 294, 296, 249, 280,
	281, 282, 418, 283, 158, 295, 284, 285, 286, 370,
	-235, 6, 328, 40, 50, 51, 441, 440, 538, 535,
	270, -516, -516, 30, 30, -371, -306, -306, -167, -162,
	-166, -163, -168, -274, -276, -165, 81, -211, -157, -306,
	154, 473, 475, 476, -543, -383, -543, -383, 31, 417,
	-386, 417, 31, -361, -380, 469, 471, -376, 87, 418,
	-366, -385, 78, 150, -455, -383, -383, -385, -385, 149,
	154, -541, 474, 475, 225, -175, 96, 96, 96, -213,
	-211, -516, -370, -361, -306, -436, -213, -213, -213, -306,
	-306, 81, 153, 35, -306, -306, -270, 154, -269, 16,
	-307, -306, 34, 87, 153, -270, -127, -125, 118, -332,
	-6, 599, -332, -6, -6, -332, -6, -332, -434, 391,
	96, 96, -289, 87, -289, 96, 96, 96, 82, 87,
	-374, 78, -449, -339, -494, 589, -182, 82, -177, -492,
	-493, -177, -181, -306, -449, -182, 82, -492, -175, 590,
	-119, -172, -171, -332, -306, 23, -89, -504, 153, 154,
	-178, -389, -369, -366, -391, 141, -306, -377, 154, 535,
	620, 85, 240, -530, -529, 409, 82, 154, -459, 241,
	492, 87, 617, 425, 220, 221, 101, 341, 102, 103,
	-418, -338, -335, -330, -330, -328, -328, -333, 254, -333,
	111, -332, -331, -498, 118, -332, 34, 34, 154, 79,
	153, 82, 82, 16, 16, 82, -332, 82, 82, 82,
	82, 16, 16, -332, 82, 153, 82, 82, 82, 82,
	79, 82, 154, 82, 154, -338, -338, -332, -338, 82,
	82, 82, -332, -332, -332, -338, 82, -332, -332, -332,
	-332, -332, -332, -332, -332, -399, 444, -399, -399, 154,
	82, -119, 81, 96, 154, -293, -292, 87, 164, 167,
	167, 166, -197, -199, -200, -201, -202, -203, 132, 155,
	156, 81, -211, -211, -350, -211, -519, 395, 35, -531,
	154, 40, -529, 485, -145, 317, -354, 79, -152, 16,
	535, -211, -211, -211, -224, 34, 16, -161, -212, -306,
	81, 82, 154, -332, -362, 79, -306, -298, -271, -271,
	-319, -271, -271, 154, 22, -317, -319, -319, -315, 153,
	-297, -424, 34, -179, 154, -210, -303, -207, -209, 244,
	-322, -208, 247, -488, 245, 243, 106, 248, 302, 107,
	238, -303, -303, 244, -244, 240, 34, -303, -259, 238,
	302, 245, 20, -258, 238, 107, -306, 244, 248, 243,
	-302, 122, -296, 149, 240, 42, 370, -302, 539, -302,
	-302, -302, -302, -302, -302, -302, 276, 276, -302, -302,
	-302, -302, -302, -302, -302, -302, -302, -302, -302, 159,
	-302, -302, -302, -302, -302, -302, 81, 271, 272, -520,
	395, 30, 351, 351, -531, 30, -153, 345, 30, -277,
	-278, -279, -280, 67, 71, 73, 68, 69, 70, 74,
	30, 154, -304, -308, 34, -306, 87, -304, -157, -162,
	-167, -304, 81, -542, -544, 477, 474, 480, -385, -385,
	240, 81, 122, -385, -385, 40, -305, -539, 481, 475,
	-119, 154, 78, -213, -189, -190, -191, -192, -217, -287,
	189, 192, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 205, 206, 203, 204, 253, 184, 185, 186, 187,
	207, 170, 190, 171, 172, 173, 174, 175, 176, 179,
	180, 181, 182, 178, -306, -198, -271, -160, -162, -306,
	87, -306, 141, -271, 119, -6, 117, -131, -130, -129,
	120, 597, 603, 119, 119, 119, 82, 82, 82, 154,
	82, 82, 82, 154, 82, 154, -462, 454, 39, 154,
	81, 82, 154, 60, 154, 122, 82, 154, 82, 60,
	-119, 87, 154, -169, 36, 37, 153, 427, -306, -473,
	82, -391, 154, 240, 153, 153, -367, 373, -305, -369,
	20, 535, -287, 38, -293, 122, 617, -306, 82, -333,
	-333, 111, -330, -327, 82, 119, -332, 117, -215, -217,
	389, 390, -215, -216, -222, 150, 188, 253, 187, 186,
	184, 389, 390, -234, -306, -332, -332, 82, -332, -332,
	16, -306, -234, -328, -332, -174, -174, 82, 82, -398,
	-399, -398, -398, 82, 82, 82, 82, -398, 82, 82,
	82, 82, 82, 82, 82, 82, 81, -455, -551, 62,
	605, 61, 417, 101, 307, 154, 96, 618, 154, 122,
	167, 381, 82, 154, -287, -189, -179, 81, -232, 535,
	-211, -179, -522, 456, 397, 407, -302, -324, -323, 347,
	41, -441, 418, 403, 404, -368, 267, -306, -528, 94,
	122, 78, 332, 336, 333, 334, 335, -348, -349, -347,
	-351, -516, 81, 81, 81, 81, -419, 322, -217, -211,
	-161, -306, 16, 154, -515, 153, -1, -306, -361, -317,
	-271, -332, -332, -271, -317, -317, -319, -306, -419, -217,
	34, -257, -214, -287, -208, -487, -488, -350, -306, 107,
	-487, 107, 81, -214, -287, -287, -260, -316, -287, -306,
	-306, -306, -263, -262, -287, -306, -306, -306, 107, 107,
	-239, 40, 47, 48, 49, -302, -302, 191, -242, 40,
	417, 419, 420, 96, 96, 96, 96, 87, 87, 87,
	-302, -302, 96, 87, -308, 87, -489, 166, 44, 45,
	96, 96, 96, 96, 40, 87, -246, 40, 287, 291,
	288, 289, 290, 87, 96, 40, 96, 40, 96, 40,
	-306, 81, -490, -491, 87, -522, -302, 351, -382, 122,
	-324, -527, 317, -146, 91, 31, -183, 233, 230, -516,
	-373, -372, -287, -166, -166, -166, -166, 67, 67, 67,
	72, 67, 72, 67, -279, -373, -168, -179, -308, 82,
	-536, -535, -534, -532, 75, 241, 76, -337, 474, 478,
	479, -369, -320, 87, -376, -187, 23, -211, -211, -440,
	297, 298, 82, 154, -217, -273, 18, 153, -273, 115,
	-6, -127, -129, -332, -6, -332, 599, 363, 600, 87,
	96, 96, -470, 438, 433, 435, 107, -339, -457, -456,
	60, -154, -177, -449, -493, -455, -306, 60, -154, -449,
	-187, -462, -171, -170, 43, -306, 96, 16, -366, -361,
	141, 141, -306, 374, -377, 87, 396, 87, 236, 618,
	87, -293, -327, -332, 82, -225, 175, 174, -225, 82,
	82, -426, -426, -425, -428, -425, -225, -225, 82, 82,
	23, 82, 82, 82, -332, 82, 82, 154, -445, 494,
	-446, 565, -398, -398, -398, -398, -398, -398, -398, -398,
	-398, -398, -398, -398, -398, -398, -341, -340, 259, 82,
	154, -496, 154, -292, 87, 87, 87, -201, -217, 82,
	34, -204, -205, -206, -214, -207, -209, 34, 81, 81,
	34, -523, 91, -517, 87, -306, -524, 91, 398, 152,
	349, 40, 399, 400, 415, 344, 96, 96, 405, -518,
	-306, -153, -526, 51, 122, 87, -211, -347, -296, 149,
	278, 325, -268, -267, -306, 87, -204, -204, -204, -420,
	324, 20, 96, 140, -180, 79, 153, -162, -212, -306,
	141, 82, -271, -271, -271, -317, -420, -154, -261, 44,
	46, -217, -485, -306, -483, -485, -306, -483, -483, -350,
	-332, -261, -214, 240, 30, 230, -264, 330, 331, -378,
	303, 112, -378, 154, -169, -306, -234, -234, 30, 87,
	87, -213, 82, 154, 122, -523, -517, 122, -383, 87,
	-524, -528, 122, 87, 154, -183, -183, -271, 154, 122,
	-185, -184, 78, 79, -186, 78, -184, 67, 67, -271,
	-534, -533, 23, -488, -488, -488, 82, 82, 14, -191,
	40, -272, 19, 20, 141, -272, 119, 117, 119, 119,
	-306, 82, 82, -432, 591, -466, -468, 433, 20, 20,
	14, 241, 82, -449, -449, -470, 44, 45, -361, -377,
	418, -211, 154, 618, -332, 82, -332, 82, 87, 82,
	87, -174, 20, -332, 82, -496, 234, -154, 82, 154,
	-154, -233, -266, -306, 87, -204, -154, 87, -521, 409,
	87, 87, 96, 40, 96, 152, 401, -442, -146, -525,
	91, 122, 617, 81, -302, -302, -302, -306, 82, 154,
	-302, -302, 82, 82, 82, -421, 258, 96, 140, 96,
	140, 96, -304, -162, -306, -271, -515, 153, -271, -421,
	-287, -229, -228, -226, 101, 112, 40, 387, -227, 91,
	149, 292, 295, 294, 270, 293, -255, -321, 78, 393,
	330, 331, -351, 591, 523, 243, 106, 107, 375, -322,
	81, 81, 79, 312, 81, 81, -485, 82, -261, -287,
	40, -264, 40, 303, -262, 149, -234, 82, -491, 87,
	-521, 87, -385, -526, 87, -516, -174, -372, -455, -332,
	81, -332, 81, 67, 11, 18, -325, -332, -338, 242,
	-6, 600, 363, -248, 592, 87, 20, 87, -464, 87,
	-373, -432, -122, -460, -405, 275, 82, 82, -398, -398,
	-401, -400, -404, 439, 304, 447, -338, 82, 82, -193,
	-217, -150, 535, -232, -206, 82, 154, -302, -302, 82,
	-150, 20, 535, 348, 40, 96, 40, 402, 122, 102,
	103, -294, -295, 87, -356, -358, -287, 81, -234, -236,
	-305, 150, 87, -267, -325, -325, -230, -231, -265, -351,
	-121, -120, -230, -422, 158, 96, 140, 96, 96, -271,
	-271, -422, -226, 101, -328, 87, -236, -237, 40, 291,
	287, 122, 122, -238, 40, 271, 272, -247, 81, 302,
	14, 191, 81, 107, 107, -211, -356, -356, -486, 332,
	333, 334, 337, 336, 335, -486, -356, -356, 81, -379,
	-378, -328, -302, 149, -525, -175, -178, -484, -306, 243,
	20, 20, -306, -306, -290, 593, 96, 87, 435, -248,
	-433, 594, -469, 438, -463, -461, 433, 434, 435, 436,
	122, 82, -403, 114, 401, 405, -326, -329, 96, 99,
	183, 152, 534, -151, 59, 481, -266, -325, -325, -232,
	87, 396, 87, 348, 87, 618, 154, 122, 82, 154,
	-425, -332, -393, 259, 154, -265, -296, -122, -393, -439,
	166, 323, 535, 96, 140, 96, -174, -423, 166, 323,
	87, 87, 96, 81, -450, 30, 87, -357, 81, 82,
	82, 82, 82, -356, -234, -302, 82, 82, 154, 81,
	20, -290, 87, -471, 241, -467, -468, 437, -461, 20,
	435, 20, 20, 87, -402, -403, 405, -326, -329, 589,
	445, 445, 445, -195, -306, 302, 418, -295, 87, -359,
	-358, -169, 82, -394, 311, 20, -265, -302, -394, 323,
	96, 140, 96, -175, 323, 82, -332, -342, -302, 82,
	-250, -249, 531, -356, -359, 79, -359, 79, -359, 79,
	-359, 79, 82, -234, -306, 243, -291, -306, -464, -478,
	81, 96, -466, -465, -467, 20, -464, 20, -464, -464,
	-123, 154, 111, 446, 446, 446, -194, 34, 440, 374,
	-360, 249, 342, 343, 91, 535, 330, 331, -169, 20,
	-395, 304, 305, -396, -409, 307, -234, 96, 82, -306,
	-254, -252, -253, 78, 452, 300, 301, 82, -486, -486,
	-486, -486, -255, 82, 154, -482, 30, 82, -477, -476,
	-288, -472, -306, 438, 439, 87, -464, 442, -402, 87,
	-302, -302, 87, 87, 329, -287, 81, -407, 308, 81,
	-405, 81, -405, 107, 333, -378, -253, 78, -252, 78,
	15, 14, -359, -359, -359, -359, -306, -481, -480, -479,
	82, 154, 153, 122, -554, -553, 611, 96, 96, -306,
	-392, -397, 309, 96, -328, 81, -328, 81, -406, 306,
	81, -251, 297, 298, 30, 166, -251, 154, 122, -476,
	-306, 87, 87, 82, -411, 81, 20, 82, -392, 82,
	-392, 81, 122, -328, 101, 40, 299, -480, 40, -332,
	153, -412, -410, 259, -396, 82, 82, 82, -392, 96,
	82, -306, 82, 154, -306, -408, 310, 82, -410, -413,
	60, 96, -417, -414, 81, -265, 261, 132, -417, -265,
	-416, -415, 309, 262, 81, 82, 154, -306, 258, 81,
	-338, -415, -414, -338, 82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 0,
	263, 264, 265, 841, 842, 843, 844, 845, 846, 0,
	0, 0, 0, 600, 601, 0, 567, 0, 0, 0,
	0, 0, 0, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 354, 355, 356, 357, 358, 359, 360,
	361, 0, 288, 284, 209, 210, 211, 212, 213, 295,
	296, 435, 0, 0, 0, 0, 682, -2, 56, 0,
	277, 0, 268, 268, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, -2, 613, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 581, 343, 344, 345, 339, 340, 342,
	341, -2, 0, 613, 0, 0, 0, 690, 0, 0,
	0, 0, 0, 733, 755, 23, 0, 7, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 0, 0,
	19, 0, 19, 0, 0, 0, 1233, 1234, 1235, 1236,
	-2, 1734, 1712, 1885, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680,
	1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690,
	1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700,
	1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710,
	1711, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731,
	1732, 1733, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742,
	1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752,
	1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762,
	1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772,
	1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782,
	1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792,
	1793, 1794, 1795, 1796, 1797, 1798, 1799, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1886, 1887, 0, 261, 259, 1684, 1712, 1734, 1788,
	1799, 1800, 1834, 1885, 0, 864, 0, 660, 0, 665,
	1186, 660, 289, 602, 603, 690, 716, 565, 0, 325,
	0, 1725, 329, 0, 0, 0, 562, 319, 320, 321,
	322, 323, 324, 0, 0, 840, 0, 0, 315, 0,
	283, 1790, 0, 0, 0, 0, 0, 0, 153, 974,
	155, 976, 159, 166, 0, 0, 171, 172, 175, 176,
	177, 178, 179, 0, 183, 0, 185, 188, 0, 190,
	191, 0, 194, 195, 196, 0, 206, 207, 208, 977,
	978, 979, -2, 84, 862, 1642, 1530, 0, 1537, 1538,
	1549, 1560, 1313, 1314, 1315, 1316, 0, 0, 0, 0,
	0, 1323, 1324, 0, 1341, 1902, 1943, 0, 1331, 1332,
	1333, 1334, 1335, 93, 105, 106, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 0, 1590, 1591, 1592, 1503, 1300, 1233,
	0, 1911, 0, 1933, 1938, 1939, 1940, 1941, 1932, 0,
	0, 1488, 0, 1478, 0, 0, -2, -2, 0, 0,
	1859, -2, 1908, 1929, 1937, 1912, 1913, 1936, 1904, 1905,
	1906, 1899, 1900, 1901, 1903, 1915, 1917, 1928, 0, 1924,
	1934, 1935, 0, 0, 0, 0, 107, 108, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1494, -2, 1496, 1497, 1499, -2, 1501, 1502, -2,
	1505, 1506, 1507, -2, -2, 1510, 1511, 1512, 1513, 1514,
	1515, 1518, -2, -2, -2, -2, 1490, 1491, 1492, 1493,
	1482, 1483, 1484, 1485, 1486, 1487, -2, -2, -2, 716,
	791, 0, 716, 0, 691, 738, 741, 744, 747, 694,
	0, 0, 57, 58, 0, 278, 279, 267, 269, 0,
	273, 0, 266, 0, 0, 0, 0, 1009, 1009, 1009,
	1009, 1009, 0, 1009, 0, 0, 0, 0, 1009, 0,
	897, 981, 982, 983, 1007, 1008, 1074, 0, 0, 0,
	618, 614, 615, 616, 617, 704, 0, 706, 709, 542,
	542, 490, 0, 0, 0, 542, 0, 504, 496, 0,
	0, 0, 542, 0, 0, 711, 711, 0, 545, 552,
	542, 542, -2, 542, 542, 542, 0, 0, 1021, 510,
	511, 512, 496, 496, 515, 516, 517, 527, 528, 553,
	1666, 0, 0, 435, 435, 0, 435, 0, 435, 435,
	435, 620, 1829, 1732, 1805, 1790, 0, 0, 234, 1859,
	239, 0, 1733, 1752, 0, 0, 1770, 0, -2, 0,
	305, 716, 0, 0, 690, 0, 0, 0, 0, 0,
	435, 435, 435, 435, 435, 1073, 435, 435, 435, 435,
	435, 0, 0, 0, 435, 435, 0, 0, 756, 757,
	752, 753, 754, 758, 759, 5, 6, 19, 0, 0,
	0, 0, 0, 0, 63, 62, 0, 1643, 1661, 1595,
	1596, 1597, 1648, 1599, 1652, 1652, 1652, 1652, 1628, 1629,
	1630, 1631, 1632, 1633, 1634, 1635, 1636, 1652, 1652, 0,
	0, 1641, 1619, 1650, 1650, 1650, 1648, 1645, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1655, 1655, 1658, 1658, 1655, 0, 1528, 0,
	0, 0, 0, 664, 0, 0, 716, -2, 0, 0,
	566, 326, 1237, 0, 0, 330, 331, 0, 0, 346,
	0, 349, 334, 335, 336, 0, 133, 0, 317, 318,
	0, 0, 285, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 163, 160, 167, 170, 180, 187, 0,
	199, 201, 204, 161, 168, 173, 174, 181, 202, 162,
	164, 165, 169, 203, 205, 182, 186, 200, 184, 189,
	192, 193, 198, 0, 134, 0, 0, 0, 0, 0,
	1536, 0, 0, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 1530,
	0, 0, 1319, 1320, 1321, 1322, 1325, 0, 1342, 0,
	0, 0, 0, 1589, 1593, 0, 1528, 1528, 0, 1528,
	1524, 0, 0, 0, 0, 0, 0, 1528, 1464, 0,
	0, 1466, 1479, 0, 0, 1468, 1469, 0, 1472, 1473,
	1528, 0, 1528, 1477, 1460, 1461, 0, 1524, 1524, 1524,
	1524, 0, 0, 1524, 1524, 1524, 1524, 1524, 1524, 1524,
	1524, 1524, 1524, 1524, 1524, 0, 0, 0, 711, 0,
	717, 0, -2, 0, 735, 737, 739, 740, 742, 743,
	745, 746, 748, 749, 696, 0, 0, 59, 0, 0,
	0, 0, 271, 0, 276, 0, 861, 0, 0, 1009,
	1009, 0, 1009, 898, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1009, 1009, 1009, 0, 1029, 0, 0,
	0, 620, 619, 0, 705, 0, 0, 764, 0, 0,
	489, 0, 496, 542, 542, 502, 503, 498, 497, 548,
	549, 545, 0, 545, 545, 764, 0, 521, 522, 523,
	542, 542, 529, 712, 0, 530, 531, 545, 0, 550,
	551, 764, 0, 0, 764, 764, 0, 539, 540, 541,
	0, 0, 1009, 0, 558, 498, 498, 1667, 1668, 0,
	0, 1018, 0, 0, 0, 561, 0, 0, 0, 0,
	621, 214, 217, 0, 220, 0, 1829, 0, 1829, 0,
	227, 0, 0, 0, 0, 0, 0, 257, 258, 0,
	0, 0, 0, 248, 251, 1180, 1181, 971, 972, 252,
	253, 297, 298, 0, 711, 734, 736, 730, 731, 732,
	0, 0, 0, 0, 0, 0, 0, 0, 435, 0,
	0, 0, 0, 0, 596, 0, 877, 598, 0, 0,
	0, 772, 766, 768, 835, 93, 772, 8, 80, 77,
	0, 19, 0, 0, 19, 19, 0, 19, 262, 0,
	1664, 1662, 1663, 1598, 1649, 0, 1624, 0, 1625, 1626,
	1627, 1637, 1638, 0, 0, 1620, 0, 1621, 1622, 1623,
	1614, 0, 1615, 1616, 0, 1617, 1618, 260, 0, 1529,
	865, 0, 638, 652, 633, 0, 641, 0, 1187, 622,
	652, 624, 0, 641, 711, 688, 0, 666, 0, 0,
	327, 0, 332, 0, 0, 348, 350, 351, 352, 337,
	338, 563, 313, 314, 306, 307, 308, 309, 310, 311,
	312, 316, 103, 0, 286, 287, 0, 0, 0, 147,
	148, 149, 150, 151, 152, 154, 138, 585, 587, 963,
	975, 0, 966, 0, 157, 197, 130, 0, 0, 0,
	1531, 1532, 1533, 1534, 1535, 1539, 0, 1541, 1543, 1545,
	1547, 0, 1565, -2, -2, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1550, 1563, 1564,
	0, 0, 0, 0, 0, 0, 1561, 1561, 1556, 0,
	1317, 0, 1339, 1343, 0, 0, 0, 0, 94, 1523,
	1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 0,
	0, 1530, 0, 0, 0, 1525, 1526, 0, 0, 0,
	1419, 0, 0, 1425, 1426, 1427, 0, 647, 0, 1489,
	1465, 1480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 790, 792, 0, 656, 658, 659, 685, 666,
	692, 0, 0, 0, 55, 60, 53, 1043, 280, 281,
	0, 0, 275, 0, -2, 0, 0, 0, 1009, 0,
	0, 912, 0, 433, 957, 0, 0, 0, 973, 998,
	1005, 0, 0, 0, 0, 1047, 899, 904, 905, 906,
	900, 901, 907, 908, 0, 707, 0, 0, 804, 488,
	0, 543, 544, 493, 1790, 498, 764, 764, 505, 499,
	506, 547, 507, 508, 509, 545, 764, 764, 713, 542,
	545, 532, 546, 545, 535, 536, 0, 554, 559, 555,
	0, 557, 513, 514, 1049, 709, 364, 365, 406, 406,
	406, 389, 406, 0, 0, 377, 1669, 0, 0, 0,
	0, 386, 1669, 0, 1669, 1669, 1669, 1669, 1669, 1669,
	1669, 0, 0, 1669, 1669, 1669, 1669, 1669, 1669, 1669,
	1669, 1669, 1669, 1669, 0, 1669, 1669, 1669, 1669, 1669,
	1166, 1669, 0, 1019, 396, 397, 398, 399, 404, 405,
	0, 430, 0, 0, 0, 433, 0, 946, 777, 0,
	778, 779, 775, 806, 830, 830, 0, 830, 810, 1186,
	0, 0, 225, 226, 215, 0, 216, 0, 228, 229,
	0, 231, 232, 233, 240, 1732, 1805, 235, 237, 0,
	0, 241, 254, 255, 256, 0, 0, 246, 247, 0,
	0, 300, 301, 303, 0, 666, 1022, 1023, 1024, 582,
	1184, 583, 584, 588, 0, 0, 591, 592, 593, 594,
	595, 879, 0, 0, 951, 952, 764, 0, 773, 0,
	769, 836, 0, 838, 0, 764, 0, 78, 19, 0,
	71, 68, 0, 0, 0, 0, 0, 1644, 1594, 1665,
	0, 0, 0, 1646, 0, 0, 0, 0, 61, 668,
	629, 0, 632, 649, 0, 653, 0, 0, 645, 637,
	642, 0, 0, 662, 623, 0, 0, 628, 666, 0,
	689, 718, 719, 722, 1238, 0, 333, 347, 0, 0,
	0, 0, 141, 960, 0, 142, 146, 136, 0, 0,
	0, 965, 0, 962, 967, 0, 156, 0, 0, 131,
	132, 1034, 1043, 0, 0, 0, 1540, 1542, 1544, 1546,
	1548, 0, 1551, 1561, 1561, 1557, 0, 1552, 0, 1554,
	0, 1531, 0, 1344, 0, 0, 0, 0, 0, 0,
	0, 1409, 1410, 0, 0, 1414, 0, 1416, 1417, 1418,
	1420, 0, 0, 0, 1424, 0, 1463, 1481, 1467, 1470,
	0, 1474, 0, 1476, 0, 716, 716, 0, 0, 1383,
	1383, 1383, 0, 0, 0, 0, 1383, 0, 0, 0,
	0, 0, 0, 0, 0, 1336, 0, 1337, 1338, 0,
	793, 686, 0, 0, 0, 0, 1041, 0, 282, 270,
	272, 0, 0, 0, 867, 868, 870, 0, 873, 874,
	875, 879, 709, 1123, 0, 709, 919, 1669, 1010, 437,
	0, 0, 959, 0, 935, 0, 0, 0, -2, 0,
	0, 0, 0, 0, 1051, 0, 0, 0, 607, 611,
	23, 710, 0, 765, 491, 0, 492, 542, 500, 501,
	764, 524, 525, 0, 0, 764, 542, 542, 545, 0,
	556, 1051, 0, 0, 1018, 367, 0, 1195, 1196, 407,
	0, 1202, 1211, 1009, 1270, 0, 1211, 0, 0, 1213,
	1214, 0, 0, 0, 0, 390, 391, 0, 376, 0,
	0, 0, 0, 375, 0, 0, 417, 0, 0, 0,
	0, 1670, 1669, 1669, 0, 384, 385, 0, 388, 0,
	0, 0, 0, 0, 0, 0, 1669, 1669, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1157,
	0, 0, 0, 0, 0, 0, 0, 1172, 1173, 919,
	1669, 0, 0, 0, 437, 933, 942, 0, 0, 0,
	0, 0, 0, 797, 0, 0, 796, 0, 0, 0,
	0, 0, 709, 831, 0, 833, 834, 808, -2, 0,
	777, 813, 1528, 218, 219, 0, 0, 224, 242, 244,
	0, 0, 0, 243, 245, 249, 250, 299, 302, 304,
	728, 0, 0, 1075, 0, 880, 881, 883, 884, 0,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, 1717, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 878, 599, 762, 767, 774, 837,
	839, 94, 770, 762, 0, 81, 19, 80, 72, 73,
	0, 19, 0, 0, 0, 0, 1654, 1653, 1639, 0,
	1640, 1651, 1656, 0, 1659, 0, 672, 0, 0, 652,
	654, 0, 0, 652, 0, 0, 661, 0, 0, 652,
	728, 668, 0, 725, 723, 724, 0, 0, 564, 104,
	353, 0, 0, 0, 0, 0, 586, 0, 964, 138,
	0, 0, 158, 0, 0, 0, 1043, 1038, 1527, 1553,
	1555, 0, 1562, 1558, 1318, 1326, 1340, 0, 0, 1346,
	1358, 1358, 0, 0, 1349, 1652, 1652, 1352, 1648, 1650,
	1648, 1358, 1358, 0, 95, 0, 0, 1415, 0, 0,
	0, 648, 0, 0, 0, 1379, 1381, 1383, 1383, 1390,
	1384, 1391, 1392, 1383, 1383, 1383, 1383, 1397, 1383, 1383,
	1383, 1383, 1383, 1383, 1383, 1383, 1377, 657, 0, 0,
	699, 700, 701, 702, 703, 0, 0, 54, 1043, 0,
	274, 0, 0, 872, 0, 0, 0, 1188, 0, 0,
	0, 0, 923, 920, 921, 922, 0, 954, 438, 439,
	440, 441, 0, 0, 0, 958, 0, 946, 928, 0,
	0, 0, 999, 1000, 1001, 1002, 1003, 1004, -2, 1013,
	0, 0, 0, 1188, 1188, 1188, 1059, 0, 1048, 660,
	0, -2, 0, 0, 609, 0, 0, 805, 494, 764,
	518, 714, 715, 533, 764, 764, 542, 560, 1059, 1050,
	0, 366, 408, 0, 1201, 1227, 1212, 1227, 1271, 1227,
	1227, 1009, 0, 408, 0, 0, 378, 414, 0, 0,
	0, 0, 374, 411, 722, 415, 416, 418, 0, 420,
	380, 392, 393, 394, 395, 0, 0, 0, 387, 400,
	401, 402, 403, 1134, 1135, 1136, 1139, 1140, 1141, 1142,
	0, 0, 1145, 1146, 1147, 1148, 1149, 1224, 1225, 1226,
	1150, 1151, 1152, 1153, 1154, 1155, 1156, 1174, 1175, 1176,
	1177, 1178, 1179, 1158, 1159, 1160, 1161, 1162, 1163, 1164,
	1165, 0, 0, 1169, 0, 923, 0, 0, 0, 0,
	954, 935, 0, 945, 0, 947, 948, 0, 0, 630,
	764, 292, 0, 800, 794, 0, 783, 798, 799, 786,
	0, 788, 0, 784, 785, 764, 776, 807, 832, 809,
	812, 814, 815, 821, 0, 0, 0, 0, 221, 222,
	223, 230, 0, 457, 236, 684, 0, 1185, 589, 590,
	1076, 1077, 597, 0, 885, 760, 0, 0, 760, 76,
	79, 0, 74, 0, 0, 0, 0, 66, 64, 1647,
	0, 0, 674, 118, 0, 0, 0, 650, 0, 655,
	652, 636, 646, 635, 643, 644, 663, 652, 627, 626,
	687, 672, 720, 721, 0, 1239, 328, 0, 961, 138,
	143, 144, 145, 139, 137, 968, 0, 970, 0, 1036,
	0, 0, 1559, 1345, 1327, 1347, 1359, 1360, 1348, 1328,
	1329, 1350, 1351, 1353, 1354, 1355, 1356, 1357, 1330, 1411,
	0, 1413, 1421, 1422, 0, 1471, 1475, 0, 0, 0,
	0, 0, 1388, 1389, 1393, 1394, 1395, 1396, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 716, 1378, 0, 697,
	0, 0, 0, 1042, 1044, 860, 863, 869, 871, 0,
	0, 0, 1189, 1190, 1192, 1193, 1194, 0, 0, 1188,
	0, 896, 0, 0, 914, 915, 925, 0, 0, 0,
	443, 444, 0, 0, 0, 456, 452, 453, 454, 434,
	953, 942, 931, 0, 0, 941, 0, 1014, 1669, 1669,
	1669, 0, 0, 1119, 1669, 1669, 0, 0, 0, 1062,
	0, 0, 1053, 0, 830, 0, 0, 764, 608, 611,
	612, 708, 495, 537, 534, 764, 1062, 363, 379, 409,
	0, -2, 0, 1228, 0, 1215, 1228, 0, 0, 1227,
	0, 368, 408, 0, 0, 0, 421, 424, 425, 422,
	1266, 0, 423, 0, 413, 419, 1137, 1138, 0, 1143,
	1144, 0, 1168, 0, 0, 426, 0, 0, 0, 427,
	432, 928, 0, 943, 0, 949, 950, 716, 0, 0,
	780, 801, 0, 0, 781, 0, 782, 787, 789, 291,
	816, 0, 0, 818, 819, 820, 811, 238, 729, 882,
	0, 750, 0, 0, 771, 751, 0, 19, 0, 0,
	69, 1657, 1660, 676, 0, 673, 119, 0, 0, 0,
	0, 640, 651, 634, 625, 674, 726, 727, 140, 135,
	969, 121, 0, 1037, 0, 1423, 0, 1383, 1380, 1383,
	1382, 1374, 0, 0, 695, 0, 0, 902, 1123, 0,
	1027, 0, 1125, 1669, 1669, 0, 902, 924, 913, 0,
	955, 956, 0, 445, 446, 0, 449, 455, 926, 927,
	0, 0, 939, 0, 0, 0, 0, 1006, 1020, 0,
	0, 0, -2, 0, -2, 1068, 0, 1060, 0, 1052,
	0, 1055, 764, 764, -2, 605, 610, 0, 538, 1068,
	410, 1229, -2, 1242, 1244, 0, 1019, 1247, 1248, 0,
	0, 0, 0, 0, 0, 1292, 1256, 0, 0, 1260,
	1261, 1262, 0, 0, 1265, 0, 1577, 1578, 0, 1269,
	0, 0, 0, 0, 0, 0, 0, 1209, 369, 370,
	0, 372, 373, 1267, 412, 1669, 382, 1167, 1170, 1171,
	431, 428, 429, 931, 934, 631, 711, 293, 294, 802,
	0, 795, 825, 822, 0, 0, 886, 761, 763, 70,
	75, 0, 0, 678, 0, 675, 0, 669, 671, 129,
	639, 676, 91, 112, 0, 0, 1412, 1462, 1386, 1387,
	0, 1375, 0, 1369, 1370, 1371, 1376, 698, 693, 0,
	888, 895, 909, 1025, 1191, 1124, 0, 0, 0, 1123,
	894, 0, 0, 442, 447, 0, 450, 451, 0, 929,
	930, 0, 937, 0, 0, 994, 1648, 0, 1015, 1016,
	1182, 1183, 1017, 1120, 1121, 1122, 1078, -2, 1131, 0,
	1031, 121, 1078, 1056, 0, 1063, 0, 1061, 1054, 716,
	606, 1065, 1243, 1245, 1246, 1249, 1250, 1251, 1297, 1298,
	1299, 0, 0, 1254, 1294, 1295, 1296, 1255, 0, 0,
	0, 0, 0, 1575, 1576, 1290, 0, 0, 1216, 1218,
	1219, 1220, 1221, 1222, 1223, 1217, 0, 0, 0, 1208,
	1210, 371, 0, 1669, 944, 290, 0, 0, 826, 828,
	823, 824, 65, 67, 82, 0, 677, 120, 0, 678,
	83, 0, 109, 0, 122, 123, 0, 0, 0, 0,
	0, 1385, 1372, 0, 0, 0, 0, 0, 1579, 1580,
	1581, 0, 0, 0, 910, 911, 1126, 1127, 1128, 1026,
	916, 0, 918, 448, 932, 936, 939, 0, 985, 0,
	722, 0, 1080, 0, 1018, 1133, 1669, 1033, 1080, 1046,
	0, 1058, 0, 1070, 0, 1064, 711, 362, 0, 1067,
	1252, 1253, 0, 0, 1478, 1669, 0, 1285, 0, 985,
	985, 985, 985, 0, 381, 0, 803, 817, 0, 0,
	0, 667, 92, 96, 0, 118, 115, 0, 124, 0,
	0, 0, 0, 1039, 0, 1361, 0, 0, 0, 1365,
	1366, 1367, 1368, 0, 887, 0, 917, 938, 940, 984,
	995, 996, 722, 1030, 0, 1117, 1132, 0, 1032, 1057,
	1069, 0, 1072, 604, 1066, 1293, 0, 1259, 0, 1264,
	1273, 1286, 0, 0, 1197, 0, 1199, 0, 1203, 0,
	1205, 0, 0, 383, 827, 829, 0, 680, 670, 85,
	0, 0, 113, 114, 116, 0, 125, 0, 127, 128,
	1035, 0, 0, 1362, 1363, 1364, 0, 889, 890, 903,
	986, 1669, 1669, 0, 0, 0, 992, 993, 997, 0,
	1105, 0, 0, 1111, 0, 1118, 1137, 1071, 1257, 1263,
	1272, 1274, 1275, 0, 1287, 1288, 1289, 1291, 985, 985,
	985, 985, 1207, 679, 0, 1045, 0, 97, 0, 99,
	101, 102, 1230, 110, 111, 117, 126, 0, 1373, 891,
	0, 0, 989, 990, 0, 1081, 0, 1083, 0, 0,
	0, 0, 0, 1115, 0, 1258, 1276, 0, 1277, 0,
	0, 0, 1198, 1200, 1204, 1206, 681, 86, 87, 0,
	98, 0, 0, 0, 876, 892, 0, 987, 988, 991,
	0, 1085, 0, 1106, 0, 0, 0, 0, 0, 0,
	0, 1278, 1280, 1281, 0, 0, 1279, 0, 0, 100,
	1231, 1040, 893, 1082, 1079, 0, 1117, 1107, 0, 1109,
	0, 0, 0, 0, 1282, 1284, 1283, 88, 89, 90,
	0, 0, 1087, 0, 1103, 1108, 1110, 1112, 0, 1116,
	1114, 1232, 1086, 0, 1099, 1084, 0, 1113, 1088, -2,
	0, 1104, 1089, -2, 0, 1097, 0, 0, 1090, 1098,
	0, 1093, 0, 0, 0, 1092, 0, -2, 1100, 0,
	0, 1094, -2, 0, 1102, 1101,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 619, 616,
	123, 122, 124, 3, 620, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 617, 135, 618, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:785
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:792
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:798
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:806
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:812
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:816
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:831
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:835
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:841
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:846
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:850
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:882
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:890
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:898
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:908
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:928
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:934
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:941
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:949
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:955
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:964
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:974
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:982
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:990
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:998
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1008
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1016
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1026
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1033
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1042
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1052
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1056
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1062
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1066
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1072
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1081
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1091
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1095
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1101
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1110
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1114
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1120
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1141
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1154
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1161
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1165
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1171
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1175
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1181
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1188
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1196
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1200
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1214
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1218
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1222
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1227
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1231
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1235
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1241
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1250
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1261
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1265
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1271
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1275
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1281
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1285
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1291
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1315
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1334
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1338
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1342
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1347
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1351
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1358
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1366
		{
			yyVAL.str = ""
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1373
		{
			yyVAL.str = yyDollar[3].str
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1378
		{
			yyVAL.str = "\n"
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1385
		{
			yyVAL.str = yyDollar[3].str
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1390
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1394
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1418
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1422
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1428
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1434
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1452
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1469
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1492
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1496
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1500
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1505
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1509
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1515
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1528
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1539
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1552
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1556
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1566
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1579
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1592
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1598
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1604
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1611
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1619
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1628
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1632
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1636
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1640
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1644
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1648
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1655
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1659
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1665
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1672
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1681
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1685
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1691
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1695
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1699
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1703
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1707
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1711
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1715
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1719
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1723
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1727
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1731
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1735
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1739
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1743
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1747
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1751
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1755
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1759
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1763
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1767
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1771
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1775
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1779
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1783
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1787
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1791
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1795
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1799
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1803
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1807
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1811
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1815
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1819
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1823
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1827
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1831
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1835
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1839
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1843
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1847
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1851
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1855
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1859
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1863
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1867
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1871
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1875
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1879
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1883
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1887
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1900
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1907
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1914
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1924
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1928
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1934
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1941
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1949
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1953
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1957
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1961
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1967
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1971
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1977
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1984
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1991
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2000
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2030
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2034
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2038
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2044
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2050
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2054
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2061
		{
			yyVAL.str = yyDollar[3].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2067
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2071
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2077
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2085
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2094
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2103
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2111
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2119
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2142
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2165
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2172
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2179
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2187
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2194
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2201
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2210
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2214
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2218
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2224
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2228
		{
			yyVAL.str = yyDollar[1].str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2234
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2238
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2244
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2248
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2259
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2265
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2270
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2274
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2278
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2282
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2286
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2290
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2294
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2298
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2302
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2308
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2312
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2316
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2320
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2325
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2330
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2336
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2343
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2349
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2356
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2363
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2373
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2380
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2391
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2402
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2406
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2412
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2422
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2428
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2432
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2438
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2444
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2448
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2452
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2456
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2462
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2474
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2480
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2484
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2490
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2494
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2500
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2506
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2517
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2523
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2527
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2531
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2535
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2539
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2543
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2551
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2559
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2569
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2610
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2614
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2620
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2626
		{
			yyVAL.str = yyDollar[1].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2631
		{
			yyVAL.str = "true"
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2632
		{
			yyVAL.str = "false"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2633
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2638
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2655
		{
			yyLOCAL = &tree.AlterSequence{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].alterTypeOptionUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].cycleOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2671
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2682
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2691
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2695
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2701
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2708
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2717
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2727
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2736
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2746
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2756
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2765
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2773
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2777
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2781
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2785
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2789
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2798
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2804
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2808
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2812
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2816
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2820
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2824
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2828
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2832
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2837
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2868
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2872
		{
			yyVAL.str = string("COLUMN")
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2877
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2883
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2889
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2898
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2902
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2908
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2915
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2923
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2930
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2937
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2944
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2951
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2958
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2966
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2973
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2980
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2989
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2993
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3000
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3012
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3020
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3028
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3041
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3047
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3058
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3069
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3073
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3078
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3082
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3087
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3091
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3107
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3111
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3115
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3119
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3123
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3127
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3131
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3135
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3139
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3143
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3147
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3151
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3155
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3159
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3163
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3167
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3173
		{
			yyVAL.item = nil
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3178
		{
			yyVAL.item = nil
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3219
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3225
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3233
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3237
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3241
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3250
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3254
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3260
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3265
		{
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3269
		{
		}
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3274
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3284
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3294
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3302
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3308
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3314
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3320
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3326
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3332
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3338
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3347
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3351
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3355
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3359
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3363
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3367
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3371
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3375
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3381
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: yyDollar[4].unresolvedObjectNameUnion(),
				DbName:    yyDollar[5].str,
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3390
		{
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3392
		{
		}
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3401
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3411
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3420
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3424
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3428
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3434
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3440
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3446
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3452
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3461
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3471
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3483
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3487
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3493
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3505
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3519
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3525
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3532
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3537
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3541
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3545
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3550
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3554
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3560
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3573
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3577
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3583
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3588
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3592
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3596
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3602
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3608
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3612
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3618
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3624
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3628
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3632
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3638
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3642
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3667
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3676
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3685
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3694
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3698
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3704
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3713
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3722
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3732
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3736
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3742
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3748
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3754
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3758
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3764
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3770
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3779
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3786
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3797
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3802
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3809
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3825
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3838
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3849
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3853
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3859
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3864
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3871
		{
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3873
		{
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3876
		{
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3885
		{
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3889
		{
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3894
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3903
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3910
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3916
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3924
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3931
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3938
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3958
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3968
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3972
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3978
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3985
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3991
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3999
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4006
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:4013
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4032
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4036
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:4040
		{
			yyLOCAL = []*tree.UpdateExpr{nil}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4045
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4049
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4053
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4059
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4068
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4072
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4078
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4082
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4088
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4092
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4098
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4103
		{
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4107
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4114
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4118
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4125
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4130
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4134
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4140
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4144
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4150
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4154
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4159
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4163
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4176
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4183
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4190
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4208
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4227
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4233
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4240
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4244
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4257
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4261
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4266
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4270
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4277
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4282
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4289
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4295
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4299
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4303
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), TimeWindow: yyDollar[2].timeWindowUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4307
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), TimeWindow: yyDollar[3].timeWindowUnion(), OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Ep: yyDollar[6].exportParmUnion(), SelectLockInfo: yyDollar[7].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4311
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4315
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4324
		{
			yyLOCAL = yyDollar[1].timeWindowUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TimeWindow
//line mysql_sql.y:4330
		{
			yyLOCAL = &tree.TimeWindow{
				Interval: yyDollar[1].timeIntervalUnion(),
				Sliding:  yyDollar[2].timeSlidingUnion(),
				Fill:     yyDollar[3].timeFillUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.Interval
//line mysql_sql.y:4340
		{
			str := fmt.Sprintf("%v", yyDollar[5].item)
			v, errStr := util.GetInt64(yyDollar[5].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Interval{
				Col:  yyDollar[3].unresolvedNameUnion(),
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Sliding
//line mysql_sql.y:4359
		{
			str := fmt.Sprintf("%v", yyDollar[3].item)
			v, errStr := util.GetInt64(yyDollar[3].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			yyLOCAL = &tree.Sliding{
				Val:  tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64),
				Unit: yyDollar[5].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4373
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4377
		{
			yyLOCAL = &tree.Fill{
				Mode: yyDollar[3].fillModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Fill
//line mysql_sql.y:4383
		{
			yyLOCAL = &tree.Fill{
				Mode: tree.FillValue,
				Val:  yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4392
		{
			yyLOCAL = tree.FillPrev
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4396
		{
			yyLOCAL = tree.FillNext
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4400
		{
			yyLOCAL = tree.FillNone
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4404
		{
			yyLOCAL = tree.FillNull
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FillMode
//line mysql_sql.y:4408
		{
			yyLOCAL = tree.FillLinear
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4414
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4421
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4430
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4434
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4440
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4448
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4452
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4457
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4461
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4467
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4471
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4475
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4480
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4484
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4490
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4496
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4500
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4506
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4511
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4515
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4519
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4524
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4528
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4532
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4537
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4541
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4549
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4553
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4557
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4571
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4575
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4585
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4595
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4605
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4617
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4625
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4633
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4642
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4650
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4658
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4666
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4674
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4682
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4690
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4698
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4706
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4716
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4727
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4741
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4745
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4749
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4754
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4758
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4762
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4771
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4775
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4780
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4784
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4789
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4793
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4799
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4803
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4809
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4813
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4818
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4822
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4827
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4835
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4841
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4849
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4857
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4867
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4873
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4882
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4891
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4900
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4910
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4914
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4924
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4928
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4932
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4936
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4942
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4952
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4956
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4962
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4968
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4972
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4978
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4984
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4988
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4992
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4998
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5002
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5008
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:5012
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5018
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:5022
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5028
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5032
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5042
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5055
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:5061
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:5067
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:5080
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5091
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5098
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:5102
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:5108
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5118
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5122
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:5126
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5131
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5135
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5139
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5143
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5148
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5152
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5156
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5160
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5164
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5169
		{
			yyVAL.str = ""
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5173
		{
			yyVAL.str = yyDollar[1].str
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5177
		{
			yyVAL.str = yyDollar[2].str
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5183
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5189
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5193
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5197
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5201
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5205
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5211
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 860:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5250
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5260
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5266
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 863:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5272
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5282
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5287
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5293
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5300
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5304
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5310
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5316
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5321
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5325
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5329
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5333
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5340
		{
			if yyDollar[13].str == "" {
				yylex.Error("no function body error")
				return 1
			}
			if yyDollar[11].str == "python" && yyDollar[14].str == "" {
				yylex.Error("no handler error")
				return 1
			}

			yyLOCAL = &tree.CreateFunction{
				Replace:    yyDollar[2].streamOptionalUnion(),
				Name:       yyDollar[4].functionNameUnion(),
				Args:       yyDollar[6].funcArgsUnion(),
				ReturnType: yyDollar[9].funcReturnUnion(),
				Language:   yyDollar[11].str,
				Import:     yyDollar[12].boolValUnion(),
				Body:       yyDollar[13].str,
				Handler:    yyDollar[14].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5364
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5369
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5375
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5382
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5386
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5392
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5398
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5402
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5406
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5412
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5418
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5424
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:5428
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5434
		{
			yyVAL.str = ""
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5441
		{
			yyVAL.str = yyDollar[2].str
		}
	case 894:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5447
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5456
		{
			yyLOCAL = &tree.CreateView{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5468
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5480
		{
			yyVAL.str = yyDollar[1].str
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5484
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5490
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5494
		{
			yyVAL.str = "DEFINER = "
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5498
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5503
		{
			yyVAL.str = ""
		}
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5507
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5521
		{
			yyVAL.str = ""
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5529
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 913:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5535
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5545
		{
			yyVAL.str = yyDollar[1].str
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5549
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5555
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5562
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5568
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5576
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5582
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5589
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5596
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5604
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5610
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5619
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5631
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5643
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5655
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5661
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5668
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5676
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5682
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5690
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5696
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5704
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5710
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5719
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5723
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5728
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5732
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5739
		{
			yyVAL.str = yyDollar[3].str
		}
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5744
		{
			yyVAL.str = ""
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5748
		{
			yyVAL.str = yyDollar[2].str
		}
	case 944:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5754
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5768
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5782
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5788
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5794
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5800
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5809
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5818
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5827
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5832
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5838
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5846
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5952
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5956
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5962
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5972
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5976
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5982
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5992
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5996
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:6000
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6005
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6009
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6015
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6022
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:6028
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:6037
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6044
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6053
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:6057
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:6063
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6077
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6081
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:6085
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6090
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6094
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6098
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:6102
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6108
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			} else {
				io = &tree.IndexOption{IType: tree.INDEX_TYPE_INVALID}
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6129
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6133
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				} else if opt2.AlgoParamList > 0 {
					opt1.AlgoParamList = opt2.AlgoParamList
				} else if len(opt2.AlgoParamVectorSimilarityFn) > 0 {
					opt1.AlgoParamVectorSimilarityFn = opt2.AlgoParamVectorSimilarityFn
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6159
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6163
		{
			yyLOCAL = &tree.IndexOption{AlgoParamList: int64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6167
		{
			yyLOCAL = &tree.IndexOption{AlgoParamVectorSimilarityFn: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6171
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6175
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6179
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6183
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6189
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6193
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6199
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6204
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6209
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6213
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6217
		{
			yyLOCAL = tree.INDEX_TYPE_IVFFLAT
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6221
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6225
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6229
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6235
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6246
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6250
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6260
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6264
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6269
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6273
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6279
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6283
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6289
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6293
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6297
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6302
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6306
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6312
		{
			yyLOCAL = &tree.CreateConnector{
				TableName: yyDollar[4].tableNameUnion(),
				Options:   yyDollar[7].connectorOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6321
		{
			yyLOCAL = &tree.ShowConnectors{}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6327
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.PauseDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6345
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.CancelDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6363
		{
			var taskID uint64
			switch v := yyDollar[4].item.(type) {
			case uint64:
				taskID = v
			case int64:
				taskID = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
			yyLOCAL = &tree.ResumeDaemonTask{
				TaskID: taskID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6381
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6392
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6403
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6414
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6418
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6424
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6436
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6445
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6458
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6465
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6475
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.INLINE,
					Format:   yyDollar[4].str,
					Data:     yyDollar[8].str,
				},
				ExParam: tree.ExParam{
					JsonData: yyDollar[9].str,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6488
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6496
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6505
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					StageName: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:6514
		{
			yyVAL.str = ""
		}
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:6518
		{
			yyVAL.str = yyDollar[4].str
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6524
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6528
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6533
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6537
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6544
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6555
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6568
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6582
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6586
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TypeOption
//line mysql_sql.y:6590
		{
			yyLOCAL = &tree.TypeOption{
				Type: yyDollar[2].columnTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6596
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6600
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6607
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6614
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6621
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6628
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6632
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6636
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6640
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6644
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6651
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6658
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6662
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6669
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6676
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6680
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CycleOption
//line mysql_sql.y:6686
		{
			yyLOCAL = &tree.CycleOption{
				Cycle: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6692
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6696
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6703
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6710
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6717
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6724
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6728
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6733
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6737
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6741
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6746
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6750
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6760
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6764
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6771
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6782
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6791
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6795
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6801
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6805
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6811
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6820
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6830
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6834
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6840
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6844
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6850
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6857
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6866
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6870
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6875
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6879
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6884
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6888
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6893
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6897
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6907
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6911
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6922
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6930
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6938
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6946
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6957
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6966
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6976
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6986
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6990
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6995
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6999
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:7005
		{
			yyLOCAL = []*tree.ConnectorOption{yyDollar[1].connectorOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.ConnectorOption
//line mysql_sql.y:7009
		{
			yyLOCAL = append(yyDollar[1].connectorOptionsUnion(), yyDollar[3].connectorOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:7015
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ConnectorOption
//line mysql_sql.y:7019
		{
			yyLOCAL = &tree.ConnectorOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7024
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7028
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7034
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7038
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7044
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7048
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7053
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7057
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7063
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7067
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:7071
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7077
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7081
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7085
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7089
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7093
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7097
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7101
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7106
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7110
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7114
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7118
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7122
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7126
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7130
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7134
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7138
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7142
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7146
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7150
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7154
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7158
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7162
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7166
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7170
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7174
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7178
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7182
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7186
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7190
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7194
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7198
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7202
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7206
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7210
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:7214
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7220
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:7224
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:7230
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7236
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7240
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7246
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7250
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7254
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7258
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7262
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:7266
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7280
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:7284
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7293
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:7298
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7304
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7311
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7315
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7321
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7325
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7329
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7335
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7339
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7345
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7354
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7363
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7392
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "btree":
					keyTyp = tree.INDEX_TYPE_BTREE
				case "hash":
					keyTyp = tree.INDEX_TYPE_HASH
				case "rtree":
					keyTyp = tree.INDEX_TYPE_RTREE
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7423
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7437
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7443
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7452
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7461
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7470
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7479
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7489
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7497
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7503
		{
			yyVAL.str = ""
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7507
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7517
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7523
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7529
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7549
		{
			yyVAL.str = ""
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7553
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7559
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7565
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7569
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7573
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7579
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7583
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7587
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7591
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7597
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7601
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7605
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7610
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7614
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7620
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7624
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7630
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7634
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7638
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7642
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7646
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7650
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7655
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7659
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7663
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7667
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7671
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7675
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7679
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7683
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7687
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7691
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7704
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7708
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7712
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7716
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7720
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7724
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7730
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7734
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7739
		{
			yyVAL.str = ""
		}
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7743
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7749
		{
			yyVAL.str = ""
		}
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7753
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1272:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7759
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7771
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7778
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7785
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7792
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7799
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7808
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7814
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7820
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7824
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7828
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7832
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7836
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7841
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7848
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7852
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7856
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7861
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7865
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7870
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7874
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7890
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7896
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7900
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7904
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7908
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7912
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7916
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7920
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7924
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7928
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7932
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7936
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7940
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7944
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7950
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7954
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7958
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7962
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7966
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7970
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7974
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7978
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7982
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7986
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7990
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7994
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7999
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8007
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8011
		{
			yyLOCAL = tree.NewBitCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8015
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8019
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8028
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8032
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8036
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8040
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8044
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8050
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8058
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8066
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8075
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8079
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8084
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8088
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8094
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:8098
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:8104
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8113
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8125
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8142
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8159
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8172
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8185
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8197
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8211
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8226
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8241
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:8258
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8273
		{
		}
	case 1362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8280
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8284
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8288
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8294
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8298
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8302
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:8306
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8312
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8316
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8320
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8326
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8334
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8344
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8348
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8355
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8360
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8364
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8369
		{
			yyVAL.str = ","
		}
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8373
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8378
		{
			yyVAL.str = "1,vector_cosine_ops"
		}
	case 1382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8382
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8387
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8394
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8420
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8431
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8442
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8452
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8462
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8472
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8481
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8490
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8500
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8510
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8520
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8530
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8540
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8550
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8560
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8570
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8580
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8590
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8600
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8610
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8629
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8637
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8645
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8653
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8661
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8671
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8679
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8688
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8696
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8704
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8712
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8720
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8731
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8741
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8753
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8764
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8786
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8822
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8834
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8846
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8857
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8865
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8872
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8879
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8891
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8899
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8909
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8919
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8927
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8938
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8947
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8956
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8964
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8974
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8982
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8992
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8996
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9002
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9006
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9025
		{
		}
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:9027
		{
		}
	case 1523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9068
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9079
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9083
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:9087
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:9093
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9098
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9102
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9108
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:9112
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9119
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9123
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9127
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9135
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9139
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9143
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9147
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9153
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9157
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9161
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9165
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9169
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9173
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9177
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9181
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9185
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9189
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9197
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9201
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9205
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9209
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9213
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9217
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9221
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9225
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9229
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9233
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9239
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9243
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9249
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9253
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9260
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9264
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9268
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9274
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9278
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9282
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9286
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9290
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9294
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:9298
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9304
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9308
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9312
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:9316
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9322
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9335
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9340
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9346
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9350
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9363
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9368
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9372
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9376
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9380
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9384
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9391
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9395
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9409
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9413
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9420
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9431
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9436
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9442
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9454
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9466
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9478
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9491
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9504
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9517
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9530
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9543
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9556
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9569
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9582
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9595
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9608
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9623
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9650
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9692
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9728
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9764
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9781
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9793
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1621:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9813
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9833
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        yyDollar[2].lengthOptUnion(),
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9853
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9869
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9882
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9895
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9908
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9921
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9933
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9945
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9957
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9969
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9981
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9993
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10005
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10017
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10029
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10042
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10055
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10068
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10081
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10096
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10104
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1644:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:10113
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:10123
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10146
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:10151
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10157
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10164
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10168
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10173
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10177
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:10183
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10189
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10196
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1657:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10203
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10212
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10219
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1660:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:10226
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10235
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10239
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10243
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10249
		{
		}
	case 1665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:10251
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1669:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:10261
		{
			yyVAL.str = ""
		}
	case 1670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:10265
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
